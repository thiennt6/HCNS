[
  {
    "text": "ActionSheet",
    "name": "actionsheet",
    "component": "actionsheet",
    "api": "web/actionsheet",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/actionsheet/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=27"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/actionsheet"
    },
    "spriteCssClass": "actionSheetIcon",
    "items": [
      {
        "text": "Overview",
        "url": "actionsheet/index",
        "deferred": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik UI ActionSheet for ASP.NET MVC"
        },
        "meta": {
          "aspnet-mvc": "How jQuery-based ActionSheet widget works, view demo source code of Telerik UI ActionSheet for ASP.NET MVC."
        },
        "links": [
          {
            "text": "ActionSheet Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/actionsheet/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "actionsheet/api",
        "deferred": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik UI ActionSheet for ASP.NET MVC"
        },
        "meta": {
          "aspnet-mvc": "This demo of the Telerik UI ActionSheet for ASP.NET MVC demonstrates the position options of the widget."
        },
        "links": [
          {
            "text": "ActionSheet Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/actionsheet"
          }
        ]
      },
      {
        "text": "Events",
        "url": "actionsheet/events",
        "deferred": true,
        "hasConsole": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik UI ActionSheet for ASP.NET MVC"
        },
        "meta": {
          "aspnet-mvc": "This demo of the Telerik UI ActionSheet for ASP.NET MVC demonstrates the position options of the widget."
        },
        "links": [
          {
            "text": "ActionSheet Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/actionsheet/overview"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "actionsheet/keyboard-navigation",
        "deferred": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik UI ActionSheet for ASP.NET MVC"
        },
        "meta": {
          "aspnet-mvc": "This demo of the Telerik UI ActionSheet for ASP.NET MVC demonstrates the position options of the widget."
        },
        "links": [
          {
            "text": "ActionSheet Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/actionsheet/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "AppBar",
    "name": "appbar",
    "component": "appbar",
    "api": "web/appbar",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/appbar/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=51"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/appbar"
    },
    "spriteCssClass": "appBarIcon",
    "items": [
      {
        "text": "Overview",
        "url": "appbar/index",
        "deferred": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik UI AppBar for ASP.NET MVC"
        },
        "meta": {
          "aspnet-mvc": "How jQuery-based AppBar widget works, view demo source code of Telerik UI AppBar for ASP.NET MVC."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI AppBar for ASP.NET MVC is a template-driven widget that renders HTML, actions such as action buttons, search panel, icons etc. An external template can be supplied to the widget as well, by specifying the TemplateId option.</p><p>The widget exposes two types of items – a ContentItem and a Spacer. The ContentItem accepts a template, whereas the spacer should be used to separate the templates from one another.</p>"
        }
      },
      {
        "text": "Position",
        "url": "appbar/position",
        "deferred": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik UI AppBar for ASP.NET MVC"
        },
        "meta": {
          "aspnet-mvc": "This demo of the Telerik UI AppBar for ASP.NET MVC demonstrates the position options of the widget."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI AppBar for ASP.NET MVC exposes several positions and position modes. It can be positioned at top or bottom. Its position modes are Fixed, Sticky or None. Sticky position mode is used if the widget has to be visible while the user scrolls up or down, while the fixed option positions the widget relative to the view port.</p><p>In order to use the Sticky or Fixed position mode of the AppBar, the position has to be set either to Top or Bottom.</p>"
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "AutoComplete",
    "name": "autocomplete",
    "updated": true,
    "api": "web/autocomplete",
    "documentation": {
      "aspnet-mvc": "helpers/autocomplete/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=77"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/autocomplete"
    },
    "spriteCssClass": "autoCompleteIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "autocomplete/index",
        "title": {
          "aspnet-mvc": "Demo and source code for  Telerik $FRAMEWORK AutoComplete"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik $FRAMEWORK AutoComplete control works and view the demo source code."
        },
        "links": [
          {
            "text": "AutoComplete Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "autocomplete/appearance",
        "new": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik $FRAMEWORK AutoComplete"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK AutoComplete demo shows how to change the styling options for the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik AutoComplete for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "links": [
          {
            "text": "AutoComplete Appearance",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/appearance"
          }
        ]
      },
      {
        "text": "Server filtering",
        "url": "autocomplete/serverfiltering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo of $FRAMEWORK AutoComplete control shows how autocomplete suggestions are given upon typing and the data is loaded from OData remote data source."
        },
        "links": [
          {
            "text": "AutoComplete Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/overview"
          }
        ]
      },
      {
        "text": "Virtualization",
        "url": "autocomplete/virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo of ASP.NET MVC AutoComplete control shows how to load large amount of data in the AutoComplete component"
        },
        "links": [
          {
            "text": "AutoComplete Virtualization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/virtualization"
          }
        ]
      },
      {
        "text": "Grouping",
        "url": "autocomplete/grouping",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo of ASP.NET MVC AutoComplete control shows how to load grouped data in the AutoComplete component"
        },
        "links": [
          {
            "text": "AutoComplete Grouping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/grouping"
          }
        ]
      },
      {
        "text": "Client filtering",
        "url": "autocomplete/clientfiltering",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "AutoComplete Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/overview"
          }
        ]
      },
      {
        "text": "Customizing templates",
        "url": "autocomplete/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With this $FRAMEWORK AutoComplete demo, you can learn how to customize the template of the control."
        },
        "links": [
          {
            "text": "AutoComplete Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/templates"
          }
        ]
      },
      {
        "text": "Custom data source",
        "url": "autocomplete/custom-datasource",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "AutoComplete Custom Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/binding/custom-binding"
          }
        ]
      },
      {
        "text": "Events",
        "url": "autocomplete/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Take a look at this $FRAMEWORK AutoComplete example to find out how events are triggered in the AutoComplete control."
        },
        "links": [
          {
            "text": "AutoComplete Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "autocomplete/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The API Functions of $FRAMEWORK AutoComplete give you the option to set a specific value, attribute a value for the string, starting with a symbol or a digit."
        },
        "links": [
          {
            "text": "AutoComplete Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/overview"
          },
          {
            "text": "AutoComplete Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/autocomplete"
          },
          {
            "text": "AutoComplete Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/autocomplete"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "autocomplete/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "We will demonstrate how the right-to-left typing feature is implemented in the text input field of the $FRAMEWORK AutoComplete control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "AutoComplete Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/autocomplete/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "autocomplete/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this $FRAMEWORK demo which illustrates how the keyboard navigation feature is supported in Telerik AutoComplete."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Avatar",
    "name": "avatar",
    "api": "web/avatar",
    "new": true,
    "documentation": {
      "aspnet-mvc": "html-helpers/layout/avatar/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1875"
    },
    "spriteCssClass": "avatarIcon",
    "items": [
      {
        "text": "Overview",
        "url": "avatar/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How Telerik UI Avatar for $FRAMEWORK works, view demo source code of Telerik UI Avatar for $FRAMEWORK."
        },
        "links": [
          {
            "text": "Avatar Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/avatar/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "avatar/appearance",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the different styling options of the Telerik UI Avatar for $FRAMEWORK Component."
        },
        "links": [
          {
            "text": "Avatar Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/avatar/appearance"
          }
        ]
      },
      {
        "text": "Integration with Grid",
        "url": "avatar/gridintegration",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the Telerik UI Avatar for $FRAMEWORK Component integration with the Grid."
        },
        "links": [
          {
            "text": "Avatar Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/avatar/overview"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "Badge",
    "name": "badge",
    "api": "web/badge",
    "documentation": {
      "aspnet-mvc": "html-helpers/layout/badge/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=107"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/badge"
    },
    "spriteCssClass": "badgeIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "badge/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to configure Kendo UI jQuery-based badge in $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows the basic usage of the $FRAMEWORK Badge component. For more information about the $FRAMEWORK Badge component refer to the <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/layout/badge/overview\" target=\"_blank\">documentation</a>  and its <a href=\"https://docs.telerik.com/aspnet-mvc/api/badge\" target=\"_blank\">API</a>.</p>\n"
        },
        "links": [
          {
            "text": "Badge HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/badge/overview"
          }
        ]
      },
      {
        "text": "Labels",
        "url": "badge/labels",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Learn how to use the Badge component as a label in the template of a Listview."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to use the $FRAMEWORK Badge component as a label in the template of a $FRAMEWORK Listview.</p>\n"
        },
        "links": [
          {
            "text": "Badge HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/badge/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "badge/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Learn how to use the Badge component with templates."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to customize the content of the $FRAMEWORK Badge using templates.</p>\n"
        },
        "links": [
          {
            "text": "Badge Using templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/badge/overview#using-templates"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "BottomNavigation",
    "name": "bottomnavigation",
    "api": "web/bottomnavigation",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/bottomnavigation/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=131"
    },
    "spriteCssClass": "bottomnavigationIcon",
    "items": [
      {
        "text": "Overview",
        "url": "bottomnavigation/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the features of the Kendo UI jQuery-based BottomNavigation in $FRAMEWORK."
        },
        "links": [
          {
            "text": "BottomNavigation Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/bottomnavigation/overview"
          }
        ]
      },
      {
        "text": "Items",
        "url": "bottomnavigation/items",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to use the $FRAMEWORK BottomNavigation HtmlHelper items configuration."
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how to use the $FRAMEWORK BottomNavigation HtmlHelper <strong>Items</strong> configuration.</p>\n"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "BottomNavigation Items Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/bottomnavigation/items"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "bottomnavigation/appearance",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the various options to change the $FRAMEWORK BottomNavigation HtmlHelper appearance."
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates the various options to change the $FRAMEWORK BottomNavigation HtmlHelper appearance through the <strong>ItemFlow</strong>, <strong>ThemeColor</strong>, <strong>Border</strong>, <strong>Fill</strong> and <strong>Shadow</strong> options.</p>\n"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "BottomNavigation Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/bottomnavigation/appearance"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "bottomnavigation/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to use the $FRAMEWORK BottomNavigation HtmlHelper templates"
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to customize the content of the $FRAMEWORK BottomNavigation using templates.</p>\n"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "BottomNavigation Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/bottomnavigation/templates"
          }
        ]
      },
      {
        "text": "Events",
        "url": "bottomnavigation/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to bind to the the $FRAMEWORK BottomNavigation HtmlHelper events."
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how to bind to the the $FRAMEWORK BottomNavigation HtmlHelper events.</p>\n"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "BottomNavigation Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/bottomnavigation/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "bottomnavigation/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to use the  to the the $FRAMEWORK BottomNavigation HTMLHelper events."
        },
        "description": {
          "aspnet-mvc": "<p>This <strong>$FRAMEWORK BottomNavigation</strong> example illustrates how API functions of the component operate and how to use them effectively in your application.</p>\n"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "BottomNavigation Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/bottomnavigation/overview"
          },
          {
            "text": "BottomNavigation Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/bottomnavigation"
          },
          {
            "text": "BottomNavigation Client-side",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/bottomnavigation"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "bottomnavigation/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Review how the Right-To-Left feature is enabled for the $FRAMEWORK BottomNavigation HtmlHelper."
        },
        "description": {
          "aspnet-mvc": "<p>Review how the Right-To-Left feature is enabled for the $FRAMEWORK BottomNavigation HtmlHelper.</p>\n"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "BottomNavigation Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/bottomnavigation/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "bottomnavigation/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how the keyboard navigation is a supported feature in the $FRAMEWORK BottomNavigation HtmlHelper."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates the keyboard navigation feature in the $FRAMEWORK BottomNavigation HtmlHelper.</p>\n"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Breadcrumb",
    "name": "breadcrumb",
    "api": "web/breadcrumb",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/breadcrumb/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=138"
    },
    "spriteCssClass": "breadcrumbIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "breadcrumb/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik $FRAMEWORK Breadcrumb control works and view the demo source code."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Breadcrumb</strong> is an intuitive UI component that allows navigation within a folder structure or web page. It provides an easy way to navigate backwards by one or multiple steps. </p><p><strong>Key Features</strong></p><ul style=\"list-style-type: disc;\"><li>Navigation</li><li>Icons</li><li>Editing</li><li>Accessibility, keyboard navigation and RTL Support</li></ul><p>Additional information about how to use the Telerik $FRAMEWORK Breadcrumb component can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/overview\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        },
        "links": [
          {
            "text": "Breadcrumb Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/overview"
          }
        ]
      },
      {
        "text": "Navigation",
        "url": "breadcrumb/navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This ASP.Net MVC demo show how to change icons of the items and the delimiters of the $FRAMEWORK Breadcrumb."
        },
        "links": [
          {
            "text": "Breadcrumb Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/navigation"
          }
        ]
      },
      {
        "text": "Icons",
        "url": "breadcrumb/icons",
        "deferred": true,
        "links": [
          {
            "text": "Breadcrumb Icons Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/icons"
          }
        ]
      },
      {
        "text": "Editing",
        "url": "breadcrumb/editing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This ASP.Net MVC demo show how to enable editing mode of the $FRAMEWORK Breadcrumb."
        },
        "links": [
          {
            "text": "Breadcrumb Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/editing"
          }
        ]
      },
      {
        "text": "Events",
        "url": "breadcrumb/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This ASP.Net MVC demo show how to bind to the event of the $FRAMEWORK Breadcrumb."
        },
        "links": [
          {
            "text": "Breadcrumb Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "breadcrumb/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The API Functions of $FRAMEWORK Breadcrumb give you the option to get, set and reset the value of the Breadcrumb."
        },
        "links": [
          {
            "text": "Breadcrumb Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "breadcrumb/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "We will demonstrate how the right-to-left typing feature is implemented in the text input field of the $FRAMEWORK Breadcrumb control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Breadcrumb Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "breadcrumb/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this $FRAMEWORK ASP.Net MVC demo which illustrates how the keyboard navigation feature is supported in Telerik Breadcrumb."
        },
        "links": [
          {
            "text": "Breadcrumb Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/breadcrumb/overview"
          }
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Button",
    "name": "button",
    "updated": true,
    "api": "web/button",
    "documentation": {
      "aspnet-mvc": "helpers/button/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=170"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/button"
    },
    "spriteCssClass": "buttonIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "button/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to configure Kendo UI jQuery-based button in $FRAMEWORK."
        }
      },
      {
        "text": "Appearance",
        "url": "button/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the modern rendering and styling capabilities of Telerik Button for $FRAMEWORK."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Button HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/button/appearance"
          }
        ]
      },
      {
        "text": "Images",
        "url": "button/images",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This online demo will show you how to embed images and icons in your $FRAMEWORK Button."
        },
        "links": [
          {
            "text": "Button Images Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/button/icons"
          }
        ]
      },
      {
        "text": "Events",
        "url": "button/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Take a look at this $FRAMEWORK Button example to find out how events are triggered in the Button control."
        },
        "links": [
          {
            "text": "Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "button/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the API functions of $FRAMEWORK Button give you the option to enable and disable it."
        },
        "links": [
          {
            "text": "Button Client-Side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/button"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "button/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "We will demonstrate how the right-to-left feature is implemented in the $FRAMEWORK Button control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "button/keyboard-navigation",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this $FRAMEWORK demo which illustrates how the keyboard navigation feature is supported in Telerik Button."
        }
      },
      {
        "text": "Badges",
        "url": "button/badges",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this $FRAMEWORK demo which illustrates how to use Badges in the Telerik Button."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "ButtonGroup",
    "name": "ButtonGroup",
    "api": "web/buttongroup",
    "documentation": {
      "aspnet-mvc": "helpers/buttongroup/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=180"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/buttongroup"
    },
    "spriteCssClass": "mobileButtonGroupIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "buttongroup/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to configure Kendo UI jQuery-based ButtonGroup in $FRAMEWORK."
        },
        "links": [
          {
            "text": "ButtonGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/buttongroup/overview"
          }
        ]
      },
      {
        "text": "Badges",
        "url": "buttongroup/badges",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This online demo will show you how to set badges in your $FRAMEWORK ButtonGroup."
        },
        "links": [
          {
            "text": "ButtonGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/buttongroup/overview"
          }
        ]
      },
      {
        "text": "Icons",
        "url": "buttongroup/icons",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This online demo will show you how to embed images and icons in your $FRAMEWORK ButtonGroup."
        },
        "links": [
          {
            "text": "ButtonGroup Icons Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/buttongroup/icons"
          }
        ]
      },
      {
        "text": "Events",
        "url": "buttongroup/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Take a look at this $FRAMEWORK ButtonGroup example to find out how events are triggered in the ButtonGroup control."
        },
        "links": [
          {
            "text": "ButtonGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/buttongroup/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "buttongroup/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the ButtonGroup API"
        },
        "links": [
          {
            "text": "ButtonGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/buttongroup/overview"
          },
          {
            "text": "ButtonGroup Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/buttongroup"
          },
          {
            "text": "ButtonGroup Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/buttongroup"
          }
        ]
      },
      {
        "text": "Selection",
        "url": "buttongroup/selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the API functions of $FRAMEWORK ButtonGroup give you the option to enable and disable it."
        },
        "links": [
          {
            "text": "ButtonGroup Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/buttongroup/selection"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "buttongroup/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "We will demonstrate how the right-to-left feature is implemented in the $FRAMEWORK ButtonGroup control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "ButtonGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/buttongroup/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "buttongroup/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "We will demonstrate how the keyboard navigation feature is implemented in the $FRAMEWORK ButtonGroup control."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Calendar",
    "name": "calendar",
    "api": "web/calendar",
    "documentation": {
      "aspnet-mvc": "helpers/calendar/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=198"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/calendar"
    },
    "spriteCssClass": "calendarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "calendar/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Explore the example of $FRAMEWORK calendar control to find how easy it is to add a calendar to your website or web app."
        },
        "links": [
          {
            "text": "Calendar HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/overview"
          }
        ]
      },
      {
        "text": "Component Type",
        "url": "calendar/component-type",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to change the appearance of the $FRAMEWORK Calendar."
        },
        "description": {
          "aspnet-mvc": "<p>As of R2 2020, the <strong>$FRAMEWORK Calendar</strong> introduces updates to the rendering and a new appearance of the widget. Switching to the new look and feel of the widget is as simple as setting the  <strong>ComponentType</strong> property to \"modern\".</p><p>The DropDownList below the picker provides the opportunity to switch between the component types on the fly and observe the differences of the modern and classic appearances.</p>"
        },
        "links": [
          {
            "text": "Calendar Component Types Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/component-types"
          }
        ]
      },
      {
        "text": "Customizing templates",
        "url": "calendar/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Calendar allows you to customize the content in your template."
        },
        "links": [
          {
            "text": "Calendar Day Template Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/day-template"
          }
        ]
      },
      {
        "text": "Disable dates",
        "url": "calendar/disable-dates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Calendar allows you to disable dates"
        },
        "links": [
          {
            "text": "Calendar Disabled Dates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/disabled-dates"
          }
        ]
      },
      {
        "text": "Week Column",
        "url": "calendar/week-column",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Calendar allows you to show a week number column in the month view"
        },
        "links": [
          {
            "text": "Calendar Week Numbers Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/week-numbers"
          }
        ]
      },
      {
        "text": "Multiple Selection",
        "url": "calendar/selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how ASP.NET MVC Calendar allows you to select more than one date."
        },
        "description": {
          "aspnet-mvc": "<p>Starting from ASP.NET MVC 2017 R3 release calendar allows multiple selection to be performed by using the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/calendar#configuration-selectable\" target=\"_blank\">selectable</a> configuration property.</p><p>The multiple selection functionality of the calendar widget can be summarized in several key points:</p><ol><li>Multiple Selection - Ctrl key is used while selecting dates.</li><li>Range Selection - Shift key is used to select range of dates.</li><li>Week Selection - Range selection for a specific week.</li></ol><br/><p>The Ctrl key allows user to perform multiple selection:</p><ul><li>Ctrl + Mouse Click on specific date will mark the date as selected and other previously selected dates will remain selected as well.</li><li>Selecting a date from a specific view without using Ctrl key will deselect all previously selected dates (including previously selected dates from other views/months) and select the date of the clicked cell.</li><li>Selecting a date that is already selected while holding the Ctrl key will remove the date from the selection.</li></ul><p>The Shift key allows user to select a range of dates in the same month or between different months:</p><ul><li>Shift + Mouse Click selects all dates between the last selected one (with SPACE or Mouse Click) and the clicked cell.</li><li>Shift + Mouse Click when there is no previous selection will select all dates from the beginning to the clicked cell.</li></ul><p>When user clicks on a specific week number the calendar selects the entire week. It can be considered as a special case of range selection - starting from first day of the week and selects all dates to the end of the week. </p><p>The Multiple Selection functionality introduces some new key combinations. Those are demonstrated in <a href=\"https://demos.telerik.com/kendo-ui/calendar/keyboard-navigation\" /> Keyboard Navigation demo.</p>"
        },
        "links": [
          {
            "text": "Calendar Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/selection"
          }
        ]
      },
      {
        "text": "Events",
        "url": "calendar/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example of $FRAMEWORK Calendar control shows events which are available in the component."
        },
        "links": [
          {
            "text": "Calendar Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/overview#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "calendar/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the $FRAMEWORK Calendar API works and what kind of functions it supports."
        },
        "links": [
          {
            "text": "Calendar Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/calendar"
          }
        ]
      },
      {
        "text": "Globalization",
        "deferred": true,
        "url": "calendar/globalization",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Calendar HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "calendar/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK Calendar component supports RTL functionality. Look at the demo to see how to easily apply RTL support to the control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Calendar HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "calendar/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "You can easily navigate in $FRAMEWORK Calendar by using the keyboard. This demo shows the functionality, just look at the notes and play with the example."
        },
        "links": [
          {
            "text": "Calendar Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/calendar/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Captcha",
    "name": "captcha",
    "api": "web/captcha",
    "spriteCssClass": "captchaIcon",
    "documentation": {
      "aspnet-mvc": "html-helpers/editors/captcha/overview"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/captcha"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1792"
    },
    "items": [
      {
        "text": "Overview",
        "url": "captcha/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the basic functions of Kendo UI Captcha component."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK Captcha</strong> protects you from spam and password decryption by asking you to complete a test that proves you are human and not a computer trying to break into a password protected account. To pass a the test and prove your human identity, type the characters you see in the image into the text box.</p>"
        }
      },
      {
        "text": "Events",
        "url": "captcha/events",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows events implementation and behavior of Kendo UI Captcha component."
        },
        "description": {
          "aspnet-mvc": "<p><b>Change Event</b>:  when users changes the input of the captcha component.<br/><br/><b>RequestStart Event</b>: when the captcha makes a request to a handler (captcha, audio or validation), can be distinguished via the type argument.<br/><br/><b>RequestEnd Event</b>: when a request to a handler is finished (captcha, audio or validation), can be distinguished via the type argument.</p>"
        }
      },
      {
        "text": "API",
        "url": "captcha/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows api implementation and behavior of Kendo UI Captcha component."
        },
        "description": {
          "aspnet-mvc": "<p><br/><b>value: </b>return the input of the user.<br/><br/><b>getCaptchaId: </b>returns the ID of the current captcha.<br/><br/><b>validate: </b>triggers the validationHandler to validate on the server.<br/><br/><b>isValid: </b>returns <i>true</i> if validated and valid, <i>false</i> if validated and not valid and <i>null</i> if not validated.<br/><br/><b>enable: </b>toggles the enabled state of the captcha input.<br/><br/><b>readonly: </b>toggles the read-only state of the captcha input.<br/><br/><b>speak: </b>triggers the audioHandler and speaks the audio fetched.<br/><br/><b>reset: </b>triggers the handler to reset the captcha with a newly generated image and id.</p>"
        }
      },
      {
        "text": "Keyboad Navigation",
        "url": "captcha/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example represents the keyboard navigation and behavior of Kendo UI Captcha component."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "CheckBox",
    "name": "checkbox",
    "updated": true,
    "spriteCssClass": "checkboxIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "checkbox/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how different styling can be applied to icons by using ASP.NET MVC Web framework."
        },
        "links": [
          {
            "text": "CheckBox Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/checkbox"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "checkbox/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the modern rendering and styling capabilities of Telerik CheckBox for $FRAMEWORK."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "CheckBox HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/checkbox/appearance"
          }
        ]
      }
    ],
    "category": "Editors",
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=278"
    }
  },
  {
    "text": "CheckBoxGroup",
    "name": "checkBoxGroup",
    "spriteCssClass": "checkboxgroupIcon",
    "documentation": {
      "aspnet-mvc": "html-helpers/editors/checkboxgroup/overview"
    },
    "items": [
      {
        "text": "Overview",
        "url": "checkboxgroup/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage of the $FRAMEWORK CheckBoxGroup."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK CheckBoxGroup</strong> enables you to style and provide checkbox functionality to list elements. You could add custom css classes to the checkbox group items, set label position or configure the layout of the CheckBoxGroup. Learn more about the selection functionality by playing with this demo.</p><p>If the CheckBoxGroup component is bound using the BindTo() method, a collection of objects implementing IInputGroupItem should be used</p>"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "InputGroupItemModel.cs",
              "url": "~/Models/InputGroupItemModel.cs"
            },
            {
              "name": "CheckBoxGroupViewModel.cs",
              "url": "~/Models/CheckBoxGroupViewModel.cs"
            }
          ]
        },
        "links": [
          {
            "text": "CheckBoxGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/checkboxgroup/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "checkboxgroup/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how events are handled and triggered in $FRAMEWORK CheckBoxGroup."
        },
        "links": [
          {
            "text": "CheckBoxGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/checkboxgroup/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "Layout",
        "url": "checkboxgroup/layout",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the $FRAMEWORK CheckBoxGroup component layout."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "CheckBoxGroup Layout Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/checkboxgroup/layout"
          }
        ]
      },
      {
        "text": "API",
        "url": "checkboxgroup/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the API functions of $FRAMEWORK RadioGroup control operate and how you can configure them for your web project."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "CheckBoxGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/checkboxgroup/overview"
          },
          {
            "text": "CheckBoxGroup Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/checkboxgroup"
          },
          {
            "text": "CheckBoxGroup Client-side",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/checkboxgroup"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "checkboxgroup/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the right-to-left feature is enabled in $FRAMEWORK CheckBoxGroup control."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "CheckBoxGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/checkboxgroup/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "checkboxgroup/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the keyboard navigation feature of Telerik $FRAMEWORK CheckBoxGroup control."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ColorPicker",
    "name": "colorpicker",
    "api": "web/colorpicker",
    "updated": true,
    "documentation": {
      "aspnet-mvc": "helpers/colorpicker/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=333"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/colorpicker"
    },
    "spriteCssClass": "colorPickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "colorpicker/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the basic functionality of $FRAMEWORK HTML Helper for ASP.NET MVC ColorPicker component."
        },
        "links": [
          {
            "text": "ColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "colorpicker/appearance",
        "deferred": true,
        "new": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK ColorPicker demo shows how to change the styling options for the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik ColorPicker for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "links": [
          {
            "text": "ColorPicker Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/appearance"
          }
        ]
      },
      {
        "text": "Flat color picker",
        "url": "colorpicker/flatcolorpicker",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how Telerik $FRAMEWORK helper could be used for your flat color picker scenario."
        },
        "links": [
          {
            "text": "FlatColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/flatcolorpicker/overview"
          }
        ]
      },
      {
        "text": "Standalone Palette",
        "url": "colorpicker/palette",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will take a look at the rich standalone palette of $FRAMEWORK ColorPicker component. Grab the source code and play with the demo!"
        },
        "links": [
          {
            "text": "ColorPalette Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpalette/overview"
          }
        ]
      },
      {
        "text": "Palette presets",
        "url": "colorpicker/palette-presets",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to easily use  palette presents of Telerik $FRAMEWORK ColorPicker extension. Look at the code and implement it for  user scenario."
        },
        "links": [
          {
            "text": "ColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/overview"
          }
        ]
      },
      {
        "text": "Views",
        "url": "colorpicker/views",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo demonstrates the Views configuration and its possible values."
        },
        "links": [
          {
            "text": "ColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/overview"
          }
        ]
      },
      {
        "text": "RGB and HEX",
        "url": "colorpicker/rgb-hex",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Select a color based on a preset color palette in Telerik UI for ASP.NET MVC ColorPicker. This demo allows you to play with the palette presets in the component."
        },
        "links": [
          {
            "text": "ColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/overview"
          }
        ]
      },
      {
        "text": "Contrast Tool",
        "url": "colorpicker/contrast-tool",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Select a color based on a preset color palette in Telerik UI for ASP.NET MVC ColorPicker. This demo allows you to play with the palette presets in the component."
        },
        "links": [
          {
            "text": "ColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/overview"
          }
        ]
      },
      {
        "text": "Keyboard support",
        "url": "colorpicker/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the keyboard support functionality of Telerik $FRAMEWORK ColorPicker control."
        }
      },
      {
        "text": "Events",
        "url": "colorpicker/events",
        "hasConsole": true,
        "title": {
          "aspnet-mvc": "Events in $FRAMEWORK ColorPicker control"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will examine the events that are fired in $FRAMEWORK ColorPicker component."
        },
        "links": [
          {
            "text": "ColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "colorpicker/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example for using ASP.NET MVC ColorPicker component in $FRAMEWORK shows how you can set values, enable/disable, open/close them by using ColorPicker API."
        },
        "links": [
          {
            "text": "ColorPicker Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/colorpicker/overview"
          },
          {
            "text": "ColorPicker Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/colorpicker"
          },
          {
            "text": "ColorPicker Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/colorpicker"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ComboBox",
    "name": "combobox",
    "updated": true,
    "api": "web/combobox",
    "documentation": {
      "aspnet-mvc": "helpers/combobox/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=345"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/combobox"
    },
    "spriteCssClass": "comboBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "combobox/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Combobox UI demo shows how to easily apply an editable text box with flexible auto-searchable functionality of the dropdown list into your web app."
        },
        "links": [
          {
            "text": "ComboBox Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "combobox/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Combobox Appearance demo shows how to change the styling options for the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik Combobox for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "links": [
          {
            "text": "ComboBox Appearance",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/appearance"
          }
        ]
      },
      {
        "text": "Server filtering",
        "url": "combobox/serverfiltering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out this demo to see how the server filtering functionality works in $FRAMEWORK ComboBox."
        },
        "links": [
          {
            "text": "ComboBox Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/overview"
          }
        ]
      },
      {
        "text": "Virtualization",
        "url": "combobox/virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out this demo to see how the virtualization functionality works in $FRAMEWORK ComboBox."
        },
        "links": [
          {
            "text": "ComboBox Virtualization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/virtualization"
          }
        ]
      },
      {
        "text": "Grouping",
        "url": "combobox/grouping",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out this demo to see how the grouping functionality works in $FRAMEWORK ComboBox."
        },
        "links": [
          {
            "text": "ComboBox Grouping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/grouping"
          }
        ]
      },
      {
        "text": "Client filtering",
        "url": "combobox/clientfiltering",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "ComboBox Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/overview"
          }
        ]
      },
      {
        "text": "Customizing templates",
        "url": "combobox/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK ComboBox demo shows how the template of the control can be customized to change the appearance of items in the auto-searchable list."
        },
        "links": [
          {
            "text": "ComboBox Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/templates"
          }
        ]
      },
      {
        "text": "Cascading ComboBox",
        "url": "combobox/cascadingcombobox",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the cascading $FRAMEWORK ComboBox control would fit any web application or website."
        },
        "links": [
          {
            "text": "ComboBox Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/overview"
          }
        ]
      },
      {
        "text": "Custom data source",
        "url": "combobox/custom-datasource",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "ComboBox Custom Data Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/binding/todatasourceresult-binding"
          }
        ]
      },
      {
        "text": "Events",
        "url": "combobox/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This demo demonstrates useful events which are triggered in $FRAMEWORK ComboBox upon user's selection of an item from the drop-down list."
        },
        "links": [
          {
            "text": "ComboBox Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "combobox/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows all API functions for Telerik $FRAMEWORK ComboBox control."
        },
        "links": [
          {
            "text": "ComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/overview"
          },
          {
            "text": "ComboBox Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/combobox"
          },
          {
            "text": "ComboBox Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/combobox"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "combobox/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Build your app with $FRAMEWORK ComboBox. This demo shows how RTL feature is supported in the component."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "ComboBox Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/combobox/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "combobox/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK ComboBox control for web app development supports easy keyboard navigation. Play with the demo to explore the functionality."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DateInput",
    "name": "dateinput",
    "updated": true,
    "api": "web/dateinput",
    "documentation": {
      "aspnet-mvc": "helpers/dateinput/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=449"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/datetime"
    },
    "spriteCssClass": "dateInputIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dateinput/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows Telerik DateInput basic features to select dates and times in $FRAMEWORK application."
        },
        "description": {
          "aspnet-mvc": "The DateInput helper enables you to enter date/time via direct input. It provides separate sections for day, month, year, hours and minutes. Furthermore, you can customize the date and time format."
        },
        "links": [
          {
            "text": "DateInput HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dateinput/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "dateinput/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the modern rendering and styling capabilities of Telerik DateInput for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik DateInput for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },

        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DateInput HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dateinput/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "dateinput/events",
        "HasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how to access the events, attached to a date, as well as use $FRAMEWORK Date Input to pick a date or change it manually from a dropdown calendar."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik $FRAMEWORK Dateinput provides API that enables you to customize it and enable/disable specific features of the component.</p><p>The example shows the usage of the <strong>change</strong> event. Note that the event is triggered after focus is removed from the component.</p><p>You can find more information on client-side API of DateInput <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/dateinput#events\">here</a>.</p>"
        },
        "links": [
          {
            "text": "DateInput Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dateinput/overview#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "dateinput/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how the API of Telerik $FRAMEWORK Dateinput can be configured to modify the features of the extension."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik $FRAMEWORK Dateinput provides API that enables you to customize it and enable/disable specific features of the component.</p><p>The example shows the usage of <strong>value</strong>, <strong>enable</strong> and <strong>readonly</strong> methods.</p><p>You can find more information on client-side API of DateInput <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/dateinput#methods\">here</a>.</p>"
        },
        "links": [
          {
            "text": "DateInput Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/dateinput"
          }
        ]
      },
      {
        "text": "Globalization",
        "url": "dateinput/globalization",
        "deferred": true,
        "description": {
          "aspnet-mvc": "<p>This example shows Globalization supported by $FRAMEWORK DateInput.</p><p>Globalization is responsible for defining the format of the dates. Thus, the format in which the date is displayed will depend on the selected culture.</p>"
        },
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DateInput HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dateinput/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "dateinput/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how $FRAMEWORK DateInput component supports RTL functionality."
        },
        "description": {
          "aspnet-mvc": "This example shows how RTL functionality is supported in the $FRAMEWORK DateInput component ."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "DateInput HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dateinput/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "dateinput/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how the keyboard navigation functionality is supported in $FRAMEWORK DateInput control."
        },
        "links": [
          {
            "text": "DateInput HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dateinput/overview"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DatePicker",
    "name": "datepicker",
    "updated": true,
    "api": "web/datepicker",
    "documentation": {
      "aspnet-mvc": "helpers/datepicker/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=439"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/datetime"
    },
    "spriteCssClass": "datePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datepicker/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows Telerik DatePicker basic features to select dates and times in $FRAMEWORK application."
        },
        "description": {
          "aspnet-mvc": "<p>This example shows Telerik DatePicker basic features to select dates and times in ASP.NET MVC application.</p><p>Since <strong>R2 2017</strong> the DatePicker can use <a href=\"https://demos.telerik.com/aspnet-mvc/dateinput/index\">DateInput</a> as a default input. The second DatePicker in the example is configured to use DateInput.</p>"
        },
        "links": [
          {
            "text": "DatePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "datepicker/appearance",
        "deferred": true,
        "new": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK DatePicker demo shows how to change the styling options for the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik DatePicker for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "links": [
          {
            "text": "DatePicker HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/appearance"
          }
        ]
      },
      {
        "text": "Component Type",
        "url": "datepicker/component-type",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to change the appearance of the $FRAMEWORK DatePicker."
        },
        "description": {
          "aspnet-mvc": "<p>As of R2 2020, the <strong>$FRAMEWORK DatePicker</strong> introduces updates to the rendering and a new appearance of the component. Switching to the new look and feel of the component is as simple as setting the <strong>ComponentType</strong> property to \"modern\".</p><p>The DropDownList below the picker provides the opportunity to switch between the component types on the fly and observe the differences of the modern and classic appearances.</p>"
        },
        "links": [
          {
            "text": "DatePicker Component Types Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/component-type"
          }
        ]
      },
      {
        "text": "Range selection",
        "url": "datepicker/rangeselection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the $FRAMEWORK Datepicker component works for range selections. You can easily enable users to select a date range in a handy manner."
        },
        "links": [
          {
            "text": "DatePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/overview"
          }
        ]
      },
      {
        "text": "Customizing templates",
        "url": "datepicker/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how you can use a custom template for your $FRAMEWORK DatePicker control in your web app. Easily apply a special style for your template."
        },
        "links": [
          {
            "text": "DatePicker Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/templates"
          }
        ]
      },
      {
        "text": "Events",
        "url": "datepicker/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how to access the events, attached to a date, as well as use $FRAMEWORK Date Picker to pick a date or change it manually from a dropdown calendar."
        },
        "links": [
          {
            "text": "DatePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/overview"
          }
        ]
      },
      {
        "text": "Disable dates",
        "url": "datepicker/disable-dates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK DatePicker allows you to disable dates"
        },
        "links": [
          {
            "text": "DatePicker Disabled Dates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/disabled-dates"
          }
        ]
      },
      {
        "text": "Week Column",
        "url": "datepicker/week-column",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK DatePicker allows you to show a week number column in the month view"
        },
        "links": [
          {
            "text": "DatePicker Week Number Column Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/week-number-column"
          }
        ]
      },
      {
        "text": "API",
        "url": "datepicker/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how the API of Telerik $FRAMEWORK Datepicker can be configured to modify the features of the extension."
        },
        "links": [
          {
            "text": "DatePicker Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/datepicker"
          }
        ]
      },
      {
        "text": "Globalization",
        "url": "datepicker/globalization",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DatePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "datepicker/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how $FRAMEWORK DatePicker component supports RTL functionality."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "DatePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "datepicker/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how the keyboard navigation functionality is supported in $FRAMEWORK DatePicker control."
        },
        "links": [
          {
            "text": "DatePicker Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datepicker/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DateRangePicker",
    "name": "daterangepicker",
    "updated": true,
    "api": "web/daterangepicker",
    "documentation": {
      "aspnet-mvc": "helpers/daterangepicker/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=472"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/datetime"
    },
    "spriteCssClass": "dateRangePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "daterangepicker/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows Telerik DateRangePicker basic features to select dates range in $FRAMEWORK application."
        },
        "description": {
          "aspnet-mvc": "<p>This example shows Telerik DateRangePicker basic features to select dates range in ASP.NET MVC application.</p><p>The DateRangePicker uses <a href=\"https://demos.telerik.com/aspnet-mvc/dateinput/index\">DateInput</a> as a default input for the Start and End date.</p>"
        },
        "links": [
          {
            "text": "DateRangePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/daterangepicker/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "daterangepicker/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK DateRangePicker demo shows how to change the styling options for the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik DateRangePicker for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "links": [
          {
            "text": "DateRangePicker HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/daterangepicker/appearance"
          }
        ]
      },
      {
        "text": "Date Range",
        "url": "daterangepicker/date-range",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how to show pre-selected dates range with $FRAMEWORK DateRangePicker. The range can be changed manually from the dropdown calendar or inputs."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to show pre-selected dates range with $FRAMEWORK DateRangePicker. The range can be changed manually from the dropdown calendar or inputs."
        },
        "links": [
          {
            "text": "DateRangePicker Selected Dates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/daterangepicker/selected-dates."
          }
        ]
      },
      {
        "text": "Events",
        "url": "daterangepicker/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This sample shows how to access the events, as well as use $FRAMEWORK Date Range Picker to pick a range of dates or change it manually from a dropdown calendar."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to access the events, as well as use $FRAMEWORK Date Range Picker to pick a range of dates or change it manually from a dropdown calendar."
        },
        "links": [
          {
            "text": "DateRangePicker Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/daterangepicker/overview#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "daterangepicker/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how the Telerik $FRAMEWORK DateRangePicker API can be used to apply enable/disable functionality to jQuery-powered date range picker control or open/close the calendar."
        },
        "description": {
          "aspnet-mvc": "This example demonstrates how the Telerik $FRAMEWORK DateRangePicker API can be used to apply enable/disable functionality to jQuery-powered date range picker control or open/close the calendar."
        },
        "links": [
          {
            "text": "DateRangePicker Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/daterangepicker"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "daterangepicker/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how the keyboard navigation functionality is supported in $FRAMEWORK DateRangePicker control."
        },
        "links": [
          {
            "text": "DateRangePicker Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/daterangepicker/accessibility/key-nav"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DateTimePicker",
    "name": "datetimepicker",
    "updated": true,
    "api": "web/datetimepicker",
    "documentation": {
      "aspnet-mvc": "helpers/datetimepicker/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=439"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/datetime"
    },
    "spriteCssClass": "dateTimePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datetimepicker/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK DateTimePicker control handles both dates and times. Learn more about the time/date selection functionality by playing with this demo."
        },
        "links": [
          {
            "text": "DateTimePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "datetimepicker/appearance",
        "deferred": true,
        "new": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK DateTimePicker demo shows how to change the styling options for the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik DateTimePicker for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "links": [
          {
            "text": "DateTimePicker HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/appearance"
          }
        ]
      },
      {
        "text": "Component Type",
        "url": "datetimepicker/component-type",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to change the appearance of the $FRAMEWORK DateTimePicker."
        },
        "description": {
          "aspnet-mvc": "<p>As of R2 2020, the <strong>$FRAMEWORK DateTimePicker</strong> introduces updates to the rendering and a new appearance of the component. Switching to the new look and feel of the component is as simple as setting the  <strong>ComponentType</strong> property to \"modern\".</p><p>The DropDownList below the picker provides the opportunity to switch between the component types on the fly and observe the differences of the modern and classic appearances.</p>"
        },
        "links": [
          {
            "text": "DateTimePicker Component Types Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/component-type"
          }
        ]
      },
      {
        "text": "Range selection",
        "url": "datetimepicker/rangeselection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In $FRAMEWORK DateTimePicker control, dates and times are handled in two different input boxes so that the user can easily select different date ranges."
        },
        "links": [
          {
            "text": "DateTimePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/overview"
          }
        ]
      },
      {
        "text": "Customizing templates",
        "url": "datetimepicker/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how templates of $FRAMEWORK DateTimePicker control can be customized to fit your application."
        },
        "links": [
          {
            "text": "DateTimePicker Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/templates"
          }
        ]
      },
      {
        "text": "Events",
        "url": "datetimepicker/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows which events are triggered when you change the date and time in $FRAMEWORK DateTimePicker component."
        },
        "links": [
          {
            "text": "DateTimePicker HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/overview"
          }
        ]
      },
      {
        "text": "Disable dates",
        "url": "datetimepicker/disable-dates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK DateTImePicker allows you to disable dates"
        },
        "links": [
          {
            "text": "DateTimePicker Disabled Dates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/disabled-dates"
          }
        ]
      },
      {
        "text": "Week Column",
        "url": "datetimepicker/week-column",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK DateTimePicker allows you to show a week number column in the month view"
        },
        "links": [
          {
            "text": "DateTimePicker Week Number Column Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/week-num-column"
          }
        ]
      },
      {
        "text": "API",
        "url": "datetimepicker/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with the demo to explore $FRAMEWORK DateTimePicker API and all API functions."
        },
        "links": [
          {
            "text": "DateTimePicker Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/datetimepicker"
          }
        ]
      },
      {
        "text": "Globalization",
        "url": "datetimepicker/globalization",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DateTimePicker Globalization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/globalization/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "datetimepicker/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Choose a date and see how the date and the time are displayed from right to left in $FRAMEWORK DateTimePicker component."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "DateTimePicker Right-to-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/globalization/rtl-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "datetimepicker/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "By using the keyboard, you can easily select date and time in $FRAMEWORK DateTimePicker, trigger an event or highlight a specific day."
        },
        "links": [
          {
            "text": "DateTimePicker Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/datetimepicker/globalization/rtl-support"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DropDownList",
    "name": "dropdownlist",
    "updated": true,
    "api": "web/dropdownlist",
    "documentation": {
      "aspnet-mvc": "helpers/dropdownlist/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=551"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/dropdownlist"
    },
    "spriteCssClass": "dropDownListIcon",
    "items": [
      {
        "text": "Overview",
        "url": "dropdownlist/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How to easily implement an interactive DropDownlist with user-friendly UI - look at the demo and play with $FRAMEWORK DropDownList."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI for ASP.NET MVC DropDownList lets the user choose one option from a list of choices. It provides flexible data binding, virtualization, cascading lists, appearance customization through templates, events, validation, accessibility, RTL support and keyboard navigation.</p>The current demo of the UI for $FRAMEWORK DropDownList demonstrates an implementation of the most common scenarios in which the component is used.<ul><li><a href=\"https://demos.telerik.com/aspnet-mvc/dropdownlist/cascadingdropdownlist\">DropDownList Cascading</a></li><li><a href=\"https://demos.telerik.com/aspnet-mvc/dropdownlist/virtualization\">DropDownList Virtualization</a></li><li><a href=\"https://demos.telerik.com/aspnet-mvc/dropdownlist/template\">DropDownList Templates modification</a></li></ul>"
        },
        "links": [
          {
            "text": "DropDownList Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/overview"
          }
        ]
      },
      {
        "text": "Basic usage",
        "url": "dropdownlist/basic-usage",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How to easily implement an interactive DropDownlist with user-friendly UI - look at the demo and play with $FRAMEWORK DropDownList."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DropDownList Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "dropdownlist/appearance",
        "deferred": true,
        "new": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK DropDownList demo shows how to change the styling options for the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik DropDownList for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DropDownList Appearance",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/appearance"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "dropdownlist/remotedatasource",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The dropdown list of $FRAMEWORK drop down list control can load data from a remote source. This example shows binding to remote data functionality of the component."
        },
        "links": [
          {
            "text": "DropDownList Remote Data Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/binding/ajax-binding"
          }
        ]
      },
      {
        "text": "Server filtering",
        "url": "dropdownlist/serverfiltering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the auto-searchable dropdown list of ASP.NET MVC DropDownList is filtered on the the server based on the input."
        },
        "links": [
          {
            "text": "DropDownList Filtering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/filtering"
          },
          {
            "text": "DropDownList Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/overview"
          }
        ]
      },
      {
        "text": "Virtualization",
        "url": "dropdownlist/virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the virtual dropdown list of ASP.NET MVC DropDownList is filtered on the the server based on the input."
        },
        "links": [
          {
            "text": "DropDownList Virtualization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/virtualization"
          }
        ]
      },
      {
        "text": "Grouping",
        "url": "dropdownlist/grouping",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the virtual dropdown list of ASP.NET MVC DropDownList is grouped."
        },
        "links": [
          {
            "text": "DropDownList Grouping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/grouping"
          }
        ]
      },
      {
        "text": "Client filtering",
        "deferred": true,
        "url": "dropdownlist/clientfiltering",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DropDownList Filtering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/filtering"
          },
          {
            "text": "DropDownList Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/overview"
          }
        ]
      },
      {
        "text": "Customizing templates",
        "url": "dropdownlist/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can customize the appearance of the items and easily customize templates in $FRAMEWORK DropDownList control."
        },
        "links": [
          {
            "text": "DropDownList Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/templates"
          }
        ]
      },
      {
        "text": "Cascading DropDownList",
        "url": "dropdownlist/cascadingdropdownlist",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the cascading $FRAMEWORK dropdown works in UI for $FRAMEWORK DropDownList control."
        },
        "links": [
          {
            "text": "DropDownList Cascading Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/cascading"
          },
          {
            "text": "DropDownList Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/overview"
          }
        ]
      },
      {
        "text": "Custom data source",
        "url": "dropdownlist/custom-datasource",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DropDownList Custom DataSource Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/binding/todatasourceresult-binding"
          }
        ]
      },
      {
        "text": "Events",
        "url": "dropdownlist/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Take a look at this $FRAMEWORK DropDownList example to find out how events are triggered in the drop down listcontrol."
        },
        "links": [
          {
            "text": "DropDownList Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/overview#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "dropdownlist/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Explore API functions of $FRAMEWORK DropDownList to find how to enable or disable the dropdown list, open and close it or just manipulate the items."
        },
        "links": [
          {
            "text": "DropDownList Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdownlist/overview"
          },
          {
            "text": "DropDownList Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/dropdownlist"
          },
          {
            "text": "DropDownList Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/dropdownlist"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "dropdownlist/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this $FRAMEWORK demo, we illustrate how the RTL support is enabled in $FRAMEWORK DropDownList component."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "dropdownlist/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this $FRAMEWORK demo which illustrates how the keyboard navigation feature is supported in $FRAMEWORK DropDownList component."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DropDownTree",
    "name": "dropdowntree",
    "updated": true,
    "api": "web/dropdowntree",
    "documentation": {
      "aspnet-mvc": "helpers/dropdowntree/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=562"
    },
    "spriteCssClass": "dropDownTreeIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dropdowntree/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the basic usage and functionality of $FRAMEWORK DropDownTree component which represents items in a hierarchical tree structure."
        },
        "links": [
          {
            "text": "DropDownTree Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/overview"
          }
        ]
      },
      {
        "text": "Images",
        "url": "dropdowntree/images",
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can add images to your $FRAMEWORK DropDownTree control, as well as implement DropDownTree with sprites in your website or project."
        },
        "links": [
          {
            "text": "DropDownTree Items Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/items"
          }
        ]
      },
      {
        "text": "Checkboxes",
        "url": "dropdowntree/checkboxes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample illustrates how you can easily create dropdowntree nodes with checkboxes in $FRAMEWORK DropDownTree by simply setting the child item of the checkboxes to true."
        },
        "links": [
          {
            "text": "DropDownTree Checkboxes Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/checkboxes"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "dropdowntree/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how dropdowntree nodes in $FRAMEWORK TreeView component can be further customized by using templates."
        },
        "links": [
          {
            "text": "DropDownTree Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/templates"
          }
        ]
      },
      {
        "text": "Client Filtering",
        "url": "dropdowntree/client-filtering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how enable the client filtering in the $FRAMEWORK DropDownTree."
        },
        "links": [
          {
            "text": "DropDownTree Filtering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/filtering"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "dropdowntree/local-data-binding",
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how items in the dropdowntree are displayed with the default settings of $FRAMEWORK DropDownTree and how the component can be easily bound to local data."
        },
        "group": "Data Binding",
        "links": [
          {
            "text": "DropDownTree Server DataBinding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/binding/server-binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "dropdowntree/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the $FRAMEWORK hierarchical dropdowntree can be bound to remote data and the items in the dropdowntree populated from an external source."
        },
        "links": [
          {
            "text": "DropDownTree Ajax DataBinding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/binding/ajax-binding"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "dropdowntree/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the modern rendering and styling capabilities of Telerik DropDownTree for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik DropDownTree for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "DropDownTree HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "dropdowntree/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows built-in events in $FRAMEWORK dropdowntree control. Events are triggered when the user selects, collapses, expands, adds or removes an item on the list."
        },
        "group": "API",
        "links": [
          {
            "text": "DropDownTree Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "dropdowntree/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the specific API functions, as well as DataSource interaction options, which control the behaviour of $FRAMEWORK DropDownTree."
        },
        "links": [
          {
            "text": "DropDownTree Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/overview"
          },
          {
            "text": "DropDownTree Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/dropdowntree"
          },
          {
            "text": "DropDownTree Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/dropdowntree"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "dropdowntree/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Get familiar with the RTL support in $FRAMEWORK DropDownTree component. Look at the example and use the source code to play with the demo."
        },
        "group": "Accessibility and Internationalization",
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "DropDownTree Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dropdowntree/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "dropdowntree/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at the source code and play with the demo to find out more about the keyboard support feature in $FRAMEWORK DropDownTree."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Cards",
    "name": "cards",
    "documentation": {
      "aspnet-mvc": "styles-and-layout/cards"
    },
    "category": "Layout",
    "spriteCssClass": "cardsIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "cards/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Cards basic usage."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK Card is a set of classes that provide a way of defining flexible content containers. A card can consist of a header, body and actions and can also accommodate images, lists, groups, separators and more.</p><p>Additional information about how to use the $FRAMEWORK Cards classes can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/styles-and-layout/cards\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        },
        "links": [
          {
            "text": "Cards Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/styles-and-layout/cards"
          }
        ]
      },
      {
        "text": "Orientation",
        "url": "cards/orientation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Cards Orientation"
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK Cards enable you to arrange the content either vertically or horizontally.</p>\n"
        }
      },
      {
        "text": "Action Buttons",
        "url": "cards/action-buttons",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Cards Action Buttons"
        },
        "description": {
          "aspnet-mvc": "<p>The action buttons in the $FRAMEWORK Cards can be arranged horizontally or vertically as well as aligned to the left or right, centered or stretched.</p>\n"
        },
        "links": [
          {
            "text": "Cards Actions Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/styles-and-layout/cards#actions"
          }
        ]
      },
      {
        "text": "Types",
        "url": "cards/types",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Cards types"
        }
      },
      {
        "text": "Layout",
        "url": "cards/layout",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Cards layout modes"
        },
        "description": {
          "aspnet-mvc": "<p>$FRAMEWORK Cards have three additional classes that are useful for laying out series of cards: <ul style=\"list-style-type: disc;\"><li><strong>Card list</strong> - rendering cards detached from one another in a column through the `.k-card-list` class</li><li><strong>Card Group</strong> - rendering cards attached to one another on a single row through the `.k-card-group` class</li><li><strong>Card Deck</strong> - rendering cards detached from one another on a single row through the `.k-card-deck` class</li></ul></p><p>Additional information about how to use the $FRAMEWORK Cards classes can be found in <a href=\"https://docs.telerik.com/kendo-ui/styles-and-layout/cards\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        },
        "links": [
          {
            "text": "Cards Layout Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/styles-and-layout/cards#layout"
          }
        ]
      },
      {
        "text": "Media",
        "url": "cards/media",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Cards Media"
        },
        "description": {
          "aspnet-mvc": "<p>The Card allows you to display an image or a video within its content.</p>\n"
        },
        "links": [
          {
            "text": "Cards Images Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/styles-and-layout/cards#images"
          }
        ]
      },
      {
        "text": "Drag and Drop",
        "url": "cards/drag-and-drop",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates drag and drop of Cards"
        }
      },
      {
        "text": "RTL support",
        "url": "cards/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates right-to-left support of Cards"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      }
    ]
  },
  {
    "text": "Dialog",
    "name": "dialog",
    "api": "web/dialog",
    "documentation": {
      "aspnet-mvc": "helpers/dialog/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=508"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/dialog"
    },
    "spriteCssClass": "dialogIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dialog/index",
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik Dialog for $FRAMEWORK</strong> is a modal popup that brings information to the user. It also provides actions through the action buttons to prompt the user for input or to ask for a decision. The component can also contain more complex UI elements that require the focus of the user. The Dialog control is a subset of the <a href=\"https://www.telerik.com/kendo-ui/window\" target=\"_blank\">Window</a> one where the most prominent difference is the added functionality for actions.</p><br /><p><h3>Key Features</h3></p> <ul style=\"list-style-type: disc;\"><li>Fully customizable visual appearance of the dialog title and body</li><li>Support for rich text content</li><li>Predefined Alert, Confirm, and Prompt Dialogs</li><li>Built-in modality and animations</li><li>Ability to create and add custom actions (buttons) at the bottom of the dialog</li><li>Rich API for maximum flexibility</li><li>Built-in themes</li><li>Accessibility, keyboard navigation and RTL Support</li><li>Rich cross-browser and mobile support</li></ul>"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage of $FRAMEWORK Dialog control"
        },
        "links": [
          {
            "text": "Dialog Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/dialog/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "dialog/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to fire events in $FRAMEWORK dialog control. Open and close are some of the events which you can trigger."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Dialog Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/dialog/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "dialog/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how you can use the API of $FRAMEWORK Dialog control to refresh the content of the dialog, open and close it."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Dialog Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/dialog/overview"
          },
          {
            "text": "Dialog Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/dialog"
          },
          {
            "text": "Dialog Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/dialog"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "dialog/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Dialog control supports right-to-left direction of the dialog to provide best end-user experience."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Dialog Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/dialog/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "dialog/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The sample demonstrates how the keyboard navigation feature is integrated in the $FRAMEWORK Dialog control."
        }
      },
      {
        "text": "TreeView In Dialog",
        "url": "dialog/treeview-integration",
        "packages": [
          "!php",
          "!jsp",
          "!aspnet-core"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how you can use a TreeView in Dialog for picking values and pass them to a input element or a hidden field."
        },
        "requiresServer": "true"
      },
      {
        "text": "TreeList in Dialog",
        "url": "dialog/treelist-integration",
        "packages": [
          "!aspnet-core",
          "!php",
          "!jsp"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how you can use a TreeList in Dialog for picking values and pass them to a input element or a hidden field"
        },
        "requiresServer": "true"
      }
    ],
    "category": "Layout"
  },
  {
    "text": "Editor",
    "name": "editor",
    "api": "web/editor",
    "documentation": {
      "aspnet-mvc": "helpers/editor/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=572"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/editor"
    },
    "spriteCssClass": "editorIcon",
    "items": [
      {
        "text": "Overview",
        "url": "editor/index",
        "description": {
          "aspnet-mvc": "<p>The Telerik UI for $FRAMEWORK Editor is a powerful WYSIWYG component, which allows you and your users to create rich text content in a familiar and user-friendly way. It provides a variety of tools for creating, editing, styling and formatting text, paragraphs, lists, images, tables, hyperlinks and other HTML elements. The component outputs identical HTML across all major browsers, follows accessibility standards and provides API for content manipulation and export to PDF.</p><p><h3>Key Features</h3></p><ul> <li>Intuitive UI for rich text editing, formatting and styling</li> <li>Handles with ease lists, tables, images and hyperlinks creation and formatting</li> <li>File attachment support</li> <li>Fully customizable toolbar and buttons</li> <li>Inline editing of different content areas</li> <li>Format painter tool that lets to copy and paste text formatting</li> <li>Table editing options for columns and rows merge</li> <li>Support for predefined HTML code snippets and non-editable elements</li> <li>Export to PDF</li> <li>Built-in customizable themes such as Default (our own), Bootstrap and Material and more</li> <li>Rich API for maximum flexibility</li> <li>High performance</li> <li>Accessibility, globalization, keyboard navigation and RTL Support</li> <li>Rich cross-browser and mobile support</li> <li>Responsive HTML 5 Rendering</li> </ul> <p>You can find additional information on how to use the Telerik UI for $FRAMEWORK Editor in <a href=\"https://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/editor/overview\">this section</a> of the product documentation."
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can use Telerik editor extension in $FRAMEWORK."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ImageBrowserController.cs",
              "url": "~/Controllers/Editor/ImageBrowserController.cs"
            },
            {
              "name": "EditorImageBrowserController.cs",
              "url": "~/Controllers/Editor/EditorImageBrowserController.cs"
            },
            {
              "name": "BaseFileBrowserController.cs",
              "url": "~/Controllers/Editor/BaseFileBrowserController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Basic usage",
        "url": "editor/basic-usage",
        "packages": [
          "!jsp",
          "!php"
        ],
        "description": {
          "aspnet-mvc": "<p>The Telerik UI for $FRAMEWORK Editor component allows users to edit HTML in a familiar, user-friendly way. In this demo scenario you can interact with the Editor and try yourself the basics of text formatting such as – changing font type, size and color, highlighting areas, managing hyperlinks, bulleted and numbered lists, defining headings and paragraphs, and indenting text accordingly.</p> <p>You can see or explore the Kendo UI Editor features in our various demo sections or check out the component documentation <a href=\"https://docs.telerik.com/kendo-ui/controls/editors/editor/overview\" target=\"_blank\">here</a></p>"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can use Telerik editor extension in $FRAMEWORK."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ImageBrowserController.cs",
              "url": "~/Controllers/Editor/ImageBrowserController.cs"
            },
            {
              "name": "EditorImageBrowserController.cs",
              "url": "~/Controllers/Editor/EditorImageBrowserController.cs"
            },
            {
              "name": "BaseFileBrowserController.cs",
              "url": "~/Controllers/Editor/BaseFileBrowserController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Inline editing",
        "url": "editor/inline-editing",
        "group": "Functionality",
        "description": {
          "aspnet-mvc": "<p>This example shows how you can use the MVC Editor to edit parts of the page inline and at the same time to have an overview of the real layout and appearance.</p> <p>All you need to do to enable the inline editing is to set the .Tag(\"param\") setting, where the \"param\" parameter should be a valid <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_Editable\">contentEditable element</a> as the \"div\" used in this demo. If the Tag attribute is not set, the WYSIWYG editor will be rendered in its default TextArea mode.</p> <h3>Important</h3><p>Editor components instantiated from a <strong>contentEditable</strong> element will not post their value to the server when submitted within a form. If you need to submit these, see the <a href=\"https://docs.telerik.com/kendo-ui/getting-started/web/editor/troubleshooting#inline-editor-value-is-not-posted-to-the-server\">how to post the inline editor value</a> help section.</p>"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to use the $FRAMEWORK Editor to edit parts of the page inline, allowing authors to see the page in its final state."
        },
        "links": [
          {
            "text": "Editor Modes of operation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/modes"
          }
        ]
      },
      {
        "text": "Custom tools",
        "url": "editor/custom-tools",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can easily customize some of $FRAMEWORK Editor native tools. You can also create completely custom tools for the component."
        },
        "description": {
          "aspnet-mvc": "<p>This example shows how to customize some of the native Editor tools (font size, font name and block format) by modifying the tools' item collections, as well as how to create completely custom tools (Content Area Background Color and Insert a Horizontal Ruler).</p> <p>You can use the Add method of the FontName, FontSize and Formatting settings to modify the default font size, font name and formatblock options set.</p> <p>To add a new custom button on the toolbar: set the Tools -&gt; CustomButton:</p> <p>.CustomButton(cb =&gt; cb.Name(\"custom\").ToolTip(\"horizontal rule\").Exec(\"execFunction\"))</p> <p>Where the Exec param should be the name of a JavaScript function that will be fired when the custom button is clicked.</p> <p>If you want to create a custom dropdown with a label next to it, you can set the Tools -&gt; CustomTemplate and specify the HTML markup that will be rendered on the toolbar.</p>"
        },
        "links": [
          {
            "text": "Editor Tools Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/tools"
          }
        ]
      },
      {
        "text": "File and image browser",
        "url": "editor/imagebrowser",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo we will see how the sleek image browser is nicely implemented in $FRAMEWORK Editor control."
        },
        "description": {
          "aspnet-mvc": "<p>You can use the Insert Image and Insert File Browser managers to upload and insert Image and Hyperlink objects into the content area of the MVC Editor. Both dialogs consist of Address and Search fields, File Browser panel which shows the available files, File Upload, Create a New Folder and Delete features. In addition there is a file properties section with fields suitable for images: web address, alternate text, width and height as well as for hyperlinks: web address and title.</p> <p>You can configure the Image browser tool through the ImageBrowser configuration option and the Insert File browser through the FileBrowser one. You can find more information about the Image dialog in this ASP.NET MVC documentation article: <a href=\"https://docs.telerik.com/kendo-ui/web/editor/imagebrowser\">Image Browser</a>.</p>"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileBrowserController.cs",
              "url": "~/Controllers/Editor/FileBrowserController.cs"
            },
            {
              "name": "FileImageBrowserController.cs",
              "url": "~/Controllers/Editor/FileImageBrowserController.cs"
            },
            {
              "name": "EditorFileBrowserController.cs",
              "url": "~/Controllers/Editor/EditorFileBrowserController.cs"
            },
            {
              "name": "BaseFileBrowserController.cs",
              "url": "~/Controllers/Editor/BaseFileBrowserController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Editor Image Browser Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/image-browser"
          }
        ]
      },
      {
        "text": "All tools",
        "url": "editor/all-tools",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the core editing engine in $FRAMEWORK Editor control. Get familiar with all features of the component for any $FRAMEWORK website or web app."
        },
        "description": {
          "aspnet-mvc": "<p>You can see in this demo the whole set of tools supported by the Telerik MVC Editor. You can easily add or hide each of them through the Tools collection option of the component:</p> <p>.Tools(tools =&gt; tools. Clear().Bold().Italic().Underline().Strikethrough()...FontName().FontSize().FontColor().BackColor().Print())</p> <p>If you remove the Clear() option, the default toolbar will be shown along with the specified by you buttons.</p>"
        },
        "links": [
          {
            "text": "Editor Tools Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/tools"
          }
        ]
      },
      {
        "text": "Format Painter",
        "url": "editor/format-painter",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the Editor Format Painter could be used. Get familiar with all features of the component for any $FRAMEWORK website or web app."
        },
        "description": {
          "aspnet-mvc": "<p>You can use the <strong>Format Painter</strong> tool to copy formatting from piece of text and apply it to others in the content area of the Kendo UI Editor. The tool is very similar to the FormatPainter of MS Word®, and is quite useful and time saving when needed to apply identical formatting to multiple sections of the edited content.</p><h3>How it Works</h3><p>Format a section with the desired bold, italic, underline, font size and font family and other formatting and press the <strong>Copy Format button</strong>. This operation will save the formatting of the selected content in the clipboard. If the selection includes sections with different formatting, the tool will copy the styles from the section where the start of the selection is placed.</p><p>To apply the saved formatting, select the text that you want to format and click the <strong>Apply Format button.</strong></p><h3>Supported formatting</h3><p>The tool will copy and apply all inline styles. Also, any classes and attributes present in the source will be copied to the target.</p><p>The tool will also transfer the dom structure from the source to the target, clearing the previous DOM structure. The exceptions are the following targets:</p><ul><li><strong>li</strong> target elements will not be modified. Instead, the copied structure will be applied within them.</li><li><strong>th</strong> and <strong>td</strong> target elements will not be modified. The copied structure will also be applied within them.</li></ul>"
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Table Editing",
        "url": "editor/table-editing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the table editing engine in $FRAMEWORK Editor control. Get familiar with all features of the component for any $FRAMEWORK website or web app."
        },
        "description": {
          "aspnet-mvc": "<p>This demo presents the the table edtiting tools supported:</p><ul>    <li><strong>Table a wizard</strong> enables you to create a new table with different table and cell settings or modify the selected one;</li>    <li><strong>Create table</strong> enables you to easily create a simple table by selecting the rows and columns in the dropdown;</li>    <li><strong>Add row above/below</strong> adds a new row;</li>    <li><strong>Add column left/right</strong> adds a new column;</li>    <li><strong>Delete row/column</strong> deletes the selected row or column;</li>    <li><strong>Merge cells horizontally</strong> merges the selected cell with the one on the left;</li>    <li><strong>Merge cells vertically</strong> merges the selected cell with the one below;</li>    <li><strong>Split cell horizontally/vertically</strong> splits a cell that has <code>colspan</code> or <code>rowspan</code> attribute (as a result of Merge cells command) and adds a new empty cell.</li></ul>"
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Snippets",
        "url": "editor/snippets",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the snippet feature of $FRAMEWORK Editor. See how you can quickly insert HTML code snippet into web-based editor in your app."
        },
        "description": {
          "aspnet-mvc": "<p>The snippets feature of the MVC Editor allows you to quickly insert predefined HTML code snippets in the content area.</p> <p>The snippet tool can insert plain text or HTML content which you can configure using the Tools -&gt; Snippets -&gt; Add(\"Snippet Item Name\", \"&lt;b&gt;My Snippet Content&lt;/b&gt;\") method.</p>"
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Styles",
        "url": "editor/styles",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can use the $FRAMEWORK Editor style tool to customize the content of the control with CSS classes."
        },
        "description": {
          "aspnet-mvc": "<p>The demo presents you how to use the Editor's style tool, which provides the ability to customize the component's content by means of custom CSS classes and styling, and a CSS file registered in the Editor iframe document.</p> <p>You can register and import your own CSS file into the content area through the StyleSheets option:<br /> .StyleSheets(css =&gt; css.Add(Url.Content(\"~/PATH_TO_CSS_FILE/CSS_FILE.css\"))) </p> <p > Use the Tools -&gt; Formatting -&gt; Add(\"Dropdown Item Name\",\".CSS Class Name\") method to populate the Format dropdown with options. Note that the specified CSS class should exist in the CSS file imported in the content area through the StyleSheets -&gt; Add method.</p>"
        },
        "links": [
          {
            "text": "Editor Styling of Content Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/styling"
          }
        ]
      },
      {
        "text": "PDF Export",
        "url": "editor/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With $FRAMEWORK Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the PDF export support in the component."
        },
        "description": {
          "aspnet-mvc": "<p>Nowadays, the PDF format is very popular and widely used to present documents in a manner independent of application software, hardware and operating systems. This demo demonstrates how to export the Telerik MVC Editor contents to PDF.</p> <p>The approach is very straight-forward - to export the content to PDF include the corresponding command to the editor&rsquo;s toolbar&nbsp;.Tools(tools =&gt; tools.Pdf()) and configure the export settings through the Pdf attribute. For instance, you can specify the file name and whether to export all pages, margins, paper size, font, etc.</p>"
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Import and Export",
        "url": "editor/import-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With $FRAMEWORK Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the Telerik Document Processing export integration in the component."
        },
        "packages": [
          "!php",
          "!jsp",
          "!online"
        ],
        "sources": {
          "aspnet-mvc": [
            {
              "name": "EditorExportController.cs",
              "url": "~/Controllers/Editor/EditorExportController.cs"
            },
            {
              "name": "EditorImportController.cs",
              "url": "~/Controllers/Editor/EditorImportController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Paste Cleanup",
        "url": "editor/paste-cleanup",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can clean up the content users paste in $FRAMEWORK Editor"
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK web editor exposes several options for cleaning up the content users paste in the content area. This allows for better control on what content is entered and ensures consistent styling.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Immutable Elements",
        "url": "editor/immutable-elements",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can use immutable elements in $FRAMEWORK Editor"
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK web editor and its <strong>Immutable Elements</strong> feature enables you to predefine elements in the content area that cannot be edited by the end user.&nbsp;</p><p>This demo shows a use case where a mail form is to be edited. You can see also:</p><ol><li>How to enable the Immutable Elements—by using the&nbsp;<a href='https://docs.telerik.com/kendo-ui/api/javascript/ui/editor#configuration-immutables'>immutables option</a>;</li><li>How to define the HTML elements that cannot be edited—by adding the <strong>contenteditable='false'</strong> attribute;</li><li>How to use the <a href='https://docs.telerik.com/kendo-ui/api/javascript/ui/editor#configuration-immutables.serialization'>immutables.serialization</a>&nbsp;and&nbsp;<a href='https://docs.telerik.com/kendo-ui/api/javascript/ui/editor#configuration-immutables.deserialization'>immutables.deserialization</a>&nbsp;option to change the data shown in the&nbsp;<strong>viewHtml</strong> dialog and enable end user to control the CSS text-align property from there;</li><li>How to define default styles for the immutable elements;</li><li>And how to define styles when an immutable element is selected to improve UX.</li></ol>"
        },
        "links": [
          {
            "text": "Editor Immutable Element Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/immutable"
          }
        ]
      },
      {
        "text": "Events",
        "url": "editor/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates which events are fired when the $FRAMEWORK editor is blurred, its content is changed or a command is executed."
        },
        "group": "API",
        "description": {
          "aspnet-mvc": "<p>Telerik MVC Editor exposes rich API and events which provide easy configuration or extension points for customization on top of its built-in features.</p> <p>This particular demo shows how you can intercept the <strong>Change</strong>, <strong>Execute, Select </strong>and <strong>Paste </strong>events of the editor to output messages in the console when these events are raised. You can use these events for customizations or to execute custom logic, if necessary.</p>"
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "Globalization",
        "url": "editor/globalization",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "editor/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This examples show how the API of $FRAMEWORK Editor works in action and how the content in the editor can be easily manipulated via the API."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC Editor exposes rich client-side API and events, which provide easy configuration or extension points for custom functionality on top of the built-in features.</p> <p>The example shows how you can get a reference to the editor&rsquo;s client-side object and obtain/replace its content using the provided <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/editor#methods-value\">editor.value()</a> method.</p> <p>You can find more information about the available editor&rsquo;s client-side API <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/editor\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          },
          {
            "text": "Editor Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/editor"
          },
          {
            "text": "Editor Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/editor"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "editor/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With $FRAMEWORK Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the RTL support in the component."
        },
        "group": "Accessibility and Internationalization",
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Editor supports right-to-left languages and rendering. All you have to do is to register the <strong>kendo.rtl.min.css</strong> file (located at Kendo.Mvc.Examples\\Content\\web installation folder) and wrap the editor in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the components can be found in <a href=\"https://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this topic</a>.</p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Editor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/editor/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "editor/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK Editor is another control that supports keyboard navigation. Check out the demo to learn how to implement it in your app."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ExpansionPanel",
    "name": "expansionpanel",
    "component": "expansionpanel",
    "api": "web/expansionpanel",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/expansionpanel/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=598"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/expansionpanel"
    },
    "spriteCssClass": "expansionpanelIcon",
    "items": [
      {
        "text": "Overview",
        "url": "expansionpanel/index",
        "deferred": true,
        "title": {
          "aspnet-mvc": "Demo and source code for Telerik UI ExpansionPanel for $FRAMEWORK"
        },
        "meta": {
          "aspnet-mvc": "This demo shows the API functionality of the Telerik UI ExpansionPanel in $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik UI ExpansionPanel</strong> for $FRAMEWORK is a layout component that gives you a way to expand or collapse a content area within your application.</p>"
        }
      },
      {
        "text": "API",
        "url": "expansionpanel/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The API Functions of Telerik UI ExpansionPanel for $FRAMEWORK give you the option to set the configuration of the ExpansionPanel component."
        }
      },
      {
        "text": "Events",
        "url": "expansionpanel/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Take a look at this demo to learn more about the events of the Telerik UI ExpansionPanel in $FRAMEWORK."
        }
      },
      {
        "text": "Keyboard Navigation",
        "url": "expansionpanel/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo highlights the Telerik UI ExpansionPanel in $FRAMEWORK keyboard navigation feature."
        }
      },
      {
        "text": "RTL support",
        "url": "expansionpanel/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the right-to-left feature is supported in $FRAMEWORK ExpansionPanel component."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how the right-to-left feature is supported in $FRAMEWORK ExpansionPanel component.</p>"
        }
      }
    ],
    "category": "Layout"
  },
  {
    "text": "ImageEditor",
    "name": "imageeditor",
    "api": "web/imageeditor",
    "documentation": {
      "aspnet-mvc": "html-helpers/editors/imageeditor/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=789"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/imageeditor"
    },
    "spriteCssClass": "imageEditorIcon",
    "items": [
      {
        "text": "Overview",
        "url": "imageeditor/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can use Telerik ImageEditor extension in $FRAMEWORK."
        },
        "links": [
          {
            "text": "ImageEditor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/imageeditor/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "imageeditor/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the API functionality of the Telerik UI ImageEditor in $FRAMEWORK."
        },
        "links": [
          {
            "text": "ImageEditor Client-Side API Documentation",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/imageeditor"
          }
        ]
      },
      {
        "text": "Events",
        "url": "imageeditor/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "Take a look at this demo to learn more about the events of the Telerik UI ImageEditor in $FRAMEWORK."
        },
        "links": [
          {
            "text": "ImageEditor Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/imageeditor/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "imageeditor/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo highlights the Telerik UI ImageEditor in $FRAMEWORK keyboard navigation feature."
        },
        "links": [
          {
            "text": "ImageEditor Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/imageeditor/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "FileManager",
    "name": "filemanager",
    "api": "web/filemanager",
    "documentation": {
      "aspnet-mvc": "html-helpers/data-management/filemanager/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=618"
    },
    "spriteCssClass": "fileManagerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "filemanager/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik $FRAMEWORK FileManager control works and view the demo source code."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK FileManager</strong> is a component, which allows you to manage the file system and to perform the most common folder/file operations. </p><p><strong>Key Features</strong></p><ul style=\"list-style-type: disc;\"><li>ContextMenu</li><li>Drag and Drop</li><li>Views</li><li>Navigation</li><li>PreviewPane</li><li>Search</li><li>Sort</li><li>Toolbar Commands</li><li>Accessibility</li></ul><p>Additional information about how to use the Telerik $FRAMEWORK FileManager component can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filemanager/overview\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileManagerDataController.cs",
              "url": "~/Controllers/FileManager/FileManagerDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "FileManager Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filemanager/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "filemanager/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the FileManager templates functionality"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileManagerDataController.cs",
              "url": "~/Controllers/FileManager/FileManagerDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "FileManager Preview Pane Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filemanager/preview-pane"
          }
        ]
      },
      {
        "text": "Image Preview",
        "url": "filemanager/image-preview",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how images can be previewed with the FileManager component"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileManagerDataController.cs",
              "url": "~/Controllers/FileManager/FileManagerDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "FileManager Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filemanager/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "filemanager/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the FileManager events"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileManagerDataController.cs",
              "url": "~/Controllers/FileManager/FileManagerDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "FileManager Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filemanager/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "filemanager/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the API methods of the FileManager component"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileManagerDataController.cs",
              "url": "~/Controllers/FileManager/FileManagerDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "FileManager Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filemanager/overview"
          },
          {
            "text": "FileManager Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/filemanager"
          },
          {
            "text": "FileManager Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/filemanager"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "filemanager/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Right-to-left-support of the FileManager component"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileManagerDataController.cs",
              "url": "~/Controllers/FileManager/FileManagerDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "FileManager Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filemanager/overview"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "filemanager/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Keyboard navigation of the FileManager component"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "FileManagerDataController.cs",
              "url": "~/Controllers/FileManager/FileManagerDataController.cs"
            }
          ]
        }
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "Filter",
    "name": "filter",
    "api": "web/filter",
    "documentation": {
      "aspnet-mvc": "helpers/data-management/filter/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=626"
    },
    "spriteCssClass": "filterIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "filter/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik $FRAMEWORK Filter control works and view the demo source code."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Kendo UI Filter</strong> control is a powerful component, which allows you to create a filter that can be used by the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource.html\" target=\"_blank\">Kendo DataSource</a>. It provides an intuitive UI and a variety of options about how to create the underlying filter expression. You can apply the filter to the datasource by clicking the built-in apply button or manually using the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/filter.html#methods-applyFilter\" target=\"_blank\">applyFilter</a> client-side method. The Filter supports editors customization in the form of templates. Each time the expression is changed you are notified by the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/filter.html#events-change\" target=\"_blank\">change</a> event thus allowing you to reapply it if needed. In order to better understand the structure of the filter expression the Filter has a preview functionality that visualizes the filter to be applied. </p>"
        },
        "links": [
          {
            "text": "Filter HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filter/overview"
          }
        ]
      },
      {
        "text": "Custom Editors",
        "url": "filter/custom-editors",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will see how to use custom editors for the $FRAMEWORK Filter."
        },
        "description": {
          "aspnet-mvc": "<p>In numerous scenarios there's a requirement to use a specific editor for a certain type of data across the entire application. Using a specific editor inside the Filter is possible by utilizing an editor template as showcased in this demo."
        },
        "links": [
          {
            "text": "Filter HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filter/overview"
          }
        ]
      },
      {
        "text": "Persist state",
        "url": "filter/persist-state",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how setOptions and getOptions methods can manipulate the state of $FRAMEWORK Filter."
        },
        "description": {
          "aspnet-mvc": "<p>A common scenario is to save the user customization and settings when interacting with your app, and then restore them once he/she logs back at some point in the future.</p> <p>The Kendo UI Filter provides the ability to save and restore changes that were previously applied to its structure, using its <strong>getOptions</strong> and <strong>setOptions</strong> client-side methods. You can use these methods to store settings and when needed to restore them. To demonstrate this functionality, we use <strong>localStorage</strong> key/value pair to save and load the filter state.</p>"
        },
        "links": [
          {
            "text": "Filter Persisting the State Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filter/state"
          }
        ]
      },
      {
        "text": "Operators",
        "url": "filter/operators",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to set operators per field or type and how to create a custom operator"
        },
        "description": {
          "aspnet-mvc": "<p>This example shows how to configure:</p><p>Custom operators per field. Customizing the operators is available via the <a href=\"https://docs.telerik.com/aspnet-mvc/api/Kendo.Mvc.UI.Fluent/FilterFieldBuilder#operatorssystemactionkendomvcuifluentfilteroperatorssettingsbuilder\" target=\"_blank\">fields.operators property.</a></p><p>Custom filter function so custom filter operations can be perfomed on the data.</p><p>For more information on the Filter component refer to its <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filter/operators\" target=\"_blank\">documentation</a>.</p>"
        },
        "links": [
          {
            "text": "Filter Setting the Operators Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/filter/operators"
          }
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "FloatingActionButton",
    "name": "floatingactionbutton",
    "api": "web/floatingactionbutton",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/floatingactionbutton/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=635"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/floatingactionbutton"
    },
    "spriteCssClass": "floatingactionbuttonIcon",
    "items": [
      {
        "text": "Overview",
        "url": "floatingactionbutton/index",
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK FloatingActionButton</strong> is a component, which represents the primary action of a screen. It floats in the application above other items and has some main action that is contextual to the content on the page.</p>"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the usage of the $FRAMEWORK FloatingActionButton control"
        },
        "links": [
          {
            "text": "FloatingActionButton Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/floatingactionbutton/overview"
          }
        ]
      },
      {
        "text": "Basic Usage",
        "url": "floatingactionbutton/basic-usage",
        "packages": [
          "!jsp",
          "!php"
        ],
        "description": {
          "aspnet-mvc": "This demo shows the basic usage of the $FRAMEWORK FloatingActionButton component. You can customize the shape, size, color, alignment and position, text and icon, and speed dial items of the $FRAMEWORK FloatingActionButton. Review their definitions for further info and check the rest of the demos for further details."
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the basic usage of the $FRAMEWORK FloatingActionButton component. "
        },
        "links": [
          {
            "text": "FloatingActionButton Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/floatingactionbutton/overview"
          }
        ]
      },
      {
        "text": "Alignment",
        "url": "floatingactionbutton/alignment",
        "packages": [
          "!jsp",
          "!php"
        ],
        "description": {
          "aspnet-mvc": "To configure the alignment of the FloatingActionButton relative to the container use the \"align\" configuraiton option. To configure the position of the FloatingActionButton use the positionMode configuration option. Selecting \"absolute\" positions the button relative to the nearest positioned ancestor. Selecting \"fixed\" positions the button relative to the viewport."
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo highlights the alignment and position configuraiton options of the $FRAMEWORK FloatingActionButton component."
        },
        "links": [
          {
            "text": "FloatingActionButton Alignment Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/floatingactionbutton/alignment"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "floatingactionbutton/templates",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to customize the templates of the FloatingActionButton."
        },
        "links": [
          {
            "text": "FloatingActionButton Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/floatingactionbutton/templates"
          }
        ]
      },
      {
        "text": "API",
        "url": "floatingactionbutton/api",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to use the $FRAMEWORK FloatingActionButton API."
        },
        "description": {
          "aspnet-mvc": "When setting an icon use the name of an existing icon of the Kendo UI theme that is rendered in the FloatingActionButton. For details on available Web Font Icons refer to <a href=\"https://docs.telerik.com/kendo-ui/styles-and-layout/icons-web\" target=\"_blank\">this article</a>."
        },
        "links": [
          {
            "text": "FloatingActionButton Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/floatingactionbutton/overview"
          },
          {
            "text": "FloatingActionButton Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/floatingactionbutton"
          },
          {
            "text": "FloatingActionButton Client-side",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/floatingactionbutton"
          }
        ]
      },
      {
        "text": "Events",
        "url": "floatingactionbutton/events",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the events of the $FRAMEWORK FloatingActionButton API."
        },
        "links": [
          {
            "text": "FloatingActionButton Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/floatingactionbutton/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "floatingactionbutton/right-to-left-support",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Right-To-Left funcionality of the $FRAMEWORK FloatingActionButton."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "FloatingActionButton Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/floatingactionbutton/overview"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "floatingactionbutton/keyboard-navigation",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the keyboard navigation of the $FRAMEWORK FloatingActionButton."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Form",
    "name": "form",
    "api": "web/form",
    "documentation": {
      "aspnet-mvc": "html-helpers/layout/form/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=643"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/form"
    },
    "spriteCssClass": "formIcon",
    "items": [
      {
        "text": "Overview",
        "url": "form/index",
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Form</strong> is a component, which allows you to generate and manage forms.</p><p><h3>Key Features</h3></p><ul style=\"list-style-type: disc;\"><li>Build Custom Forms</li><li>Layout</li><li>Groups</li><li>Orientation</li><li>Validation</li><li>Accessibility</li></ul><p>Additional information about how to use the $FRAMEWORK Form can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/overview\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage of the $FRAMEWORK Form control"
        }
      },
      {
        "text": "Basic Usage",
        "url": "form/basic-usage",
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Form</strong> is a component, which allows you to generate and manage forms.</p><p><h3>Key Features</h3></p><ul style=\"list-style-type: disc;\"><li>Build Custom Forms</li><li>Layout</li><li>Groups</li><li>Orientation</li><li>Validation</li><li>MVVM</li><li>Accessibility</li></ul><p>Additional information about how to use the $FRAMEWORK Form can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/overview\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage of the $FRAMEWORK Form control"
        }
      },
      {
        "text": "Items",
        "url": "form/items",
        "packages": [
          "!php",
          "!jsp"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to define a collection of editor fields and build a custom form with the $FRAMEWORK Form."
        },
        "links": [
          {
            "text": "Form Items Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/items"
          }
        ]
      },
      {
        "text": "Layout",
        "url": "form/layout",
        "packages": [
          "!php",
          "!jsp"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Form layout options."
        },
        "links": [
          {
            "text": "Form Layout Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/layout"
          }
        ]
      },
      {
        "text": "Groups",
        "url": "form/groups",
        "packages": [
          "!php",
          "!jsp"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Form grouping capabilities."
        },
        "links": [
          {
            "text": "Form Groups Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/groups"
          }
        ]
      },
      {
        "text": "Hidden fields",
        "url": "form/hidden-fields",
        "description": {
          "aspnet-mvc": "The <strong>Telerik $FRAMEWORK Form</strong> component has built-in support for hidden fields. You can use this functionality to hide an ID property for example."
        },
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to use hidden hields in the $FRAMEWORK Form control"
        }
      },
      {
        "text": "Orientation",
        "url": "form/orientation",
        "packages": [
          "!php",
          "!jsp"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Form orientation options."
        },
        "links": [
          {
            "text": "Form Orientation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/orientation"
          }
        ]
      },
      {
        "text": "Validation",
        "url": "form/validation",
        "packages": [
          "!php",
          "!jsp"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates validation of the Form."
        },
        "links": [
          {
            "text": "Form Validation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/validation"
          }
        ]
      },
      {
        "text": "API",
        "url": "form/api",
        "packages": [
          "!php",
          "!jsp"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the API methods of the Form."
        },
        "links": [
          {
            "text": "Form Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/form/overview"
          },
          {
            "text": "Form Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/form"
          },
          {
            "text": "Form Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/form"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "Grid",
    "name": "grid",
    "api": "web/grid",
    "documentation": {
      "aspnet-mvc": "helpers/grid/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=754"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/grid"
    },
    "spriteCssClass": "gridIcon",
    "items": [
      {
        "text": "Overview",
        "url": "grid/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK Grid by Telerik control example | $FRAMEWORK Grid Overview"
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik Grid for $FRAMEWORK</strong> is a powerful data visualization and editing component, that exposes a plethora of functionalities and events that could be combined altogether. The Grid can be bound to various data sources and comes with built-in common features such as paging, sorting, filtering, or grouping and more advanced one such as hierarchy with aggregates, frozen columns, virtualization and endless scrolling, state management, binding to SignalR Hub and more!</p><p>In this demo, you can see the Grid with enabled paging, sorting, filtering, grouping, export to Excel, export to PDF, search panel, checkbox selection, aggregates, frozen columns, column menu, and using the template engine to customize the Grid appearance and incorporate external components such as Badge, Chart, Rating, and DropDownList.</p><strong>Telerik Grid Key Features</strong><ul style=\"list-style-type: disc;\"> <li>Responsive and Adaptive HTML 5 Rendering</li> <li>HTML and Tag Helper options</li> <li>Built-in options for paging, sorting, filtering and grouping functionalities</li> <li>Insert, update and delete of date from various data sources such as WebAPI, AJAX, GraphQL, SignalR etc.</li> <liUltimate performance with column and row virtual scrolling</li> <li>Column menu, resizing, reordering and show/hide Interactions</li> <li>Search panel</li> <li>Hierarchical grid and aggregates</li> <li>Selecting cells, rows, checkbox selection</li> <li>Full control over the layout presentations through the Grid templates (toolbar, row and detail templates)</li> <li>Frozen columns and multi-column headers</li> <li>Export to PDF and MS Excel</li> <li>Accessibility, Keyboard Navigation, Globalization and RTL Support</li><li>Server-Side and Client-Side API for Max Flexibility</li><li>Scaffolding in Visual Studio</li> </ul> <p>You can find additional information on how to use the $FRAMEWORK Grid <a href=\"https://www.telerik.com/aspnet-mvc/grid\">this section</a> of the product documentation.</p>"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "DetailProductViewModel.cs",
              "url": "~/Models/DetailProductViewModel.cs"
            }
          ]
        }
      },
      {
        "text": "Basic usage",
        "url": "grid/basic-usage",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo for ASP.NET MVC jQuery-powered Grid in $FRAMEWORK you will see all basic functionalities of the extension."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik Grid for $FRAMEWORK</strong> is a powerful component, which allows you to visualize and edit data via its table representation. It provides a variety of options about how to present and perform operations over the underlying data, such as paging, sorting, filtering, grouping, editing, exporting and many more. <br /> <br /> You can provide the data to the widget with Server (HTTP GET requests) or AJAX binding.<br /> In this demo you can see how you can easily configure the grid to display data and perform sorting, paging and grouping operations via its built-in settings. </p> <p>You can find additional information on how to use the $FRAMEWORK Grid in <a href=\"https://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/overview\" target=\"_blank\"> this section</a> of the product documentation.<br/></p>"
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Adaptive Rendering",
        "url": "grid/adaptive-rendering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will see the adaptive rendering for ASP.NET MVC jQuery-powered Grid in $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>You can enable the Adaptive Mobile Rendering for the Grid via a simple configuration setting. All you have to do is set its <b><a target=\"_blank\" href=\"https://docs.telerik.com/aspnet-mvc/api/Kendo.Mvc.UI.Fluent/GridBuilder#mobile\">mobile</a></b> attribute to <b>true</b>. This will make the column menu, filter menu and popup edit form slide in a new screen for the user. To force the mobile rendering, regardless of browser type, set the configuration to <b>phone</b>.</p><p>The column resizing feature on touch screen devices is triggered when the user holds a finger on the respective column header. When the resizing icon appears, the user can resize the column by dragging.</p><p>More information regarding Grid Adaptive Rendering can be found in the documentation <a target=\"_blank\" href=\"https://docs.telerik.com/aspnet-mvc/helpers/grid/adaptive\">here</a>.</p>\n"
        },
        "links": [
          {
            "text": "Grid Adaptive Rendering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/appearance/adaptive"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "grid/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how we can bind the Telerik $FRAMEWORK Grid control to local JSON Data by using ASP.NET MVC DataSource component."
        },
        "group": "Data Binding",
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Grid offers two ways of data-binding:</p> <ul style=\"list-style-type: disc;\"> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/grid/server-binding\">Server</a> - the widget performs server-side requests (HTTP GET) when doing paging, sorting and filtering.</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/ajax-binding\">Ajax</a> - the widget will make Ajax requests when doing paging, sorting, filtering, grouping or saving data. In this mode the grid retrieves only the data (in JSON format) representing the current page. As a result only the grid is updated.</li> </ul> <p>In this demo you can see how to databind the Grid through Ajax-bound mode to an entity DataSource. The ProductService class defines the CRUD data structure that is applied to the Grid.</p> <p>Note that in addition to the visualization, the grid also provides built-in support for operations over data such as sorting, filtering and paging.</p> <p>Additional information about how to utilize the data binding feature of the MVC grid component can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/overview\">this section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Grid Local Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/local"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "grid/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example and demo source code illustrate how the Telerik $FRAMEWORK Grid component can be bound to remote data using the DataSource component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Grid offers two ways of data-binding:</p> <ul style=\"list-style-type: disc;\"> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/grid/server-binding\">Server</a> - the widget performs server-side requests (HTTP GET) when doing paging, sorting and filtering.</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/ajax-binding\">Ajax</a> - the widget will make Ajax requests when doing paging, sorting, filtering, grouping or saving data. In this mode the grid retrieves only the data (in JSON format) representing the current page. As a result only the grid is updated.</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP, OData or XML format, and utilize the DataSource as a mediator between the grid and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the grid fetches its data from a MVC controller assigned via the DataSource read configuration. In addition to the visualization, the grid also provides built-in support for operations over data such as sorting, filtering and paging.</p> <p>Additional information about how to utilize the data binding feature of the MVC grid component can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/overview\">this section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Grid Remote Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/ajax-binding"
          }
        ]
      },
      {
        "text": "Binding to Kinvey Backend Services",
        "url": "grid/kinvey",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this sample you will see in action how Telerik $FRAMEWORK Grid is bound to Kinvey cloud-based services."
        },
        "description": {
          "aspnet-mvc": "<h4>What are the Kinvey Backend Services?</h4><p>Kinvey Backend Services are a set of cloud-based services that enable developers to build and manage mobile apps significantly faster, easier and more scalable way. Kinvey Backend Services can significantly speed-up development by providing your app with data storage, user management and server-code execution.</p><p style=\"padding-top: 1em;\">&raquo; <a class=\"hyperlink\" href=\"https://www.kinvey.com/\" title=\"Getting started with Kinvey Backend Services\">What are Kinvey Backend Services</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://devcenter.kinvey.com/html5/guides/getting-started\">Kinvey Backend Services HTML5 SDK</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://github.com/Kinvey/kinvey-kendo-data-source\" title=\"Introduction to Kendo UI and Kinvey Backend Services JavaScript integration\">Integration with Kendo UI</a></p><p class=\"demo-hint\" style=\"padding-top: 1em;\">Note: The Kinvey Backend Services data source is not supported on IE11 and below yet, because it relies on <a class=\"hyperlink\" href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">cross-origin resource sharing</a>.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to GraphQL Service",
        "url": "grid/graphql",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this sample you will see in action how Telerik $FRAMEWORK Grid is bound to a GraphQL service."
        },
        "description": {
          "aspnet-mvc": "<h4>What are the benefits of using a GraphQL service?</h4><p>A GraphQL service is served over HTTP through a single endpoint that responds using JSON and expresses the full set of capabilities of the API. The current example consumes data from an ASP.NET Core GraphQL Service that is available for review in the below linked repository.</p> <p class=\"demo-hint\" style=\"padding-top: 1em;\"><a class=\"hyperlink\" href=\"https://github.com/telerik/kendo-ui-demos-service/tree/master/graphql/graphql-aspnet-core\">GraphQL Service Repository</a>.</p>"
        }
      },
      {
        "text": "Binding to SignalR",
        "url": "grid/signalr",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how the Telerik $FRAMEWORK Grid can be bound to SignalR Hub for real-time push notifications."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how the Telerik $FRAMEWORK Grid can be bound to a <a href=\"https://www.asp.net/signalr\">SignalR</a> Hub for real-time push notifications. This is useful for web applications (chat, gaming and other apps) which require high-frequency updates where you usually want to perform grid updates in real-time on all connected clients.</p> <p>To configure the SignalR binding, set the <strong>SignalR</strong> and <strong>Transport</strong> settings in the Grid&rsquo;s DataSource configuration.&nbsp; In this way you instruct the data source to use SignalR protocol for transmitting and operating with data in real time.</p> <p>You can find more information in this article: <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/grid/how-to/Binding/grid-bound-to-signalr\" target=\"_blank\">Binding Grid widget to <strong>SignalR</strong> Hub</a>.</p>"
        },
        "links": [
          {
            "text": "Grid SignalR Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/signalr-binding"
          }
        ]
      },
      {
        "text": "Custom ajax binding",
        "deferred": true,
        "url": "grid/customajaxbinding",
        "links": [
          {
            "text": "Grid Custom AJAX Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/custom-binding"
          }
        ]
      },
      {
        "text": "Custom data source",
        "deferred": true,
        "url": "grid/custom-datasource"
      },
      {
        "text": "OData binding",
        "deferred": true,
        "url": "grid/odata"
      },
      {
        "text": "Web API binding",
        "url": "grid/webapi",
        "deferred": true,
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Grid Web API Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/webapi"
          }
        ]
      },
      {
        "text": "Server binding",
        "deferred": true,
        "url": "grid/serverbinding",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Custom server binding",
        "deferred": true,
        "url": "grid/customserverbinding",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Export to Excel",
        "url": "grid/excel-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export ASP.NET MVC grid as Microsoft Excel file"
        },
        "group": "Exporting",
        "description": {
          "aspnet-mvc": "<p>This example shows how to enable the Export to Excel functionality of the Telerik MVC Grid extension.<br /> You have to include the Excel toolbar command .ToolBar(tools =&gt; <strong>tools.Excel()</strong>) as well as to specify the <strong>FileName</strong> export setting. </p> <p>Alternatively, you could force the Excel export by invoking the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsExcel\" target=\"_blank\">saveAsExcel</a> method from the Client-side API of the component. <br /> <br /> Yet another useful option is the ability to customize the grid&rsquo;s rows/columns and cells of the exported file by intercepting the <strong>excelExport</strong> event. You can find more information in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/grid/excel-export\">following help article</a>.</p><p>The demo also demonstrates how a Grid column can be excluded from exporting via the <a target=\"_blank\" href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/excel-export#exclude-column-from-exporting\">Exportable</a> setting.</p>"
        },
        "links": [
          {
            "text": "Grid Excel Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/excel-export"
          }
        ]
      },
      {
        "text": "Export to PDF",
        "url": "grid/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export ASP.NET MVC grid as PDF file"
        },
        "description": {
          "aspnet-mvc": "<p>Nowadays, the PDF format is very popular and widely used to present documents in a manner independent of application software, hardware and operating systems. This demo demonstrates how to export the Telerik MVC Grid contents to PDF.</p> <p>The approach is very straight-forward - to export the grid content to PDF include the corresponding command to the grid toolbar&nbsp;.ToolBar(tools =&gt; <strong>tools.Pdf()</strong>) and configure the PDF export setting. For instance, you can specify the file name and whether to export all pages, margins, paper size, font, etc. To initiate export programmatically, you can call the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsPDF\">saveAsPdf</a> method from the client-side API. <br /> <br /> Additionally, you can customize the appearance of the exported grid table by attaching to the <strong>pdfExport</strong> event. Visit the <a href=\"https://docs.telerik.com/kendo-ui/controls/data-management/grid/pdf-export#pdf-export\" target=\"_blank\">following help article</a> to learn exactly how to do that.</p><p>The demo also demonstrates how a Grid column can be excluded from exporting via the <a target=\"_blank\" href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/pdf-export#exclude-column-from-exporting\">Exportable</a> setting.</p>"
        },
        "links": [
          {
            "text": "Grid PDF Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/pdf-export"
          }
        ]
      },
      {
        "text": "Copy to Excel",
        "url": "grid/copy-to-excel",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will learn how to enable the allowCopy option of ASP.NET MVC Grid component to allow copying data to Excel."
        },
        "description": {
          "aspnet-mvc": "<p>Having used to the copy-paste functionality available in MS Excel, many users would want to copy grid cell content from web apps and paste in Excel, or some other place for further review, or just to duplicate it.</p> <p>With the Telerik Grid HTML helper this built-in functionality is supported by setting two configuration settings: <strong>Selectable</strong> -&gt; GridSelectionMode.Multiple and <strong>AllowCopy</strong>(true). As simple as that, your users will be able to utilize copy and paste between the browser and their apps.</p>"
        },
        "links": [
          {
            "text": "Grid Excel Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/excel-export"
          }
        ]
      },
      {
        "text": "Selection & Export",
        "url": "grid/selection-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will learn how to copy and export only the selected data in ASP.NET MVC Grid by Telerik."
        },
        "description": {
          "aspnet-mvc": "<p>The ASP.NET MVC Grid by Telerik provides functionality that enables users to work with subsets of Grid data - single range, multiple ranges or specific cells:<ul><li>Copy & Paste selected ranges and cells</li><li>Export data ranges and cells to MS Excel spreadsheet</li><li>Export valid data ranges to ASP.NET MVC Telerik Chart</li></ul></p><p><h5>Utilizing selection modes:<h5><ul><li>Cell combinations - Using the CTRL Key + Left Click combination, select cells by clicking on them.</li><li>Range - Left click on one of the cells and drag the mouse across other cells.</li><li>Range combination - Make a range selection, press the CTRL key and make another range selection.</li></ul><h5>How to use the demo:</h5><ol><li>Select the cells you want to copy or export.</li><li>Click on the menu icon at the top right of the grid.</li><li>Select one of the options.</li><li>When exporting to chart make sure both ShipCountry and Freight cells are selected.</li></ol></p><p>More about <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/selection-export\">Grid Selection & Export for ASP.NET MVC</a></p>"
        },
        "links": [
          {
            "text": "Grid Selection & Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/selection-export"
          }
        ]
      },
      {
        "text": "Server Export",
        "url": "grid/server-export",
        "deferred": true,
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ],
        "links": [
          {
            "text": "Grid Server Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/export/server-export"
          }
        ]
      },
      {
        "text": "Batch editing",
        "url": "grid/editing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this sample you will play with the batch editing functionality of Telerik $FRAMEWORK Grid."
        },
        "group": "Data Editing",
        "description": {
          "aspnet-mvc": "<p>A common scenario is to switch grid cells in edit mode by simply clicking them, update the data on the client and then process all changes on the server in a single batch update.<br /> <br /> This demo shows how this can be accomplished using the built-in batch create, update and destroy commands of the Telerik Grid component.<br /> <br /> All you have to do to enable the batch data editing functionality is to:</p> <ul style=\"list-style-type: disc;\"> <li>Turn on the inline cell editing by setting: .Editable(editable =&gt; editable.Mode(GridEditMode.<strong>InCell</strong>))</li> <li>Enable the Add New Record, Save Changes and Discard Changes buttons on the toolbar by setting: .ToolBar(toolbar =&gt; { toolbar.<strong>Create</strong>(); toolbar.<strong>Save</strong>(); }</li> <li>Set .<strong>Batch</strong>(<strong>true</strong>) and .<strong>ServerOperation</strong>(<strong>false</strong>) properties in the DataSource declaration to enable batch updates and perform the paging, sorting, filtering and grouping operations on the client.</li> <li>Invoke the CRUD action methods in the DataSource</li> </ul> <p>Once the cells are edited you have the option to process the changes or discard them. Click on a cell/row to place it in edit mode. Use the Save changes or Cancel changes buttons to process/discard all changes at once.</p> <p>For more details about the batch editing capabilities of the MVC Grid see the help article <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/batch\" target=\"_blank\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Batch Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/batch"
          }
        ]
      },
      {
        "text": "Batch editing OData-v4",
        "url": "grid/odatav4",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this sample you will play with the batch editing functionality of Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>A common scenario is to switch grid cells in edit mode by simply clicking them, update the data on the client and then process all changes on the server in a single batch update.<br /> <br /> This demo shows how this can be accomplished using the built-in batch create, update and destroy commands of the Telerik Grid component.<br /> <br /> All you have to do to enable the batch data editing functionality is to:</p> <ul style=\"list-style-type: disc;\"> <li>Turn on the inline cell editing by setting: .Editable(editable =&gt; editable.Mode(GridEditMode.<strong>InCell</strong>))</li> <li>Enable the Add New Record, Save Changes and Discard Changes buttons on the toolbar by setting: .ToolBar(toolbar =&gt; { toolbar.<strong>Create</strong>(); toolbar.<strong>Save</strong>(); }</li> <li>Set .<strong>Batch</strong>(<strong>true</strong>) in the DataSource declaration to enable batch updates.</li> <li>Invoke the CRUD action methods in the DataSource</li> </ul> <p>Once the cells are edited you have the option to process the changes or discard them. Click on a cell/row to place it in edit mode. Use the Save changes or Cancel changes buttons to process/discard all changes at once.</p> <p>For more details about the batch editing capabilities of the MVC Grid see the help article <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/batch\" target=\"_blank\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Batch Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/batch"
          }
        ]
      },
      {
        "text": "Inline editing",
        "url": "grid/editing-inline",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the values in the cells of Telerik $FRAMEWORK Grid can be easily changed. Try the demo source code to find how inline data grid can be deleted and modified."
        },
        "description": {
          "aspnet-mvc": "<p>A common scenario is to toggle a grid cell into edit mode by simply clicking on the Edit row button, update the data inside the cell and save/discard the changes using the Update/Cancel buttons.<br /> <br /> This demo shows how this inline content management can be achieved using the data operations (create, update and destroy) of the Telerik MVC Grid component.<br /> <br /> All you have to do to enable the inline editing capabilities of the Grid is:</p> <ul> <li>Turn on the inline cell editing by setting: .Editable(editable =&gt; editable.Mode(GridEditMode.<strong>InLine</strong>))</li> <li>To enable insertion of new records, add the New Record button on the toolbar by adding: .ToolBar(toolbar =&gt; toolbar.<strong>Create</strong>())</li> <li>To enable the Edit and Delete commands on each row, insert a new column: <span>columns.Command(command =&gt; { command.<strong>Edit</strong>(); command.<strong>Destroy</strong>(); });</span></li> <li>Invoke the <strong>Create</strong>, <strong>Read</strong>, <strong>Update</strong> and <strong>Destroy</strong> action methods in the DataSource. These methods are responsible for the data items manipulation.</li> </ul> <p>For more details about the inline editing capabilities of the MVC Grid see the help article <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/inline\" target=\"_blank\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Inline Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/inline"
          }
        ]
      },
      {
        "text": "Popup editing",
        "url": "grid/editing-popup",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this sample you can see the batch editing functionality of Telerik $FRAMEWORK Grid in action."
        },
        "description": {
          "aspnet-mvc": "<p>In various scenarios there is requirement to not only visualize tabular data, but also allow the ability to the edit the rows content in a popup edit form. In this demo you can edit or insert new items via a popup form by configuring the Telerik MVC Grid component as follow:</p> <ul> <li>Activate the popup cell editing by setting: .Editable(editable =&gt; editable.Mode(GridEditMode.<strong>PopUp</strong>))</li> <li>To enable insertion of new records, add the New Record button on the toolbar: .ToolBar(toolbar =&gt; toolbar.<strong>Create</strong>())</li> <li>To enable the Edit and Delete commands on each row, insert a new column: <span>columns.Command(command =&gt; { command.<strong>Edit</strong>(); command.<strong>Destroy</strong>(); });</span></li> <li>Invoke the <strong>Create</strong>, <strong>Read</strong>, <strong>Update</strong> and <strong>Destroy</strong> action methods in the DataSource. These methods are responsible for the data items manipulation.</li> </ul> <p>For more details about the editing capabilities of the MVC Grid see the help article <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/popup\" target=\"_blank\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Popup Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/popup"
          }
        ]
      },
      {
        "text": "Editing custom editor",
        "url": "grid/editing-custom",
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ClientCategory.cshtml",
              "url": "~/Views/Grid/EditorTemplates/ClientCategory.cshtml"
            },
            {
              "name": "ProductViewModel.cs",
              "url": "~/Models/ProductViewModel.cs"
            }
          ]
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how editing in Telerik $FRAMEWORK Grid can be further customized with the custom editor and using DataSource component."
        },
        "description": {
          "aspnet-mvc": "<p>In numerous scenarios there is a requirement to not only visualize data in a table structure, but also to have the ability to manipulate it and save the changes.</p> <p>The MVC grid wrapper supports CRUD data editing operations via a simple configuration of its data source. All you have to do to enable its data editing capabilities is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option: <br /> .Editable(editable =&gt; editable.Mode(GridEditMode.InCell))</li> <li>declare field definitions through the <strong>Model configurator</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>Read, Create, Update and Destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p > In this demo you can see how to further customize the editor by setting a custom editor (Html.Kendo().DropDownListFor<span>()</span><span> </span>MVC helper in this case) as a grid column editor by specifying the <strong>Category</strong> column's <strong>editor</strong> field, i.e.<br /> <br /> .Columns(columns =&gt;<span>&nbsp; </span>{ &hellip;<span>&nbsp;&nbsp;&nbsp; </span><br /> columns.Bound(p =&gt; p.Category).ClientTemplate(\"#=Category.CategoryName#\"); <br /> }) <p>  Specify a default value that will be used initially when creating an item: <div><code>model.Field(p => p.Category).DefaultValue(ViewData[\"defaultCategory\"] as Kendo.Mvc.Examples.Models.CategoryViewModel);</code></div><br /> <br /> For more details about the editing capabilities of the MVC Grid see the help article <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/overview\" target=\"_blank\">here</a>.<br /> More details for the editor template can be found <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/grid/templating/editor-templates\" target=\"_blank\">here</a></p>"
        },
        "links": [
          {
            "text": "Grid Custom Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/custom"
          }
        ]
      },
      {
        "text": "Server editing",
        "deferred": true,
        "url": "grid/serverediting",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Custom validator editing",
        "url": "grid/editing-custom-validation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to implement custom validation rule in a Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>In numerous scenarios there is a requirement to not only visualize data in a table structure, but also to edit and validate it before save changes.</p> <p>The MVC grid helper supports CRUD data editing operations via a simple configuration of its data source. All you have to do to enable its data editing capabilities is to:</p> <ul> <li>set the grid's <strong>Editable </strong>configuration property: <br /> .Editable(editable =&gt; editable.Mode(GridEditMode.InCell))</li> <li>declare field definitions through the <strong>Model configurator</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>Read, Create, Update and Destroy</strong> methods</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p > In this demo you can see how defining a custom validation rule via the CustomValidationProductViewModel model and the productnamevalidation function you can force a check for first capital letter for the Product Name column, when you edit the value in it.<br /> <br /> For more details about the editing capabilities of the MVC Grid see the help article <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/overview\" target=\"_blank\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Custom Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/editing/custom"
          }
        ]
      },
      {
        "text": "Remote validation",
        "url": "grid/editing-remote-validation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to implement remote validation"
        },
        "description": {
          "aspnet-mvc": "This example demonstrates how to write custom validation rule that handles build-in Remote attributes in your model."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "Validation Controller",
              "url": "~/Controllers/ValidationController.cs"
            },
            {
              "name": "Model",
              "url": "~/Models/ProductViewModel.cs"
            }
          ]
        },
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Virtualization of remote data",
        "url": "grid/virtualization-remote-data",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the virtualization of remote data in $FRAMEWORK Grid."
        },
        "group": "Scrolling",
        "description": {
          "aspnet-mvc": "<p>The virtualization feature of Telerik $FRAMEWORK Grid allows you to handle large amount of data without negatively impacting the user experience and the browser performance. <br /> <br /> You can enable the virtual scrolling via the .<strong>Scrollable</strong>(scrollable =&gt; scrollable.Virtual(true)) configuration setting, which shows a vertical scrollbar for the grid content and renders only the number of items set via the <strong>PageSize</strong> setting of the grid data source. After you drag the scrollbar and the <strong>PageSize</strong> parameter value is exceeded, it makes automatic requests to retrieve and render the next set of grid rows.</p>"
        },
        "links": [
          {
            "text": "Grid Row Virtualization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/scrolling/virtual"
          }
        ]
      },
      {
        "text": "Column virtualization",
        "url": "grid/column-virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the column virtualization capabilities of the $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>There are cases when you may need to operate with large amount of columns in the grid, and displaying them at once would impose a performance penalty due to limited browser resources. </p> <p>Luckily, the $FRAMEWORK Grid has a solution called column virtualization that alleviates any slowdowns when operating with huge volumes of columns. When enabled via the <strong><code>.Scrollable(scrollable =&gt; scrollable.Virtual(GridVirtualizationMode.Columns))</code></strong> configuration option, it displays only a number of all the columns. When scrolling is performed the visual subset of columns is changed accordingly. </p> <p>The column virtualization can be used with the row virtualization thus increasing the performance substantially</p> <p>&nbsp;</p>"
        },
        "links": [
          {
            "text": "Grid Column Virtualization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/virtualization"
          }
        ]
      },
      {
        "text": "Endless scrolling of remote data",
        "url": "grid/endless-scrolling-remote",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the endless scrolling of remote data in $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>The endless scrolling functionality enables the Grid widget to display large amounts of data by appending additional pages of data on demand. Loading of new items happens when the scrollbar of the Grid reaches its end. When the data is returned, only the new items will be rendered and appended to the old ones.</p><p>Grid infinite scrolling works with local and remote data. This demo presents binding Grid to remote data. In this scenario only the first page of data is serialized and rendered on the client. When the user reaches the end of the list, an Ajax request is made to fetch the next portion of data.</p><p>The endless scroll is compatible with <strong>Grouping</strong>, <strong>Hierarchy</strong> and <strong>Editing</strong>.</p><p>&nbsp;</p>"
        },
        "links": [
          {
            "text": "Grid Endless Scrolling Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/scrolling/endless"
          }
        ]
      },
      {
        "text": "Group paging of remote data",
        "url": "grid/grouppaging",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the group paging feater of the $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>The group paging feature of the Telerik for $FRAMEWORK Grid allows you to page through groups and load the group items on demand. Loading of the group items happens when a group is expanded. Group paging works with both local and remote data. This demo presents a remotly bound Grid with paging and enabled GroupPaging.</p>"
        },
        "links": [
          {
            "text": "Grid Group Paging Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/grouping/group-paging"
          }
        ]
      },
      {
        "text": "Server grouping with virtualization",
        "url": "grid/server-grouppaging-virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo the server grouping with virtualization feature of the $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>The group paging feature of the Telerik for $FRAMEWORK Grid allows you to page through groups and load the group items on demand. Loading of the group items happens when a group is expanded. Group paging works with both local and remote data. This demo presents a remotly bound Grid with virtualization and enabled GroupPaging.</p>"
        },
        "links": [
          {
            "text": "Grid Group Paging Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/grouping/group-paging"
          }
        ]
      },
      {
        "text": "Filter row",
        "url": "grid/filter-row",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will learn how to enable the filter row of ASP.NET MVC Grid component."
        },
        "group": "Filtering",
        "description": {
          "aspnet-mvc": "<p>You can see in this demo how you can enable filter row in the header by setting the grid's <strong>Filterable</strong>-&gt;<strong>Mode</strong> property to <strong>Row</strong>: .Filterable(ftb =&gt; ftb.Mode(GridFilterMode.Row))<br /> <br /> Therefore based on the data type of the underlying columns data<span>,</span> the grid will render textboxes for string values, numeric inputs or date pickers for filtering in the column headers.</p> <p>Additionally, you can specify a default filter operator to be applied when the user enters value in the filter textbox and tap Tab or Enter. This can be done using the <strong>Filterable</strong>-&gt;<strong>Cell</strong>-&gt;<strong>Operator</strong> attribute of the corresponding column, as shown for the Ship Name and Freight columns.</p>"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "GridController.cs",
              "url": "~/Controllers/Grid/BasicUsageController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Grid Filtering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/filtering"
          }
        ]
      },
      {
        "text": "Filter Multi Checkboxes",
        "url": "grid/filter-multi-checkboxes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will learn how to enable the filter multi-check of ASP.NET MVC Grid component."
        },
        "description": {
          "aspnet-mvc": "<p>You can enable checkbox list filtering in the filter menu of the Grid HtmlHelper by specifying<span> </span><strong>Columns</strong> -&gt; <strong>Filterable -&gt; Multi(true) </strong>setting for the relevant grid columns.</p> <p>In addition, you could customize the checkbox filter menu by combining the filter with <strong>ItemTemplate</strong> definition as it is done with the Country column in the bottom grid.</p>"
        },
        "links": [
          {
            "text": "Grid Filtering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/filtering"
          }
        ]
      },
      {
        "text": "Filter menu customization",
        "url": "grid/filter-menu-customization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example you will learn how to customize the filter menu of Telerik $FRAMEWORK Grid component."
        },
        "description": {
          "aspnet-mvc": "<p>You can see in this demo how to apply common settings for the Telerik $FRAMEWORK Grid filter menu configuration, and customize its user interface.</p>To begin we should specify a single filter criterion using the <code>Filterable=&gt;Extra(false)</code> setting, and limit the filter operators for string columns to &ldquo;Starts with&rdquo;, &ldquo;Is equal to&rdquo; and &ldquo;Is not equal to&rdquo;. After that we provide the custom filterable UI by referencing the name of the JavaScript function which initializes it. A Kendo UI AutoComplete and a DropDownList for the Title and City columns, respectively.<pre>.Filterable(filterable => filterable.UI(\"cityFilter\"))</pre><p>More about the <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a></p>"
        },
        "links": [
          {
            "text": "Grid Filtering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/filtering"
          }
        ]
      },
      {
        "text": "Sorting",
        "url": "grid/sorting",
        "group": "Functionality",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to sort data in Telerik $FRAMEWORK Grid. Use the demo source code to look into the logic of grid sorting and easily implement it in your app."
        },
        "description": {
          "aspnet-mvc": "<p>In this sample you can learn how to enable sorting for the Telerik MVC Grid. Since this functionality is built-in, all you have to do is to set the sorting configuration via the <strong><code>.Sortable()</code></strong>method. The supported sorting modes are <strong>single</strong>, <strong>multiple</strong> and <strong>mixed</strong>, and can be specified through the <strong>SortMode</strong> method by passing a <code>GridSortMode</code> - <code>SingleColumn</code>, <code>MultipleColumn</code> or <code>Mixed</code>.<p><ul><li>Single-column sort: <pre>.Sortable(sortable => sortable.SortMode(GridSortMode.SngleColumn)</pre></li><li>Multi-column sort: <pre>.Sortable(sortable => sortable.SortMode(GridSortMode.MultipleColumn)</pre></li><li>Mixed-column sort: <pre>.Sortable(sortable => sortable.SortMode(GridSortMode.Mixed)</pre></li></ul></p>More about the sortable feature of the <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/sorting\" target=\"_blank\">Telerik Grid for $FRAMEWORK</a></p><p>More about the <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a>"
        },
        "links": [
          {
            "text": "Grid Sorting Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/sorting"
          }
        ]
      },
      {
        "text": "Search Panel",
        "url": "grid/search-panel",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Get started with the Telerik Grid for $FRAMEWORK supporting searching inside the grid data."
        },
        "description": {
          "aspnet-mvc": "<p>There are situations when you would like to enable the end user to search inside the Grid cells for a given value. The <strong>Kendo UI Grid</strong> supports this by enabling the <strong>Search Panel</strong> functionality.</p> <p>The above example is configured to filter the columns with the following operators:</p><ul style=\"list-style-type: disc;\"><li>Order ID - 'equal'</li><li>Freight - 'greater than'</li><li>ShipName - 'contains'</li><li>ShipCity - 'contains'</li></ul><p>"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "GridController.cs",
              "url": "~/Controllers/Grid/BasicUsageController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Grid Search Panel Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/search-panel"
          }
        ]
      },
      {
        "text": "Selection",
        "url": "grid/selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how you can use Telerik $FRAMEWORK grid with multiple row or cell selection enabled."
        },
        "description": {
          "aspnet-mvc": "<p>There are situations when you&rsquo;d like to enable your users to select rows or cells in the grid table, and process data from them or make calculations based on this selection. The MVC Grid supports selection by specifying its configuration through its <strong>Selectable</strong> -&gt; <strong>Mode</strong> and <strong>Type</strong> attributes. <br /> <br /> The accepted values for Mode are <strong>Single</strong><strong> </strong>and<strong> Multiple</strong>, while these for Type are <strong>Cell</strong> and <strong>Row</strong>.</p> <p>As of <strong>R2 2017</strong> you can persist the row selection after data operations by setting the <strong>PersistSelection</strong> property to <strong>true</strong>.</p> <p>More details are available in the <a href=\"https://docs.telerik.com/aspnet-mvc/api/Kendo.Mvc.UI.Fluent/GridSelectionSettingsBuilder#methods-Mode%28Kendo.Mvc.UI.GridSelectionMode%29\">documentation</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/selection"
          }
        ]
      },
      {
        "text": "Checkbox selection",
        "url": "grid/checkbox-selection",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will learn how to enable the built-in checkbox column and selection persistence of the ASP.NET MVC Grid."
        },
        "description": {
          "aspnet-mvc": "<p>As of R2 2017 SP1, а checkbox based selection is provided by the grid. To enable this functionality you should define select column as shown below:</p> <p>&nbsp;.Columns(columns => { columns.Select(); })</p> <p>This column allows you to select grid rows automatically after changing the status of the checkbox to checked. A checkbox is also displayed in the column header to toggle the checked/selected state of all rows in the current page.</p> <p>Additionally in the demo you can see how to persist selected items across pages. This is achieved by enabling the <strong>persistSelection</strong> as follows <strong>.PersistSelection()</strong>.</p>"
        },
        "links": [
          {
            "text": "Grid Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/selection"
          }
        ]
      },
      {
        "text": "Aggregates",
        "url": "grid/aggregates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the aggregate option for Telerik $FRAMEWORK Grid. Use demo source code to enable the grid to calculate aggregated values."
        },
        "description": {
          "aspnet-mvc": "<p>In some situations when displaying numbers in the grid, users would like to be able to see the results from aggregate calculations at the bottom of the grid groups or columns.</p> <p>This is a easy with the MVC grid since it offers built-in support for the most popular aggregate functions: <strong>Average</strong>, <strong>Count</strong>, <strong>Sum</strong>, <strong>Min</strong>, <strong>Max</strong> and <strong>Count</strong>. All you need to do is define the aggregates via the Columns-&gt; ClientGroupHeaderColumnTemplate, ClientFooterTemplate and ClientGroupFooterTemplate templates, and the Group and Aggregate fields of its DataSource instance.</p><p>Please check the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/grid/templating/group-templates\" target=\"_blank\">Group Templates</a> article to learn more about different types of group templates available for the Telerik $FRAMEWORK Grid.</p>"
        },
        "links": [
          {
            "text": "Grid Aggregates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/grouping/aggregates"
          }
        ]
      },
      {
        "text": "Server aggregates",
        "deferred": true,
        "url": "grid/serveraggregates",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Paging",
        "url": "grid/paging",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "sources": {
          "aspnet-mvc": [
            {
              "name": "OrderViewModel.cs",
              "url": "~/Models/OrderViewModel.cs"
            },
            {
              "name": "GridController.cs",
              "url": "~/Controllers/Grid/BasicUsageController.cs"
            },
            {
              "name": "PagerViewModel.cs",
              "url": "~/Models/PagerViewModel.cs"
            }
          ]
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates most of the pageable configurable options of the Telerik for $FRAMEWORK Grid. Use the demo source code to enable the $FRAMEWORK GridView pager options of your preference."
        },
        "description": {
          "aspnet-mvc": "<p>To see the different paging options in action, select the desired checkboxes and press the <strong>Apply</strong> button. The $FRAMEWORK Grid pager features:</p><ul><li>Page sizes drop down list</li><li>Input for the pager so the users can enter the desired page to navigate to</li><li>Numeric pages - buttons with numbers which represent each page</li><li>Previous and next buttons</li><li>A refresh button</li><li>Templates for the selected and number page links</li><li>HTML attributes necessary for accessible usage.</li></br><p>Please check the <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/paging\" target=\"_blank\">Paging</a> article to learn more about the different paging settings available for the Telerik $FRAMEWORK Grid.</p><p>More about <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a></p><p><em><small>The <code>PagerViewModel</code> class is used for the display options in the configurator for demo purposes only.</small></em></p>"
        },
        "links": [
          {
            "text": "Grid Paging Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/paging"
          }
        ]
      },
      {
        "text": "Hierarchy",
        "url": "grid/hierarchy",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the hierarchical data grid feature of the Telerik $FRAMEWORK Grid component. Try the demo source code to play with the grid in your web app."
        },
        "description": {
          "aspnet-mvc": "<p>There are projects which require to display table data in hierarchical-like fashion, in order to visualize relations between parent and child records. <br /> <br /> This is where the Telerik MVC grid hierarchy feature comes in handy. To implement hierarchy with the grid widget, you need to:</p> <ul> <li>Set the <strong>ClientDetailTemplateId</strong> setting which specifies the id of the script element containing the client-side detail template of the grid</li> <li>Define the script tag content that will be shown when the user expands the grid rows</li> </ul>"
        },
        "links": [
          {
            "text": "Grid Hierarchy Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/hierarchy"
          }
        ]
      },
      {
        "text": "Server hierarchy",
        "deferred": true,
        "url": "grid/serverhierarchy",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Persist state",
        "url": "grid/persist-state",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how setOptions and getOptions methods can manipulate the state of ASP.NET MVC Grid widget."
        },
        "description": {
          "aspnet-mvc": "<p>A common scenario is to save the user customization and settings when interacting with your app, and then restore them once he/she logs back at some point in the future.</p> <p>The Telerik MVC component provided the ability to save and restore changes that were previously applied to its structure, using its <strong>getOptions</strong> and <strong>setOptions</strong> client-side methods. You can use these methods to store settings like grouping, paging, sorting, filtering<span> </span>and when needed to restore them. To demonstrate this functionality, we use <strong>localStorage</strong> key/value pair to save and load the grid state.</p> <p>More detail on the setOptions and getOptions methods is available in <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid#methods-setOptions\">this API section</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Persist State Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/persist-state"
          }
        ]
      },
      {
        "text": "Pager Functionality",
        "url": "grid/pager-functionality",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the ASP.NET MVC Grid to hide the pager when total amount of items are less than the pageSize. Furthermore, the position of the pager could be changed as well."
        },
        "description": {
          "aspnet-mvc": "<p>It often turns out that all items in the gird can fit into a single page and then showing the pager might not be necessary.</p><p> Starting from ASP.NET MVC 2017 R3 release grid toggles the pager visibility using the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-pageable.alwaysVisible\" target=\"_blank\">pageable.alwaysVisible</a> configuration property. By default the grid will show the pager even when total amount of items in the DataSource is less than the pageSize.</p><p> If value is set to <strong>false</strong> the behavior will be as follows:</p><ul><li>when the total amount of items initially set in the DataSource is less than the pageSize number the pager will be hidden.</li><li>when the total amount of items initially set in the DataSource is greater than or equal to the pageSize number the pager will be shown.</li><li>when the total amount of items in the DataSource becomes less than the pageSize number (after delete, filter operation or pageSize change) the pager will be hidden.</li><li>when the total amount of items in the DataSource becomes greater than or equal to the pageSize number (after an insert, filter operation or pageSize change) the pager will be shown.</li></ul><p>In the demo alwaysVisible checkbox enables/disables the pageable.alwaysVisible option for the grid.</p><p>In order to set the Pager position at top, use the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid/configuration/pageable.position\">position</a> property of the Pager.<p>In the demo \"pager on top\" checkbox changes the position of the Pager for the grid.</p>"
        },
        "links": [
          {
            "text": "Grid Paging Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/paging"
          }
        ]
      },
      {
        "text": "Responsive Columns",
        "url": "grid/responsive-columns",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the $FRAMEWORK Grid to control the visibility of the columns, use their media property."
        },
        "description": {
          "aspnet-mvc": "<p>To control the visibility of the columns, use their <a target=\"_blank\" href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid/configuration/columns.media\">media</a> property. The property accepts valid strings for the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\">matchMedia</a> browser API and toggles the visibility of the columns based on the media queries.</p>"
        }
      },
      {
        "text": "Drag & Drop",
        "url": "grid/drag-drop",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the drag and drop feature of the Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>This example shows how to enable the Drag and Drop functionality of the Telerik UI for $FRAMEWORK Grid.</p><p>All you have to do is:<br/><ul><li>Set the reorderable configuration of the rows: <code>.Reorderable(reorder => reorder.Rows(true))</code></li><li>Add a draghandle to a specified column to reorder the rows by dragging: <code>.Draggable(true)</code></li></ul></p><p>You can also use the `RowReorder` event the Grid to handle the drag and drop operations and modify the data source as per your business logic (for example, to move rows between grids).</p><p>Additionally, you can enable the `Navigatable()` option and reoderer the rows by using <code>Ctrl + Up/Down</code>.</p><p>More about the <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a></p>"
        },
        "links": [
          {
            "text": "Grid Row Drag and Drop Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/row-drag-drop"
          }
        ]
      },
      {
        "text": "Toolbar template",
        "url": "grid/toolbar-template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This Telerik $FRAMEWORK Grid example shows how you can add custom toolbars to the grid and create toolbar templates."
        },
        "group": "Templates",
        "description": {
          "aspnet-mvc": "<p>The MVC grid component exposes an option to define a content template for its toolbar.</p> <p>Here you can see a sample implementation of a toolbar template incorporating a dropdownlist HtmlHelper to list the records in the grid by category. The combo is populated with the list of categories and the filter is applied on its change event by invoking the grid.dataSource.filter(params) method from the client-side API.</p> <p>Note that the toolbar template is instantiated by the ToolBar -&gt; Template method.</p>"
        }
      },
      {
        "text": "Column header template",
        "deferred": true,
        "url": "grid/headertemplate",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Row template",
        "url": "grid/rowtemplate",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how to change the style and concert of row cells with Telrik $FRAMEWORK Grid Row templates."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC grid allows flexible customization of its rows in terms of layout and appearance by exposing row template feature for this purpose.</p> <p>In this example we present how you can specify your own custom layout for the rows in the grid using images and property bindings from its underlying data source. <br /> <br /> To do that you need to define a template column as shown below:</p> <p>columns.Template(e =&gt; { }).ClientTemplate(\" \"). Title(\"Picture\");</p> <p>and after that using the <strong>ClientRowTemplate</strong> and <strong>ClientAltRowTemplate</strong> settings to set the custom client-side row and alt-row templates. Note that both templates should contain table row HTML elements.</p>"
        },
        "links": [
          {
            "text": "Grid Row Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/templates/row-templates"
          }
        ]
      },
      {
        "text": "Detail template",
        "url": "grid/detailtemplate",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how records in the Telerik $FRAMEWORK Grid component can be presented with a detailed template."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how you can utilize the detail template feature of the MVC grid component when implementing hierarchical table presentation. The key steps here are to:</p> <ul> <li>Set the <strong>ClientDetailTemplateId</strong> setting which specifies the id of the script element containing the client-side detail template of the grid</li> <li>Define the script tag content that will be shown when the user expands the grid rows</li> </ul> <p>In this example we inject a TabStrip HtmlHelper extension with two tabs in the detail template - the first contains the orders of the relevant employee, and the second one holds his/her contact information.</p>"
        },
        "links": [
          {
            "text": "Grid Detail Template Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/templates/client-detail-template"
          }
        ]
      },
      {
        "text": "Server detail template",
        "deferred": true,
        "url": "grid/serverdetails",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Server row template",
        "deferred": true,
        "url": "grid/serverrowtemplate",
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Frozen columns",
        "url": "grid/frozen-columns",
        "deferred": true,
        "group": "Columns",
        "meta": {
          "aspnet-mvc": "Play with the demo for frozen columns functionality of Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>There are scenarios in which you might be required to display a large number of grid columns on limited screen space, and making a small subset of them static when scrolling the rest horizontally to bring them in the viewable area. The concept of frozen columns is well known from MS Excel, and many users would like to utilize it in a web environment too.</p> <p>The Telerik ASP.NET Grid component for MVC supports static/frozen columns by a single configuration setting. Simply set the <strong>Locked</strong> boolean setting of the corresponding column to true, and this will bring the column in the locked columns group positioned on the left in the grid. Here the locked columns are Order ID and Ship Name, while the rest of the columns can be scrolled horizontally.</p>"
        },
        "links": [
          {
            "text": "Grid Frozen Columns Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/locked"
          }
        ]
      },
      {
        "text": "Sticky columns",
        "url": "grid/sticky-columns",
        "title": {
          "aspnet-mvc": "Sticky columns demo in Telerik $FRAMEWORK Grid "
        },
        "meta": {
          "aspnet-mvc": "Play with the demo for sticky columns functionality of Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>There are scenarios where the requirment is to display a large number of grid columns on limited screen space, and making a small subset of them visible when scrolling the grid horizontally. The concept of sticky columns enables a certain column(s) to stay visible in the viewable area, yet remaining scrollable with the rest of the non-sticky columns.</p><p>The Sticky columns feature is available alongside frozen columns. While the locked columns in the Grid are rendered on the left side of the widget the sticky columns are displayed in the scrollable area with the non-frozen columns.</p><p>The Telerik Grid for $FRAMEWORK supports sticky columns by a single configuration setting. Simply set the <strong>.Sticky(true)</strong> boolean setting of the corresponding column to true, and this will make the column sticky. To allow the user to stick/unstick a certain column from the Column Menu the corresponding setting is <strong>.Stickable(true)</strong>.  In this demo the sticky column is Ship Address.</p>"
        },
        "links": [
          {
            "text": "Grid Sticky Columns Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/sticky"
          }
        ]
      },
      {
        "text": "Multi-column headers",
        "url": "grid/multicolumnheaders",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows multiple column headers feature of KendoGrid control."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Grid extension supports multi-column headers by specifying column groups which incorporate inner-column structures. In this demo, you can see the Contact Info and Location columns have nested columns, defined trough the Columns -&gt; Group -&gt; Columns scheme. In addition, operations like sorting and filtering are supported on each column level, regardless of the chosen multi-header pattern.</p>"
        },
        "links": [
          {
            "text": "Grid Multi-Columns Headers Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/multicolumn-headers"
          }
        ]
      },
      {
        "text": "Column reordering",
        "url": "grid/column-reordering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you can see how simple it is to reorder columns in Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>You can see in this demo how simple it is to reorder columns in Telerik $FRAMEWORK Grid. Just drag a column header over another header cell.</p> <p>You can enable this behavior by setting the <strong>Reorderable</strong> property of the grid.</p>"
        },
        "links": [
          {
            "text": "Grid Column Reordering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/reordering"
          }
        ]
      },
      {
        "text": "Column resizing",
        "url": "grid/column-resizing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo demonstrates how you can resize columns in Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how you can enable the columns resizing feature of the $FRAMEWORK Grid by setting the <strong>Resizable</strong> property.</p> <p>Once it is set the users can resize columns by dragging the edges (resize handles) of their header cells. They can also auto-fit a column by double-clicking its resize handle as in Excel.</p>"
        },
        "links": [
          {
            "text": "Grid Column Resizing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/resizing"
          }
        ]
      },
      {
        "text": "Column menu",
        "url": "grid/column-menu",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This Telerik example shows column menu functionality in the Grid extension for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>You can try in this example the column menu functionality of the Grid extension for $FRAMEWORK.</p> <p>If you use the grid <code>ColumnMenu(true)</code> method, the gridview will display the column menu represented by three dots in the $FRAMEWORK DataGrid header cells. The column menu allows the user to show and hide columns as well as filter and sort them (if filtering and sorting are enabled).</p><p>This example shows how to group and sort the columns in the menu by providing a <code>GridColumnMenuSettingsBuilder</code> as a parameter in the <code>ColumnMenu()</code> method.</p><p>More about the <a href=\"https://www.telerik.com/aspnet-core-ui/grid\">Telerik Grid for $FRAMEWORK</a></p>"
        },
        "links": [
          {
            "text": "Grid Column Menu Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/column-menu"
          }
        ]
      },
      {
        "text": "Column Settings",
        "url": "grid/columnsettings",
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Grid by Telerik example shows how to load column settings from the server."
        },
        "description": {
          "aspnet-mvc": "You can try in this example to load the $FRAMEWORK Grid column settings from the server by using the LoadSettings method as follows: <pre>.Columns(columns => { columns.LoadSettings((IEnumerable<GridColumnSettings>)ViewData[\"Columns\"]);})</pre><p>More about the <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a></p>"
        },
        "links": [
          {
            "text": "Grid Column Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/overview"
          }
        ]
      },
      {
        "text": "ForeignKey column",
        "url": "grid/foreignkeycolumn",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the foreign key column functionality to cross-reference tables in the Telerik $FRAMEWORK Grid component."
        },
        "description": {
          "aspnet-mvc": "<p>In this example you can see how to implement foreign key column in the Telerik for $FRAMEWORK Grid, which generates an $FRAMEWORK DropDownList editor for the Category column. The ForeignKey column definition is shown below:<br/> <br/><code>columns.ForeignKey(p =&gt; p.CategoryID, (System.Collections.IEnumerable)ViewData[\"categories\"], \"CategoryID\", \"CategoryName\").Title(\"Category\").Width(150);</code></p> <p> When a column is defined as a ForeignKey colum the $FRAMEWORK Grid will look for the editor template in <strong>~Views\\Shared\\EditorTemplates</strong> named <code>GridForeignKey.cshtml</code> and populate it with the passed collection through the column declaration. Here is the definition of the editor template:</p> <p>@model object<br /> @(Html.Kendo().DropDownListFor(m => m)</span><br /> <span>&nbsp;&nbsp;&nbsp; </span>.BindTo((SelectList)ViewData[ViewData.TemplateInfo.GetFullHtmlFieldName(\"\") + \"_Data\"])<br />)</p><p>In addition to the Foreign Key editor template, populate a list which holds all the categories and pass it via the ViewData - you can see how this is done in the ForeignKeyColumnController.cs <code>PopulateCategories()</code> method.</p><p>If Create operations will be used provide a DefaultCategory in the DataSource Model Field.</p> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a></p>"
        },
        "links": [
          {
            "text": "Grid ForeignKey Column Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/foreignkey-column"
          }
        ]
      },
      {
        "text": "ForeignKey column binding",
        "url": "grid/foreignkeycolumnbinding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Get started with the $FRAMEWORK Grid and learn how to use the foreign key column binding functionality to cross-reference tables"
        },
        "description": {
          "aspnet-mvc": "<p>In this demo we showcase how to implement foreign key column which fetches its values from a DataSource in the $FRAMEWORK Grid, hosting dropdown list editor for data editing. </p>"
        },
        "links": [
          {
            "text": "Grid ForeignKey Column Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/foreignkey-column"
          }
        ]
      },
      {
        "text": "Custom command",
        "url": "grid/custom-command",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates the custom command of Telerik $FRAMEWORK Grid extension."
        },
        "description": {
          "aspnet-mvc": "<p>The demonstrated solution in this example shows how to implement a custom command handling for records in the MVC Grid extension. </p> <p>To do it you need to include a command column in the grid which will render a button in the column cells that triggers the command. Through the column definition you can specify the text for the button and wire its click event to a JavaScript function (Command -&gt; Custom -&gt; Click), which receives the corresponding grid data item as an argument. Then in this function definition you can handle the command.</p> <p>In this demo we use Window widget instance to display details about the chosen row in the grid.</p>"
        },
        "links": [
          {
            "text": "Grid Custom Command Column Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/custom-commands"
          }
        ]
      },
      {
        "text": "Content Alignment",
        "url": "grid/cell-alignment",
        "sources": {
          "aspnet-mvc": [
            {
              "name": "OrderViewModel.cs",
              "url": "~/Models/OrderViewModel.cs"
            }
          ]
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to align the cell content, the column header, and the column footer of the Telerik for $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how to change the default text and value alignment of the columns in the Telerik for $FRAMEWORK Grid.</p> <p>Through the column definition you can specify the cell content alignment by using the <code>HtmlAttributes()</code> method:<pre>columns.Bound(o => o.ShipCity).HtmlAttributes(new { style = \"text-align: right\" });</pre>Alternatively, apply the `k-text-left`, `k-text-right` or `k-text-center` classes:<pre>columns.Bound(o => o.ShipCity).HtmlAttributes(new { @class = \"k-text-right\" });</pre></p><p>The alignment of the column header can be updated as well through the <code>HeaderHtmlAttributes()</code> method:<pre>columns.Bound(o => o.ShipCity).HeaderHtmlAttributes(new { style = \"text-align: center\" });</pre></p><p>Additionally, you can align the column footer by using the <code>FooterHtmlAttributes()</code> method: <pre>columns.Bound(o => o.Freight).FooterHtmlAttributes(new { style = \"text-align: right\" });</pre></p><br><p>More about <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a></p>"
        },
        "links": [
          {
            "text": "Grid Content Alignment Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/columns/cell-alignment"
          }
        ]
      },
      {
        "text": "Events",
        "url": "grid/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the different events which are available in Telerik $FRAMEWORK Grid component. The code explains how you can use them for your project."
        },
        "group": "API",
        "description": {
          "aspnet-mvc": "<p>Telerik MVC Grid exposes rich API and events which provide easy configuration or extension points for customization on top of the built-in features.</p> <p>This particular demo shows how you can intercept the <strong>onChange</strong>, <strong>onDataBinding</strong> and <strong>onDataBound</strong> events of the grid to output messages in the console when these events are raised. You can also use these events for customization or to execute custom logic, if necessary.</p>"
        },
        "links": [
          {
            "text": "Grid Events Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/grid#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "grid/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the powerful and comprehensive API Functions allow you to manipulate the contents and behavior of the Telerik $FRAMEWORK Grid."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC Grid exposes rich client-side API and events, which provide easy configuration or extension points for custom functionality on top of the built-in features.</p> <p>The example shows how you can get a reference to the grid&rsquo;s client object, collect numeric value entered by the user and use this value to select, expand/collapse grid rows or resize columns using the <strong>select</strong>, <strong>expandGroup</strong>/<strong>collapseGroup</strong> and <strong>resizeColumn</strong> client methods of the grid.</p> <p>You can find more information about the available grid&rsquo;s client-side API <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Grid Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/grid"
          }
        ]
      },
      {
        "text": "Globalization",
        "url": "grid/globalization",
        "deferred": true,
        "group": "Accessibility and Internationalization",
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ],
        "links": [
          {
            "text": "Grid Globalization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/globalization/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "grid/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will be able to learn more about the right to left support in Telerik $FRAMEWORK Grid extension."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Grid supports right-to-left languages and rendering. All you have to do is to register the <strong>kendo.rtl.min.css</strong> file (located at Kendo.Mvc.Examples\\Content\\web\\ installation folder) and wrap the grid in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the components can be found in <a href=\"https://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this topic</a>.</p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Grid RTL Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/globalization/rtl-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "grid/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this Telerik $FRAMEWORK Grid demo to learn how different keyboard combinations could be used to navigate in the component."
        },
        "links": [
          {
            "text": "Grid Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "Spreadsheet",
    "name": "spreadsheet",
    "api": "web/spreadsheet",
    "documentation": {
      "aspnet-mvc": "helpers/spreadsheet/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1413"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/spreadsheet"
    },
    "spriteCssClass": "spreadsheetIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "spreadsheet/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo for ASP.NET MVC jQuery-powered Spreadsheet in $FRAMEWORK you will see all basic functionalities of the extension."
        },
        "links": [
          {
            "text": "Spreadsheet Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/overview"
          }
        ]
      },
      {
        "text": "Sorting and Filtering",
        "url": "spreadsheet/sorting-filtering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the sorting and filtering support that ASP.NET MVC Spreadsheet provides"
        },
        "links": [
          {
            "text": "Spreadsheet Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/overview"
          }
        ]
      },
      {
        "text": "Server Import/Export",
        "url": "spreadsheet/server-side-import-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export to and import from Microsoft Excel (.xlsx), CSV, Text and JSON files"
        },
        "description": {
          "aspnet-mvc": "This demo shows how to export and import files in the Spreadsheet component on the server using <b>Telerik.Web.Spreadsheet assembly</b>."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "Sheets settings",
              "url": "~/content/web/spreadsheet/prices.json"
            }
          ]
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Server Export to PDF",
        "url": "spreadsheet/server-side-pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export to print-ready PDF files"
        },
        "description": {
          "aspnet-mvc": "This demo shows how to export the Spreadsheet's content to PDF on the server using <b>Telerik.Web.Spreadsheet assembly</b>."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "DataSource binding",
        "url": "spreadsheet/datasource",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the integration with the DataSource component that ASP.NET MVC Spreadsheet provides"
        },
        "links": [
          {
            "text": "Spreadsheet DataSource Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/import-and-export-data/bind-to-data-source"
          }
        ]
      },
      {
        "text": "Disabled cells",
        "url": "spreadsheet/disabled-cells",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to disable/enable editing in ASP.NET MVC Spreadsheet provides for particular range"
        },
        "links": [
          {
            "text": "Spreadsheet Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/overview"
          }
        ]
      },
      {
        "text": "Custom cell editors",
        "url": "spreadsheet/custom-editors",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to define your own custom cell editors"
        },
        "links": [
          {
            "text": "Spreadsheet Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/overview"
          }
        ]
      },
      {
        "text": "Images",
        "url": "spreadsheet/images",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to declarethe Telerik Spreadsheet with an Image already loaded in it"
        },
        "links": [
          {
            "text": "Spreadsheet Images Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/images"
          }
        ]
      },
      {
        "text": "Cell comments",
        "url": "spreadsheet/cell-comments",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to define comment for a given cell in the Spreadsheet"
        },
        "links": [
          {
            "text": "Spreadsheet Comments Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/comments"
          }
        ]
      },
      {
        "text": "Events",
        "url": "spreadsheet/events",
        "deferred": true,
        "hasConsole": "true",
        "meta": {
          "aspnet-mvc": "This example shows events which are triggered in ASP.NET MVC Spreadsheet component."
        },
        "links": [
          {
            "text": "Spreadsheet Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "Validation",
        "url": "spreadsheet/validation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the data validation in ASP.NET MVC Spreadsheet component."
        },
        "links": [
          {
            "text": "Spreadsheet Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/spreadsheet/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "spreadsheet/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this $FRAMEWORK demo which illustrates how the keyboard navigation feature is supported in Telerik Spreadsheet."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "ListBox",
    "name": "listbox",
    "api": "web/listbox",
    "documentation": {
      "aspnet-mvc": "helpers/listbox/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=875"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/listbox"
    },
    "spriteCssClass": "listBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "listbox/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this basic example of ASP.NET MVC ListBox in $FRAMEWORK and find all features of the helper for ASP.NET MVC ListBox."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>ListBox for $FRAMEWORK</strong> is a helper that displays a list of items. It allows for multiple selection of items, reorder and transfer between two listboxes. Drag and drop is fully supported as well. You can easily control the appearance by arranging the buttons in different layouts or changing their text.</p><br /><p><h3>Key Features</h3></p> <ul style=\"list-style-type: disc;\"><li>Single or Multiple selection</li><li>Reordering of selected items</li><li>Drag & Drop functionality</li><li>Item templates</li><li>Connecting multiple ListBox components</li><li>Built-in themes</li><li>Accessibility, keyboard navigation and RTL Support</li></ul>"
        },
        "links": [
          {
            "text": "ListBox Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/listbox/overview"
          }
        ]
      },
      {
        "text": "Drag & Drop",
        "url": "listbox/drag-and-drop",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the Drag & Drop functionality of ListBox in $FRAMEWORK and find all features of the helper for ASP.NET MVC ListBox."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>ListBox for $FRAMEWORK</strong> allows Drag & Drop between two ListBoxes (for transfer) or within a single one (for reordering). This example demonstrates how you could use the Drag & Drop functionality with two ListBox components and furthermore, update the underlying data by handling the <strong>Add</strong> and <strong>Remove</strong> events."
        },
        "links": [
          {
            "text": "ListBox Drag & Drop Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/listbox/draganddrop"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "listbox/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for $FRAMEWORK ListBox component shows how you can customize its appearance."
        },
        "description": {
          "aspnet-mvc": "<p>This demo demonstrates how to configure a template for the <strong>ListBox for $FRAMEWORK</strong> items. It also demonstrates how to customize the draggable placeholder</p>"
        },
        "links": [
          {
            "text": "ListBox Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/listbox/templates"
          }
        ]
      },
      {
        "text": "Events",
        "url": "listbox/events",
        "hasConsole": true,
        "deferred": "true",
        "meta": {
          "aspnet-mvc": "This example shows events which are triggered in $FRAMEWORK ListBox component."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>ListBox for $FRAMEWORK</strong> exposes rich API and events which provide easy configuration or extension points for custom functionality on top of the built-in features.</p><p>This particular example shows how to intercept the Change, DataBound, Reorder, DragStart, DragEnd, Drag, Drop, Add and Remove events of the ListBox to output messages in the console when these events are raised. They can also be hooked for customizations or to execute custom logic, if necessary.</p>"
        },
        "links": [
          {
            "text": "ListBox Events Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/listbox#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "listbox/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to use the API of the $FRAMEWORK ListBox component."
        },
        "description": {
          "aspnet-mvc": "<p>This demo demonstrates how you could use the <strong>ListBox for $FRAMEWORK</strong> API for modify the its items and how to transfer items between two ListBox instances</p>"
        },
        "links": [
          {
            "text": "ListBox Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/listbox"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "listbox/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the right-to-left feature is supported in $FRAMEWORK ListBox control."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how the right-to-left feature is supported in $FRAMEWORK ListBox control.</p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "listbox/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will look at the supported keys and user actions in $FRAMEWORK ListBox control."
        },
        "links": [
          {
            "text": "ListBox Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/listbox/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ListView",
    "name": "listview",
    "api": "web/listview",
    "documentation": {
      "aspnet-mvc": "helpers/listview/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=890"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/listview"
    },
    "spriteCssClass": "listViewIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "listview/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this basic example of Telerik Listview in $FRAMEWORK and find all features of the helper for ASP.NET MVC Listview."
        },
        "links": [
          {
            "text": "ListView HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/overview"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "listview/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example and demo source code illustrate how the Telerik $FRAMEWORK ListView component can be bound to remote data using the DataSource component."
        },
        "links": [
          {
            "text": "ListView HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/overview"
          }
        ]
      },
      {
        "text": "Custom data source",
        "deferred": true,
        "url": "listview/custom-datasource",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ProductViewModel.cshtml",
              "url": "~/Views/ListView/EditorTemplates/ProductViewModel.cshtml"
            },
            {
              "name": "ProductViewModel.cs",
              "url": "~/Models/ProductViewModel.cs"
            }
          ]
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how the Telerik UI ListView for $FRAMEWORK can be bound to a custom data source when none of the built-in data-binding types are suitable. To connect to the remote endpoint and process the data properly, the data source requires information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response.</p><p>More about the <a href=\"https://www.telerik.com/aspnet-mvc/listview\">Telerik UI ListView for $FRAMEWORK</a></p><p>The service is available in this repository <a href=\"https://github.com/telerik/kendo-ui-demos-service\">Kendo UI Demos Service</p>"
        },
        "links": [
          {
            "text": "ListView HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/overview"
          }
        ]
      },
      {
        "text": "Editing",
        "url": "listview/editing",
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ProductViewModel.cshtml",
              "url": "~/Views/ListView/EditorTemplates/ProductViewModel.cshtml"
            },
            {
              "name": "ProductViewModel.cs",
              "url": "~/Models/ProductViewModel.cs"
            }
          ]
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the option to easily edit records in $FRAMEWORK ListView component. Learn how to edit records and manipulate the behavior of the contents."
        },
        "links": [
          {
            "text": "ListView Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/editing"
          }
        ]
      },
      {
        "text": "Selection",
        "url": "listview/selection",
        "hasConsole": true,
        "deferred": "true",
        "meta": {
          "aspnet-mvc": "This demo shows how items in $FRAMEWORK ListView can be selected. Find how to select multiple items and configure the behavior of the control."
        },
        "links": [
          {
            "text": "ListView Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/selection"
          }
        ]
      },
      {
        "text": "Endless Scrolling",
        "url": "listview/endless-scrolling",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows $FRAMEWORK ListView Endless Scrolling functionality in action."
        },
        "links": [
          {
            "text": "ListView Scroll Modes Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/scrolling"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "listview/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the right-to-left feature is supported in $FRAMEWORK ListView component."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "ListView Right-to-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/globalization/rtl-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "listview/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will look at the supported keys and user actions in $FRAMEWORK ListView control."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ProductViewModel.cshtml",
              "url": "~/Views/ListView/EditorTemplates/ProductViewModel.cshtml"
            },
            {
              "name": "ProductViewModel.cs",
              "url": "~/Models/ProductViewModel.cs"
            }
          ]
        },
        "links": [
          {
            "text": "ListView Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/accessibility/keyboard-navigation"
          }
        ]
      },
      {
        "text": "Grouping",
        "url": "listview/grouping",
        "title": {
          "aspnet-mvc": "Grouping in $FRAMEWORK Listview demo | Telerik UI for $FRAMEWORK demos"
        },
        "meta": {
          "aspnet-mvc": "This examples demonstrates how to achieve Grouping in Telerik Listview in $FRAMEWORK"
        },
        "description": {
          "aspnet-mvc": "This demo for $FRAMEWORK ListView component shows how you can populate the widget with local grouped data. To make this possible, configure the group option of the dataSource and declare a template that creates an HTML element for each group item."
        },
        "links": [
          {
            "text": "ListView Grouping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/listview/grouping"
          }
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "Loader",
    "name": "loader",
    "api": "web/loader",
    "documentation": {
      "aspnet-mvc": "html-helpers/interactivity/loader/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=912"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/loader"
    },
    "spriteCssClass": "loaderIcon",
    "items": [
      {
        "text": "Overview",
        "url": "loader/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this basic example of Telerik Loader in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Loader Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/loader/overview"
          }
        ]
      },
      {
        "text": "Color Variations",
        "url": "loader/color-variations",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Checkout the theme color functionality of Telerik Loader in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Loader Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/loader/appearance"
          }
        ]
      },
      {
        "text": "Integration",
        "url": "loader/integration",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Checkout this integration demo for the Telerik Loader in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Loader Integration Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/loader/integration"
          }
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "PivotGrid",
    "name": "pivotgrid",
    "api": "web/pivotgrid",
    "documentation": {
      "aspnet-mvc": "helpers/pivotgrid/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1146"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/pivotgrid"
    },
    "spriteCssClass": "pivotGridIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "pivotgrid/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGrid component shows how you can make a data summarization tool."
        },
        "links": [
          {
            "text": "PivotGrid HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgrid/overview"
          }
        ]
      },
      {
        "text": "KPI measures",
        "url": "pivotgrid/kpi",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGrid component shows how you can define KPI measures."
        },
        "links": [
          {
            "text": "PivotGrid HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgrid/overview"
          }
        ]
      },
      {
        "text": "Remote binding",
        "url": "pivotgrid/remote-flat-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGrid component shows how you can populate the component with remote flat data."
        },
        "links": [
          {
            "text": "PivotGrid Data Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgrid/data-binding/overview"
          }
        ]
      },
      {
        "text": "Local binding",
        "url": "pivotgrid/local-flat-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGrid component shows how you can populate the component with local flat data."
        },
        "description": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGrid component shows how you can populate the component with local flat data. The demo features filtering and sorting of rows and columns. To sort the PivotGrid rows and columns, click on the fields in the headers, the field menu or use the PivotGrid Configurator. <p>To enable the sortable functionality, use the <code>Sortable()</code> method.</p>"
        },
        "links": [
          {
            "text": "PivotGrid Data Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgrid/data-binding/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "pivotgrid/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGrid component shows how you can customize its appearance."
        },
        "links": [
          {
            "text": "PivotGrid Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgrid/templates"
          }
        ]
      },
      {
        "text": "Export to Excel",
        "url": "pivotgrid/excel-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export Telerik $FRAMEWORK PivotGrid as Microsoft Excel file"
        },
        "links": [
          {
            "text": "PivotGrid Excel Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgrid/export/excel-export"
          }
        ]
      },
      {
        "text": "Export to PDF",
        "url": "pivotgrid/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export the Telerik $FRAMEWORK PivotGrid as PDF"
        },
        "links": [
          {
            "text": "PivotGrid PDF Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgrid/export/pdf-export"
          }
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "PivotGridV2",
    "name": "pivotgridv2",
    "api": "web/pivotgridv2",
    "new": true,
    "documentation": {
      "aspnet-mvc": "helpers/pivotgridv2/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=0"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/pivotgridv2"
    },
    "spriteCssClass": "pivotGridIconV2",
    "items": [
      {
        "text": "Basic usage",
        "url": "pivotgridv2/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGridV2 component shows how you can make a data summarization tool."
        },
        "description": {
          "aspnet-mvc": "<p>Like its original version, the $FRAMEWORK PivotGridV2 represents multidimensional data in a cross-tabular format.</p><p>Compared to the legacy PivotGrid, the new PivotGridV2 offers a brand new design, and its future-proof architecture allows the implementation of many upcoming functionalities.</p><p>As PivotGridV2 aims to replace the legacy PivotGrid, it is recommended to use the PivotGridV2 in your new projects.</p>"
        },
        "links": [
          {
            "text": "PivotGridV2 HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgridv2/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "pivotgridv2/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo for the Telerik $FRAMEWORK PivotGridV2 component shows how you can customize its appearance."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK PivotGridV2 provides the built-in functionality to change the appearance of the column headers, row headers and cell values.</p><p>The <b>data cell template</b> is the template which renders the content of the data cell. By default, it renders the `fmtValue` formatted value of the data item.</p><p>The <b>row header template</b> is the template which renders the content of the row header cell. By default, it renders the caption of the tuple member.</p><p></p>"
        },
        "links": [
          {
            "text": "PivotGridV2 Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgridv2/templates"
          }
        ]
      },
      {
        "text": "Export to PDF",
        "url": "pivotgridv2/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export the Telerik $FRAMEWORK PivotGridV2 as PDF"
        },
        "description": {
          "aspnet-mvc": "<p>The PivotGridV2 for $FRAMEWORK provides the built-in functionality to export it's data in a PDF file via the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/pivotgridv2/methods/saveaspdf\" target=\"_blank\">saveAsPDF method</a>. This feature comes handy to extract and download reports, tabular and presentation data.</p>"
        },
        "links": [
          {
            "text": "PivotGridV2 PDF Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/pivotgridv2/export/pdf-export"
          }
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "MaskedTextBox",
    "name": "maskedtextbox",
    "updated": true,
    "api": "web/maskedtextbox",
    "documentation": {
      "aspnet-mvc": "helpers/maskedtextbox/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=963"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/maskedtextbox"
    },
    "spriteCssClass": "maskedtextboxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "maskedtextbox/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the core functionality of $FRAMEWORK MaskedTextBox component."
        },
        "links": [
          {
            "text": "MaskedTextBox HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/maskedtextbox/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "maskedtextbox/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the modern rendering and styling capabilities of Telerik MaskedTextBox for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MaskedTextBox for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "MaskedTextBox HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/maskedtextbox/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "hasConsole": true,
        "url": "maskedtextbox/events",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows events which are triggered in $FRAMEWORK MaskedTextBox component."
        },
        "links": [
          {
            "text": "MaskedTextBox Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/maskedtextbox/overview#events"
          }
        ]
      },
      {
        "text": "Floating Label",
        "url": "maskedtextbox/floating-label",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the $FRAMEWORK MaskedTextBox Floating Label."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to use the Floating Label of the $FRAMEWORK MaskedTextBox component. The Floating Label displays the type of input a field requires."
        },
        "links": [
          {
            "text": "MaskedTextBox Label Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/maskedtextbox/labels"
          }
        ]
      },
      {
        "text": "API",
        "url": "maskedtextbox/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows specific API functions for $FRAMEWORK MaskedTextBox component."
        },
        "links": [
          {
            "text": "MaskedTextBox Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/maskedtextbox"
          }
        ]
      },
      {
        "text": "Globalization",
        "url": "maskedtextbox/globalization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows $FRAMEWORK MaskedTextBox globalization support for decimal point, thousand separator and currency symbol."
        },
        "links": [
          {
            "text": "MaskedTextBox Globalization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/maskedtextbox/globalization/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "maskedtextbox/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how right-to-left input is implemented in $FRAMEWORK MaskedTextBox component to ensure the satisfaction of RTL language users."
        },
        "links": [
          {
            "text": "MaskedTextBox Right-to-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/maskedtextbox/globalization/rtl-support"
          },
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Validation",
        "url": "maskedtextbox/validation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to validate an incomplete control value in $FRAMEWORK MaskedTextBox"
        },
        "links": [
          {
            "text": "MaskedTextBox Validation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/maskedtextbox/mask-rules"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "MediaPlayer",
    "name": "mediaplayer",
    "api": "web/mediaplayer",
    "documentation": {
      "aspnet-mvc": "helpers/mediaplayer/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=970"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/mediaplayer"
    },
    "spriteCssClass": "mediaPlayerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "mediaplayer/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this basic example of Telerik MediaPlayer in $FRAMEWORK and find all features of the helper for ASP.NET MVC MediaPlayer."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik MediaPlayer for $FRAMEWORK</strong> component plays video files from static sources or streams online YouTube videos and enriches your website with dynamic content in a user-friendly interface. It provides a styled video UI functionality by using the HTML5 <code>&ltvideo&gt</code> element and brings powerful media capabilities to your applications.</p>"
        },
        "links": [
          {
            "text": "MediaPlayer Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/media/mediaplayer/overview"
          }
        ]
      },
      {
        "text": "Playlist",
        "url": "mediaplayer/playlist",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example of KendoMediaPlayer demonstrates how to use ListView as playlist."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>MediaPlayer</strong> component provides convenient API to change its source dynamically and dictate the flow of the video. This sample uses a ListView component to create a practical Playlist which displays the available videos right next to the MediaPlayer element.</p>"
        }
      },
      {
        "text": "Events",
        "url": "mediaplayer/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows $FRAMEWORK KendoMediaPlayer events which are enabled and the demo source code guides you how you can handle the events in media player."
        },
        "links": [
          {
            "text": "MediaPlayer Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/media/mediaplayer/overview#events"
          },
          {
            "text": "MediaPlayer Events Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/mediaplayer#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "mediaplayer/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how API functions of KendoMediaPlayer control operate and how you can use them in your project."
        },
        "links": [
          {
            "text": "MediaPlayer Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/mediaplayer"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "mediaplayer/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo demonstrates the built-in Keyboard Shortcuts provided by the KendoMediaPlayer widget to ease the user navigation."
        },
        "links": [
          {
            "text": "MediaPlayer Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/media/mediaplayer/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Media"
  },
  {
    "text": "ScrollView",
    "name": "scrollview",
    "api": "web/scrollview",
    "documentation": {
      "aspnet-mvc": "helpers/scrollview/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1311"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/scrollview"
    },
    "spriteCssClass": "scrollviewIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "scrollview/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK ScrollView example demonstrates the basic functionality of the component. With the $FRAMEWORK ScrollView component, you can specify custom layout for the items in the control."
        },
        "description": {
          "aspnet-mvc": "The <strong>ScrollView for ASP.NET MVC</strong> component displays а horizontal collection of images."
        },
        "links": [
          {
            "text": "ScrollView Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/media/scrollview/overview"
          }
        ]
      },
      {
        "text": "Binding to DataSource",
        "url": "scrollview/databinding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK ScrollView demo shows how the control can be bound to remote data using Kendo UI DataSource component."
        },
        "description": {
          "aspnet-mvc": "The <strong>ScrollView for ASP.NET MVC</strong> can be bound to both local data or remote data via the Kendo UI DataSource component. Local data binding is appropriate for small data sets, while remote data binding applies better to larger data sets."
        }
      },
      {
        "text": "API",
        "url": "scrollview/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK ScrollView demo shows how the api of the control can be used."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>ScrollView for ASP.NET MVC</strong> exposes client-side API and events which provide easy configuration or extension points for custom functionality on top of the built-in features.</p><p>This particular example shows how you can switch the images on a button click.</p>"
        },
        "links": [
          {
            "text": "ScrollView Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/scrollview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "scrollview/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the available events for the $FRAMEWORK ScrollView"
        },
        "links": [
          {
            "text": "ScrollView Events Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/scrollview#events"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "scrollview/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how the keyboard navigation is a supported feature in Kendo UI ScrollView widget."
        },
        "links": [
          {
            "text": "ScrollView Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/media/scrollview/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Media"
  },
  {
    "text": "Reporting Integration",
    "name": "Reporting Integration",
    "spriteCssClass": "gridIcon",
    "api": "web/grid",
    "items": [
      {
        "text": "Drill-Down Grid Report",
        "url": "reporting/index",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates the an implementational scenario with Telerik UI for MVC Grid and the Telerik Reporting."
        }
      }
    ],
    "sources": {
      "aspnet-mvc": [
        {
          "name": "ReportingView",
          "url": "~/Views/Reporting/ReportingView.cshtml"
        },
        {
          "name": "GridView",
          "url": "~/Views/Reporting/GridView.cshtml"
        },
        {
          "name": "ReportsController.cs",
          "url": "~/Controllers/Reporting/ReportsController.cs"
        },
        {
          "name": "DataGridReport",
          "url": "~/Views/Reporting/DataGridExample.trdx"
        }
      ]
    },
    "description": {
      "aspnet-mvc": "<p>The example on this page demonstrates the integration between <strong>Telerik UI for ASP.NET MVC</strong> suite and <strong>Telerik Reporting</strong>. The purpose of the demo is to show how the data from the <strong>Telerik UI for MVC Grid</strong> is passed to a <strong>Telerik Report</strong> and displayed in a HTML5 Report Viewer. The demo covers the following main points: <br /> <ul><li>The components from both suites are loaded in a TabStrip component. The first tab shows the Grid, loaded and populated with sample data. The second one opens a report viewer displaying the data obtained from the Grid.</li><li>The Grid is configured with a Client Template to showcase nested Grids.</li><li>During the ReportViewer initialization, the data is gathered from the Grid and passed to a report definition in JSON format. The generated report provides interactivity features like sorting and collapsing, similarly to the Grid behavior.</li><br /><p>More about <a href=\"https://www.telerik.com/aspnet-mvc/grid\">Telerik Grid for $FRAMEWORK</a> and <a href=\"https://www.telerik.com/products/reporting.aspx\">Telerik Reporting</a></p>"
    },
    "category": "Reporting"
  },
  {
    "text": "Menu",
    "name": "menu",
    "api": "web/menu",
    "documentation": {
      "aspnet-mvc": "helpers/menu/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=979"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/menu"
    },
    "spriteCssClass": "menuIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "menu/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this $FRAMEWORK Menu demo we will demonstrates the rich features of the component and its basic usage for your app."
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "Images",
        "url": "menu/images",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Menu example shows the feature that allows you to use menu with images. They are loaded from a specific URL or arranged in image sprite CSS class."
        },
        "links": [
          {
            "text": "Menu Images Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "Direction",
        "url": "menu/direction",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the pop-up direction of the items in $FRAMEWORK dropdown menu can be changed, depending on your web app development needs."
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "Orientation",
        "url": "menu/orientation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will see how the orientation of the $FRAMEWORK Menu can be easily modified through the orientation settings."
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "Scrollable",
        "url": "menu/scrollable",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Menu example shows the feature that allows you to scroll the menu items."
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "SiteMapBinding",
        "deferred": true,
        "url": "menu/sitemapbinding",
        "packages": [
          "!aspnet-core",
          "!online",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "ModelBinding",
        "deferred": true,
        "url": "menu/modelbinding",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Menu Model Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/binding/model-binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "deferred": true,
        "url": "menu/remote-data-binding",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Menu Binding To Remote Data Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/binding/binding-remote-data"
          }
        ]
      },
      {
        "text": "Bind Custom Attributes",
        "url": "menu/menu-bind-attributes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example you can see how you can bind custom attributes in the Menu items and populate them with data. Which can be later used for executing your own logic."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik Menu for $FRAMEWORK</strong> enables you apply Model binding to populate items dynamically from the server.</p><p>This demo shows an advanced approach to bind the items' attributes to fields from the Model passed so that you can apply client-side logic on item selection.</p>"
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "Animation effects",
        "url": "menu/animation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how $FRAMEWORK Menu dropdown control supports animation effects which can be easily customized to change the desired animation effect."
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "menu/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows $FRAMEWORK Menu events which are enabled and the demo source code guides you how you can handle the events in your dropdown menu."
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "menu/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the API functions of $FRAMEWORK Menu control operate and how you can configure them for your web project."
        },
        "links": [
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/menu"
          },
          {
            "text": "Menu Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/menu"
          },
          {
            "text": "Menu Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/menu"
          }
        ]
      },
      {
        "text": "Context Menu",
        "url": "menu/context-menu",
        "api": "web/contextmenu",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to use a ASP.NET MVC ContextMenu component."
        },
        "links": [
          {
            "text": "Context Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/contextmenu/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "menu/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Review how the RTL feature is enabled for the dropdown items in $FRAMEWORK Menu and in the menu labels of the control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Menu Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "menu/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the keyboard navigation support feature in $FRAMEWORK Menu."
        },
        "links": [
          {
            "text": "Menu Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/menu/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "MultiColumnComboBox",
    "name": "multicolumncombobox",
    "updated": true,
    "api": "web/multicolumncombobox",
    "documentation": {
      "aspnet-mvc": "helpers/multicolumncombobox/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1005"
    },
    "spriteCssClass": "multiColumnComboBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "multicolumncombobox/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK MultiColumnComboBox UI demo shows how to easily apply an editable text box with flexible auto-searchable functionality of the dropdown list into your web app."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/overview"
          }
        ]
      },
      {
        "text": "Server filtering",
        "url": "multicolumncombobox/serverfiltering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out this demo to see how the server filtering functionality works in $FRAMEWORK MultiColumnComboBox."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Filtering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/filtering"
          }
        ]
      },
      {
        "text": "Virtualization",
        "url": "multicolumncombobox/virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out this demo to see how the virtualization functionality works in $FRAMEWORK MultiColumnComboBox."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Virtualization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/virtualization"
          }
        ]
      },
      {
        "text": "Grouping",
        "url": "multicolumncombobox/grouping",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out this demo to see how the grouping functionality works in $FRAMEWORK MultiColumnComboBox."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Grouping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/grouping"
          }
        ]
      },
      {
        "text": "Client filtering",
        "deferred": true,
        "url": "multicolumncombobox/clientfiltering",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "MultiColumnComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "multicolumncombobox/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK MultiColumnComboBox demo shows how the template of the control can be customized to change the appearance of items in the auto-searchable list."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/overview"
          }
        ]
      },
      {
        "text": "Cascading MultiColumnComboBox",
        "url": "multicolumncombobox/cascadingmulticolumncombobox",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the cascading $FRAMEWORK MultiColumnComboBox control would fit any web application or website."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/overview"
          }
        ]
      },
      {
        "text": "Custom data source",
        "deferred": true,
        "url": "multicolumncombobox/custom-datasource",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "MultiColumnComboBox Custom DataSource Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/binding/custom-binding"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "multicolumncombobox/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the modern rendering and styling capabilities of Telerik MultiColumnComboBox for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MultiColumnComboBox for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "MultiColumnComboBox HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "multicolumncombobox/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo demonstrates useful events which are triggered in $FRAMEWORK MultiColumnComboBox upon user's selection of an item from the drop-down list."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "multicolumncombobox/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows all API functions for Telerik $FRAMEWORK MultiColumnComboBox control."
        },
        "links": [
          {
            "text": "MultiColumnComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/overview"
          },
          {
            "text": "MultiColumnComboBox Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/multicolumncombobox"
          },
          {
            "text": "MultiColumnComboBox Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/multicolumncombobox"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "multicolumncombobox/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Build your app with $FRAMEWORK MultiColumnComboBox. This demo shows how RTL feature is supported in the component."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "MultiColumnComboBox Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multicolumncombobox/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "multicolumncombobox/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK MultiColumnComboBox control for web app development supports easy keyboard navigation. Play with the demo to explore the functionality."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "MultiSelect",
    "name": "multiselect",
    "updated": true,
    "api": "web/multiselect",
    "documentation": {
      "aspnet-mvc": "helpers/multiselect/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1017"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/multiselect"
    },
    "spriteCssClass": "multiselectIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "multiselect/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this demo to see the core functionality of Telerik $FRAMEWORK MultiSelect control."
        },
        "links": [
          {
            "text": "MultiSelect Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multiselect/overview"
          }
        ]
      },
      {
        "text": "Server filtering",
        "url": "multiselect/serverfiltering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the auto-searchable dropdown list of $FRAMEWORK MultiSelect is filtered on the the server based on the input."
        }
      },
      {
        "text": "Virtualization",
        "url": "multiselect/virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the auto-searchable dropdown list of $FRAMEWORK MultiSelect is virtualized."
        },
        "links": [
          {
            "text": "MultiSelect Virtualization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multiselect/virtualization"
          }
        ]
      },
      {
        "text": "Grouping",
        "url": "multiselect/grouping",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the auto-searchable dropdown list of $FRAMEWORK MultiSelect displays grouped data."
        },
        "links": [
          {
            "text": "MultiSelect Grouping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multiselect/grouping"
          }
        ]
      },
      {
        "text": "Client filtering",
        "deferred": true,
        "url": "multiselect/clientfiltering",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Customizing templates",
        "url": "multiselect/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK MultiSelect demo shows how the template of the control can be customized to change the appearance of items and tags."
        },
        "links": [
          {
            "text": "MultiSelect Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multiselect/templates"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "multiselect/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the modern rendering and styling capabilities of Telerik MultiSelect for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MultiSelect for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "MultiSelect HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multiselect/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "multiselect/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo demonstrates the events which are triggered in $FRAMEWORK MultiSelect upon user's selection of an item from the drop-down list."
        },
        "links": [
          {
            "text": "Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "multiselect/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will find more about the API functions of $FRAMEWORK MultiSelect control."
        },
        "links": [
          {
            "text": "MultiSelect Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/multiselect/overview"
          },
          {
            "text": "MultiSelect Server-Side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/multiselect"
          },
          {
            "text": "MultiSelect Client-Side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect"
          }
        ]
      },
      {
        "text": "Tag mode",
        "url": "multiselect/tag-mode",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will find more about the Tag mode feature of $FRAMEWORK MultiSelect control."
        }
      },
      {
        "text": "RTL support",
        "url": "multiselect/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how RTL support is enabled in $FRAMEWORK MultiSelect. Any application or mobile website will be now intuitive for RTL language users."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "multiselect/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo demostrates the keyboard navigation for $FRAMEWORK MultiSelect control. Learn more about how you can use the keyboard shortcuts for easier navigation."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "MultiViewCalendar",
    "name": "multiviewcalendar",
    "api": "web/multiviewcalendar",
    "documentation": {
      "aspnet-mvc": "helpers/multiviewcalendar/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1026"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/multiviewcalendar"
    },
    "spriteCssClass": "multiviewcalendarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "multiviewcalendar/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Explore the example of $FRAMEWORK multiviewcalendar control to find how easy it is to add a multiviewcalendar to your website or web app."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik MultiViewCalendar for $FRAMEWORK</strong> is a component that displays multiple calendar views. It supports the selection of and navigation between dates as well as date ranges for scheduling appointments.</p><p><strong>Key Features</strong></p> <ul style=\"list-style-type: disc;\"><li>View selection</li><li>Multiple views</li><li>Multiple and range selection</li><li>Disabled dates</li><li>Week number column</li><li>Accessibility and keyboard navigation</li></ul>"
        },
        "links": [
          {
            "text": "MultiViewCalendar HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/multiviewcalendar/overview"
          }
        ]
      },
      {
        "text": "View Selection",
        "url": "multiviewcalendar/view-selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The $FRAMEWORK multiviewcalendar allows the user to pre-define its initially rendered view or the depth of its view selection."
        },
        "description": {
          "aspnet-mvc": "<p><strong>MultiViewCalendar Start</strong></p><p>The start property can be used to set the first view that the MultiViewCalendar initially renders. The start option defines the following possible view options:</p><ul><li>month - Shows the days of the month</li><li>year - Shows the months of the year</li><li>decade - Shows the years of the decade</li><li>century - Shows the decades of the century</li></ul><p><strong>MultiViewCalendar Depth</strong></p><p>The MultiViewCalendar enables you to control the view depth to which the user can navigate. To determine its navigation view depth, use the depth property. Similarly to start option the depth accepts same option values: <strong>month</strong>, <strong>year</strong>, <strong>decade</strong> and <strong>century</strong>.</p><p><i>Note the option will not be applied if start option is lower than depth. Always set both and start and depth options.</i></p>"
        },
        "links": [
          {
            "text": "MultiViewCalendar Active View Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/multiviewcalendar/active-view"
          }
        ]
      },
      {
        "text": "Multiple Views",
        "url": "multiviewcalendar/multiple-views",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK multiviewcalendar allows to display multiple months at same time."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik MultiViewCalendar for $FRAMEWORK</strong> enables you to control the number of horizontally rendered views.</p><p> By default the MultiViewCalendar renders two views, but using the <strong>Views</strong> property you can set the desired number of views.</p>"
        },
        "links": [
          {
            "text": "MultiViewCalendar Multiple Views Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/multiviewcalendar/multiple-views"
          }
        ]
      },
      {
        "text": "Selection",
        "url": "multiviewcalendar/selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how ASP.NET MVC multiviewcalendar allows the user to select multiple dates or a range of dates using different selection modes offered by the widget."
        },
        "description": {
          "aspnet-mvc": "<p>By default the <strong>Telerik MultiViewCalendar for $FRAMEWORK</strong> performs single date selection. The component also allows the user to select multiple dates or a range of dates. This is contrulled by the <strong>Selectable</strong> option of the Kendo UI MultiViewCalendar with the fullowing option values:<ul><li>Multiple - user is able to select multiple dates. The multiple selection functionality of the calendar widget can be performed with Ctrl or Shift keys.</li><br/><p>The Ctrl key allows user to perform multiple selection:</p><ol><li>Ctrl + Mouse Click on specific date will mark the date as selected and other previously selected dates will remain selected as well.</li><li>Selecting a date from a specific view without using Ctrl key will deselect all previously selected dates (including previously selected dates from other views/months) and select the date of the clicked cell.</li><li>Selecting a date that is already selected while hulding the Ctrl key will remove the date from the selection.</li></ol><p>The Shift key allows user to select a range of dates in the same month or between different months:</p><ol><li>Shift + Mouse Click selects all dates between the last selected one (with SPACE or Mouse Click) and the clicked cell.</li><li>Shift + Mouse Click when there is no previous selection will select all dates from the beginning to the clicked cell.</li></ol></li><li>Range - each subsequent mouse click sets respectevely <strong>start</strong> and <strong>end</strong> of the range to be selected. In case that the end is before the start it becomes start of the range</li></ul>"
        },
        "links": [
          {
            "text": "MultiViewCalendar Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/multiviewcalendar/selection"
          }
        ]
      },
      {
        "text": "Disabled dates",
        "url": "multiviewcalendar/disabled-dates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK multiviewcalendar allows you to disable dates"
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik MultiViewCalendar for $FRAMEWORK</strong> allows you to disable certain days which are not intended to be selected by the end user such as weekends, national holidays, and others.</p> <p> This is controlled by the <strong>DisabledDates</strong> property and can be set to either <strong>array</strong> or <strong>function</strong></p>"
        },
        "links": [
          {
            "text": "MultiViewCalendar Disabled Dates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/multiviewcalendar/disable-dates"
          }
        ]
      },
      {
        "text": "Week Column",
        "url": "multiviewcalendar/week-column",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK multiviewcalendar allows you to show a week number column in the month view"
        },
        "description": {
          "aspnet-mvc": "<p>In the <strong>Telerik MultiViewCalendar for $FRAMEWORK</strong>, you can render a column which displays the number of weeks within the current month view.</p> <p>To show the week number column, set the <strong>WeekNumber</strong> property.</p>"
        },
        "links": [
          {
            "text": "MultiViewCalendar Week Number Column Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/multiviewcalendar/week-column"
          }
        ]
      },
      {
        "text": "API",
        "url": "multiviewcalendar/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the $FRAMEWORK multiviewcalendar API works and what kind of functions it supports."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik MultiViewCalendar for $FRAMEWORK</strong> allows to select multiple dates or a range of dates using the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/multiviewcalendar/methods/selectdates\" target=\"_blank\">selectDates</a> and <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/multiviewcalendar/methods/selectrange\" target=\"_blank\">selectRange</a> methods.</p><p> In this example is demonstrated how the selectRange can be used for selecting a specific range of dates.</p>"
        },
        "links": [
          {
            "text": "MultiViewCalendar Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/multiviewcalendar"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "multiviewcalendar/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "You can easily navigate in <p>The <strong>Telerik MultiViewCalendar for $FRAMEWORK</strong> by using the keyboard. This demo shows the functionality, just look at the notes and play with the example."
        },
        "links": [
          {
            "text": "MultiViewCalendar Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/multiviewcalendar/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Notification",
    "name": "notification",
    "api": "web/notification",
    "documentation": {
      "aspnet-mvc": "helpers/notification/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1045"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/notification"
    },
    "spriteCssClass": "notificationIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "notification/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example you will see all options to show and hide a notification in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Notification Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/notification/overview"
          }
        ]
      },
      {
        "text": "Position and stacking",
        "url": "notification/position-stacking",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the position and stacking behavior of the $FRAMEWORK Notification component."
        },
        "links": [
          {
            "text": "Notification Position and Stacking Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/notification/positioning-stacking"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "notification/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example you will see how Telerik notification templates could be modified in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Notification Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/notification/templates"
          }
        ]
      },
      {
        "text": "Events",
        "url": "notification/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "Demo about using events and handlers with the $FRAMEWORK Notification component."
        },
        "links": [
          {
            "text": "Notification Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/notification/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "notification/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Demo about using the API of the $FRAMEWORK Notification component."
        },
        "links": [
          {
            "text": "Notification Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/notification/overview"
          },
          {
            "text": "Notification Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/notification"
          },
          {
            "text": "Notification Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/notification"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "notification/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Demo about the RTL support of the $FRAMEWORK Notification component."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Notification Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/notification/overview"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "NumericTextBox",
    "name": "numerictextbox",
    "updated": true,
    "api": "web/numerictextbox",
    "documentation": {
      "aspnet-mvc": "helpers/numerictextbox/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1063"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/numerictextbox"
    },
    "spriteCssClass": "numericTextBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "numerictextbox/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to use all core features of Telerik NumericTextBox for $FRAMEWORK."
        },
        "links": [
          {
            "text": "NumericTextBox HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/numerictextbox/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "numerictextbox/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the modern rendering and styling capabilities of Telerik NumericTextBox for $FRAMEWORK."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "NumericTextBox HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/numerictextbox/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "numerictextbox/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows events which are triggered in $FRAMEWORK NumericTextBox control."
        },
        "links": [
          {
            "text": "NumericTextBox HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/numerictextbox/overview"
          }
        ]
      },
      {
        "text": "Floating Label",
        "url": "numerictextbox/floating-label",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the $FRAMEWORK NumericTextBox Floating Label."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to use the Floating Label of the $FRAMEWORK NumericTextBox widget. The Floating Label displays the type of input a field requires."
        },
        "links": [
          {
            "text": "NumericTextBox Label Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/numerictextbox/labels"
          }
        ]
      },
      {
        "text": "API",
        "url": "numerictextbox/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows specific API functions for $FRAMEWORK NumericTextBox component."
        },
        "links": [
          {
            "text": "NumericTextBox Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/numerictextbox"
          }
        ]
      },
      {
        "text": "Globalization",
        "deferred": true,
        "url": "numerictextbox/globalization",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "NumericTextBox Globalization Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/numerictextbox/globalization/overview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "numerictextbox/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how right-to-left input is implemented in $FRAMEWORK Numeric TextBox component to ensure the satisfaction of RTL language users."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "NumericTextBox Right-to-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/numerictextbox/globalization/rtl-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "numerictextbox/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The value in $FRAMEWORK NumericTextBox can be increased or decreased by using keyboard navigation combinations. Take a look at the demo to learn how."
        },
        "links": [
          {
            "text": "NumericTextBox Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/numerictextbox/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Pager",
    "name": "pager",
    "api": "web/pager",
    "documentation": {
      "aspnet-mvc": "html-helpers/data-management/pager/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1084"
    },
    "category": "Data Management",
    "spriteCssClass": "pagerBarIcon",
    "items": [
      {
        "text": "Overview",
        "url": "pager/index",
        "description": {
          "aspnet-mvc": "This example shows the core features of $FRAMEWORK Pager component. It provides the UI needed to page data and can be easily used alongside other data controls."
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the core features of $FRAMEWORK Pager component."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "PhotoContestModel.cs",
              "url": "~/Models/PhotoContestModel.cs"
            }
          ]
        }
      },
      {
        "text": "Integration",
        "url": "pager/integration",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to use an external $FRAMEWORK pager to page the grid data"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "OrderViewModel.cs",
              "url": "~/Models/OrderViewModel.cs"
            }
          ]
        }
      },
      {
        "text": "Keyboard Navigation",
        "url": "pager/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows demonstrates the keyboard navigation functionality of the $FRAMEWORK Pager component"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "PhotoContestModel.cs",
              "url": "~/Models/PhotoContestModel.cs"
            }
          ]
        }
      }
    ]
  },
  {
    "text": "PanelBar",
    "name": "panelbar",
    "api": "web/panelbar",
    "documentation": {
      "aspnet-mvc": "helpers/panelbar/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1106"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/panelbar"
    },
    "spriteCssClass": "panelBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "panelbar/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the core features of $FRAMEWORK Accordion component."
        }
      },
      {
        "text": "Images",
        "url": "panelbar/images",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how images and sprites can be implemented in $FRAMEWORK Expandable PanelBar component."
        }
      },
      {
        "text": "Templates",
        "url": "panelbar/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how tree nodes in $FRAMEWORK PanelBar component can be further customized by using templates."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Loading content with AJAX",
        "url": "panelbar/ajax",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how content is loaded in $FRAMEWORK PanelBar component with AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Animation effects",
        "url": "panelbar/animation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how animations effects can be easily implemented into $FRAMEWORK PanelBar control."
        }
      },
      {
        "text": "Binding to local data",
        "url": "panelbar/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how items in the panelbar are displayed with the default settings of $FRAMEWORK PanelBar and how the component can be easily bound to local data."
        },
        "group": "Data Binding",
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "PanelBar Local Data Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/panelbar/binding/server-binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "panelbar/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the $FRAMEWORK hierarchical panelbar can be bound to remote data and the items in the panelbar populated from an external source."
        },
        "links": [
          {
            "text": "PanelBar Remote Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/panelbar/binding/ajax-binding"
          }
        ]
      },
      {
        "text": "Events",
        "url": "panelbar/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how events work in $FRAMEWORK PanelBar control and how you can set them to expand the content area of the accordion."
        },
        "requiresServer": "true",
        "group": "API",
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "panelbar/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the API functions of $FRAMEWORK PanelBar component."
        },
        "links": [
          {
            "text": "PanelBar Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/panelbar/overview"
          },
          {
            "text": "PanelBar Server-Side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/panelbar"
          },
          {
            "text": "PanelBar Client-Side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/panelbar"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "panelbar/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how directions of the arrows in $FRAMEWORK PanelBar are easily changed when moving from right to left."
        },
        "group": "Accessibility and Internationalization",
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "panelbar/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Users can navigate in $FRAMEWORK PanelBar by using the keyboard and different keyboard combinations. Play with the demo and implement the feature in your app."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Popover",
    "name": "popover",
    "api": "web/popover",
    "documentation": {
      "aspnet-mvc": "helpers/popover/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1794"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/popover"
    },
    "spriteCssClass": "tooltipIcon",
    "items": [
      {
        "text": "Overview",
        "url": "popover/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the core functionality of the of Telerik UI for $FRAMEWORK Popover."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Popover</strong> component provides a simple way to display additional content next to a specific anchor element that appears when users perform actions on that anchor element such as click or hover. The Popover supports templates, which allow you to customize its content and appearance.\n"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "PopOverController.cs",
              "url": "~/Controllers/Popover/PopOverController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Popover Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/popover/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "popover/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can use a template in the Telerik UI for $FRAMEWORK Popover."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK Popover supports templates.</p><p>This demo shows how to use the Body configuration option of the Popover, to display the desired content.</p>"
        },
        "links": [
          {
            "text": "Popover Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/popover/templates"
          }
        ]
      },
      {
        "text": "Events",
        "url": "popover/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you can see how to handle events of the Telerik UI for $FRAMEWORK Popover."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to handle events of the $FRAMEWORK Popover.</p>"
        },
        "links": [
          {
            "text": "Popover Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/popover/overview"
          },
          {
            "text": "Handling Telerik UI for $FRAMEWORK Component Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "popover/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to get a reference to the client-side object of the Telerik UI for $FRAMEWORK Popover and use its API."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to get a reference to the client-side object of the the $FRAMEWORK Popover and use its API.</p>"
        },
        "links": [
          {
            "text": "Popover Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/popover/overview"
          },
          {
            "text": "Popover Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/popover"
          },
          {
            "text": "Popover Client-side",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/popover"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "ProgressBar",
    "name": "progressbar",
    "api": "web/progressbar",
    "documentation": {
      "aspnet-mvc": "helpers/progressbar/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1170"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/progressbar"
    },
    "spriteCssClass": "progressBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "progressbar/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the core features of $FRAMEWORK ProgressBar component."
        },
        "links": [
          {
            "text": "ProgressBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/progressbar/overview"
          }
        ]
      },
      {
        "text": "Chunk ProgressBar",
        "url": "progressbar/chunk",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how you can display chunks of progress in $FRAMEWORK ProgressBar."
        },
        "links": [
          {
            "text": "ProgressBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/progressbar/overview"
          }
        ]
      },
      {
        "text": "Vertical ProgressBar",
        "url": "progressbar/vertical",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "$FRAMEWORK ProgressBar can be oriented both horizontally and vertically. See how and play with the demo."
        },
        "links": [
          {
            "text": "ProgressBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/progressbar/overview"
          }
        ]
      },
      {
        "text": "Custom Label",
        "url": "progressbar/customlabel",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can display custom progress label in $FRAMEWORK ProgressBar to indicate the level of progress."
        },
        "links": [
          {
            "text": "ProgressBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/progressbar/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "progressbar/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how events work in $FRAMEWORK ProgressBar control."
        },
        "links": [
          {
            "text": "ProgressBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/progressbar/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "progressbar/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the API functions of $FRAMEWORK ProgressBar component."
        },
        "links": [
          {
            "text": "ProgressBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/progressbar/overview"
          },
          {
            "text": "ProgressBar Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/progressbar"
          },
          {
            "text": "ProgressBar Client-side",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/progressbar"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "progressbar/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Demo about the right-to-left (RTL) support of the $FRAMEWORK ProgressBar component."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "ProgressBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/progressbar/overview"
          }
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Ripple Container",
    "name": "ripplecontainer",
    "spriteCssClass": "rippleIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "ripplecontainer/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates the core functionality of the Kendo UI RippleContainer."
        },
        "description": {
          "aspnet-mvc": "<p>The Kendo UI RippleContainer provides <a href=\"https://material.io/design/motion/choreography.html#sequencing\">the Material ink ripple effect</a> for the Kendo UI components and is compatible only with <a href=\"https://docs.telerik.com/kendo-ui/styles-and-layout/sass-themes\">the Sass-based Material Theme</a>. In order to preview the example, make sure that the \"Sass Material\" theme is selected from the \"Change Theme\" menu in the top-right corner of the demo page."
        }
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Gantt",
    "name": "gantt",
    "api": "web/gantt",
    "documentation": {
      "aspnet-mvc": "helpers/gantt/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=657"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/gantt"
    },
    "spriteCssClass": "ganttIcon",
    "items": [
      {
        "text": "Overview",
        "url": "gantt/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "ASP.NET MVC Gantt Overview."
        },
        "links": [
          {
            "text": "Gantt Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/overview"
          }
        ]
      },
      {
        "text": "Basic usage",
        "url": "gantt/basic-usage",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Explore the example of ASP.NET MVC Gantt to find how easy it is to add a gantt chart to your website or web app."
        },
        "links": [
          {
            "text": "Gantt Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/overview"
          }
        ]
      },
      {
        "text": "Columns",
        "url": "gantt/columns",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you can see how simple it is to configure columns in the Telerik $FRAMEWORK Gantt."
        },
        "group": "Functionality",
        "links": [
          {
            "text": "Gantt Columns Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/columns"
          }
        ]
      },
      {
        "text": "Export to PDF",
        "url": "gantt/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export ASP.NET MVC gantt as PDF file"
        },
        "links": [
          {
            "text": "Gantt Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/overview"
          }
        ]
      },
      {
        "text": "Planned vs Actual",
        "url": "gantt/planned-vs-actual",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows planned vs actual gantt tasks."
        },
        "links": [
          {
            "text": "Gantt Planned vs Actual Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/planned-vs-actual"
          }
        ]
      },
      {
        "text": "Resources",
        "url": "gantt/resources",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to assign resources to gantt tasks."
        },
        "links": [
          {
            "text": "Gantt Resources Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/resources"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "gantt/task-template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the Template support of ASP.NET MVC Gantt."
        },
        "links": [
          {
            "text": "Gantt Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/templates"
          }
        ]
      },
      {
        "text": "Selected Date and Range",
        "url": "gantt/selected-date-and-range",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to select date and visible range, using the corresponding Telerik $FRAMEWORK Gantt properties."
        },
        "links": [
          {
            "text": "Gantt Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "gantt/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates different events which are available in KendoGantt widget and the code explains how you can use them for your project."
        },
        "group": "API"
      },
      {
        "text": "API",
        "url": "gantt/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows API Functions of KendoGantt. Demo Source Code will show you how to call methods on the widget instance to script its behavior."
        },
        "links": [
          {
            "text": "Gantt Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/overview"
          },
          {
            "text": "Gantt Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/gantt"
          },
          {
            "text": "Gantt Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/gantt"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "gantt/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the Right-to-left (RTL) support of ASP.NET MVC Gantt."
        },
        "group": "Accessibility and Internationalization",
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Gantt Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "gantt/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this ASP.NET MVC Gantt demo to learn how different keyboard combinations could be used to navigate in the component."
        },
        "links": [
          {
            "text": "Gantt Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/overview"
          }
        ]
      },
      {
        "text": "Server binding",
        "deferred": true,
        "url": "gantt/serverbinding",
        "group": "Binding",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Gantt Data Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/gantt/binding"
          }
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Responsive Panel",
    "name": "responsive-panel",
    "api": "web/responsivepanel",
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1261"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/mvc-responsivepanel"
    },
    "spriteCssClass": "responsivePanelIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "responsive-panel/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the basic functionality of the Telerik $FRAMEWORK ResponsivePanel control."
        }
      }
    ],
    "category": "Layout"
  },
  {
    "text": "Scheduler",
    "name": "scheduler",
    "api": "web/scheduler",
    "documentation": {
      "aspnet-mvc": "helpers/scheduler/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1293"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/mvc-scheduler"
    },
    "spriteCssClass": "schedulerIcon",
    "items": [
      {
        "text": "Overview",
        "url": "scheduler/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": " $FRAMEWORK Scheduler by Telerik control example | $FRAMEWORK Scheduler Overview"
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Scheduler component allows you to easily display, edit and schedule appointments. You can display day, week, month and agenda views, group horizontally and vertically and enjoy out-of-the-box templates.</p> <p>You can find additional information on how to use the Scheduler in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/scheduler/ajax-editing\" target=\"_blank\">this section</a> of the product documentation.</p> <p><strong>Key Features</strong></p> <ul> <li>Day, Week, Work Week, Month, Agenda and Timeline views</li> <li>Multiple Resources and Resource Grouping</li> <li>Templates for Appointments</li> <li>Time Zone Support</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich API for maximum flexibility</li> <li>Export to PDF</li> <li>Accessibility, keyboard navigation and RTL Support</li> <li>Rich cross-browser and mobile support</li> <li>Responsive HTML 5 Rendering</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/scheduler\">Scheduler for $FRAMEWORK</a></p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Basic usage",
        "url": "scheduler/basic-usage",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the basic functionality and UI of the Telerik $FRAMEWORK Scheduler control."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Scheduler component allows you to easily display, edit and schedule appointments. You can display day, week, month and agenda views, group horizontally and vertically and enjoy out-of-the-box templates.</p> <p>You can find additional information on how to use the Scheduler in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/scheduler/ajax-editing\" target=\"_blank\">this section</a> of the product documentation.</p> <p><strong>Key Features</strong></p> <ul> <li>Day, Week, Work Week, Month, Agenda and Timeline views</li> <li>Multiple Resources and Resource Grouping</li> <li>Templates for Appointments</li> <li>Time Zone Support</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich API for maximum flexibility</li> <li>Export to PDF</li> <li>Accessibility, keyboard navigation and RTL Support</li> <li>Rich cross-browser and mobile support</li> <li>Responsive HTML 5 Rendering</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/scheduler\">Scheduler for $FRAMEWORK</a></p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Adaptive Rendering",
        "url": "scheduler/adaptive-rendering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how adaptive rendering is configured in Kendo UI Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK Scheduler supports adaptive enhancements like changes in styling and behavior in order to remain consistent with the specific user device experience.</p> <p>This example demonstrates how to enable the adaptive rendering feature by setting the <b><a target=\"_blank\" href=\"https://docs.telerik.com/aspnet-mvc/api/Kendo.Mvc.UI.Fluent/SchedulerBuilder#mobilekendomvcuimobilemode\">Mobile</a></b> option to 'auto'.</p><p>More information regarding Kendo UI Scheduler Adaptive Rendering can be found in the documentation <a target=\"_blank\" href=\"https://docs.telerik.com/aspnet-mvc/helpers/scheduler/adaptive-rendering\">here</a>.</p>\n"
        },
        "links": [
          {
            "text": "Scheduler Adaptive Rendering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/adaptive-rendering"
          }
        ]
      },
      {
        "text": "Adaptive Slot Height",
        "url": "scheduler/adaptive-slot-height",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the the Adaptive Slot Height functionality, available in the Month View of the Telerik UI for ASP.NET MVC Scheduler."
        },
        "group": "Functionality",
        "description": {
          "aspnet-mvc": "<p>The Telerik UI for ASP.NET MVC Scheduler enables you with the possibility to dynamically change the height of the slots in Month view, in order to fit the events in the specific slot. In order to get advantage of this functionality, you need to enable the <b>AdaptiveSlotHeight</b> property. In combination, you can set a preferable maximum of events that can be rendered in the slots using the <b>EventsPerDay</b> property.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Auto Event Height",
        "url": "scheduler/auto-event-height",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the the Auto Event Height functionality, available in the Month View of the Telerik UI for ASP.NET MVC Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>The Month view in the Telerik UI for ASP.NET MVC Scheduler allows you to set an <b>AutoHeigh</b> functionality for the events. This option will take into account the event subject when rendering in, in order to display the entire content. Setting the <b>EventHeight</b> to <b>auto</b> automatically enables the <b>AdaptiveSlotHeight</b> option.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Year View",
        "url": "scheduler/yearview",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the Year view of the Telerik UI for ASP.NET MVC Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>The UI for ASP.NET MVC Scheduler Year view allows you to display appointments in a twelve months range. By clicking on a specific date, a list with all associated events for that date is displayed in a Tooltip. Clicking on the Tooltip will navigate users to the Day view for the corresponding date.</p><p>Further customization for the year view can be applied by setting the StartDate, Months, TooltipTemplate, NoData, etc. properties.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          },
          {
            "text": "Scheduler Views Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/views"
          }
        ]
      },
      {
        "text": "Timeline view",
        "url": "scheduler/timeline",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the Timeline, Timeline Week and Timeline Work Week views."
        },
        "description": {
          "aspnet-mvc": "<p>The Scheduler's Timeline view allows you to display a variable number of appointment slots and define their duration. You can use the Timeline to provide end-users with an overview for scheduling purposes.</p> <p>You can define and show the available time line views through the Views -&gt; TimelineView, TimelineWeekView, TimelineWorkWeekView and TimelineMonthView settings. You can further customize these views by setting their StartTime, EndTime, MajorTick, ShowWorkHours, WorkDayStart, WorkDayEnd, WorkWeekStart, WorkWeekEnd and other properties.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Timeline Overnight view",
        "url": "scheduler/timeline-night",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the Timeline and Timeline Week to show overnight major slots."
        },
        "description": {
          "aspnet-mvc": "<p>The Scheduler Timeline view allows you to display overnight major slots by configuring the startTime and the endTime of the view.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Selection",
        "url": "scheduler/event-selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the multiple selection and drag drop functionality of the Scheduler"
        },
        "description": {
          "aspnet-mvc": "<p>The ASP.NET MVC Scheduler allows you to select several events at once, and move them simultaneously by drag & drop.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Import and Export to iCal",
        "url": "scheduler/import-export-ical",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Import and export events from the ASP.NET MVC Scheduler to iCal format."
        },
        "description": {
          "aspnet-mvc": "<p>In this example you can see how you can use a third-party library (in this case <a href='https://github.com/mozilla-comm/ical.js/'>ical.js</a>) that supports the <a href='https://tools.ietf.org/html/rfc5545'>iCalendar standard</a> to import or export the ASP.NET MVC Scheduler events.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Export to PDF",
        "url": "scheduler/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export ASP.NET MVC scheduler as PDF file"
        },
        "description": {
          "aspnet-mvc": "<p>Nowadays, the PDF format is very popular and widely used to present documents in a manner independent of application software, hardware and operating systems. This demo demonstrates how to export the Telerik MVC Scheduler contents to PDF.</p> <p>The approach is very straight-forward - to export the content to PDF include the corresponding command to the scheduler&rsquo;s toolbar&nbsp;.Toolbar(t =&gt; t.Pdf())<span> </span>and configure the export settings through the Pdf attribute. You can specify the file name and whether to export all pages, margins, paper size, font and other.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Search Events",
        "url": "scheduler/search-events",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "ASP.NET MVC Scheduler with the Search Events feature enabled"
        },
        "description": {
          "aspnet-mvc": "<p>With the search tool enabled you can filter the events that match the search term in the title or description.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Resources",
        "url": "scheduler/resources",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to assign resources to events in $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC Scheduler extension allows you to assign scheduler events to a set of predefined resources. The resources can be divided on:</p> <ul> <li>Single Instance Resources &ndash; when only one instance can be assigned to a scheduler event. This is for example a list of meetings (Scheduler events), which are held in two rooms (resources). Since a meeting can be held in only one room it can be considered a single resource.</li> <li>Multiple Instance Resources<span> - </span>when more than one instance can be assigned to a scheduler event. For example when there is a list of meetings and meeting attendees. Since more than one attendee can participate in a meeting, it is a multiple instance resource. You can enable this feature through the Resources -&gt; .Multiple(true) setting.</li> </ul> <p>The Scheduler supports also unlimited resource types. For example you can combine single and multiple resource as shown in this demo.</p> <p>You can find more information on how to define and configure Scheduler resources in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/scheduler/mvc-scheduler-resources\">documentation article</a>.</p>"
        },
        "links": [
          {
            "text": "Scheduler Resources Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/resources"
          }
        ]
      },
      {
        "text": "Horizontal Grouping",
        "url": "scheduler/resources-grouping-horizontal",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to group resources horizontally in $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how you can group the resources horizontally in $FRAMEWORK Scheduler. The direction of the grouping can be controlled with the Orientation property, i.e.</p> <p>.Group(group =&gt; group.Resources(\"Rooms\").Orientation(SchedulerGroupOrientation.Horizontal))</p> <p>The available options of the SchedulerGroupOrientation setting are Default, Horizontal and Vertical.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Vertical Grouping",
        "url": "scheduler/resources-grouping-vertical",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to group resources vertically in $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>You can see in this example how to group the scheduler&rsquo;s resources vertically. The direction of the grouping can be controlled with the Orientation property, i.e.</p> <p>.Group(group =&gt; group.Resources(\"Rooms\", \"Attendees\").Orientation(SchedulerGroupOrientation.Vertical))</p> <p>The available orientation options are Default, Horizontal and Vertical.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Virtual Vertical Grouping",
        "url": "scheduler/resources-grouping-vertical-virtual",
        "deferred": true,
        "sources": {
          "aspnet-mvc": [
            {
              "name": "MeetingViewModel.cs",
              "url": "~/Models/Scheduler/MeetingViewModel.cs"
            }
          ]
        },
        "meta": {
          "aspnet-mvc": "This demo shows how to group resources vertically in $FRAMEWORK Scheduler with DOM virtualization."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Vertical Virtualization</strong> optimizes the views' rendering by doing a DOM virtualization. It is supported only for Day, Week, WorkWeek and Month views.</p><p>You can enable it by using the <strong>Virtual(true)</strong> method in the view configuration <code>views.WeekView(view => view.Selected(true).Virtual(true));</code>.</p><p>When enabled the view will render additional DOM elements as you scroll down.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Hierarchical Grouping",
        "url": "scheduler/resources-grouping-hierarchical",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to group hierarchical resources in $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>You can see in this example how to group hierarhical resources in  $FRAMEWORK Scheduler.</p> <p> The parentValue option should be configured in the child resource in order to define which is parent resource. Having in mind that if no parentValue field is configured for the child resource, it will be rendred for every parent resource.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Date Grouping",
        "url": "scheduler/date-grouping",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows horizontal and vertical grouping by Date in $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows horizontal and vertical grouping by Date in $FRAMEWORK Scheduler. The direction of the grouping can be controlled with the Orientation property, i.e.</p> <p>.Group(group =&gt; group.Resources(\"Rooms\").Orientation(SchedulerGroupOrientation.Horizontal))</p> <p>The available options of the SchedulerGroupOrientation setting are Default, Horizontal and Vertical.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "scheduler/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use templates to customize the appearance of the scheduler events of your $FRAMEWORK app."
        },
        "description": {
          "aspnet-mvc": "<p>This example illustrates how to use templates to customize the appearance of the scheduler events. You can use the eventTemplate setting to create a template for the scheduler&rsquo;s events. Other template settings provided by the widget are allDayEventTemplate, dateHeaderTemplate, groupHeaderTemplate, majorTimeHeaderTemplate and minorTimeHeaderTemplate.</p> <p>Templates use a simple templating syntax where the hash # symbol is used to mark areas in a template that should be replaced with data when the template is executed. The # character is also used to signify the beginning and end of custom JavaScript code inside the template.</p> <p>There are three ways to use the hash syntax:</p> <ol> <li>Render values as HTML: #= # </li> <li>Uses HTML encoding to display values: #: # </li> <li>Execute arbitrary JavaScript code: # if (true) { # ... non-script content here ... # } # </li> </ol> <p>You can find more information about the templates in this article: <a href=\"https://docs.telerik.com/kendo-ui/framework/templates/overview\">ASP.NET MVC Templates Overview</a>.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Restrictions",
        "url": "scheduler/restriction",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Set restrictions to better control your resources with $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how you can restrict the events and better control your resources in $FRAMEWORK Scheduler using the client-side API of the component. You can prevent not only to the drag and resize capabilities of the appointments, but also allow or not the creation of a new event or the modification of an existing one by criteria defined by you.</p> <p>For example, double click on the \"Call Charlie about the project\" event, change the attendee to Bob and click SAVE. This will result into an error: \"This person is not available in this time period.\"</p> <p>You will also get an error \"This person is not available in this time period.\", if you change the start date of the \"HR Lecture\" event to 10:30 AM.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Event move & resize",
        "url": "scheduler/move-resize",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the move and resize feature of $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK Scheduler allows you and your users to move and resize its events. In addition to this, you can also specify whether the scheduler will either snap events to the nearest slot during dragging (resizing or moving) or it will allow free moving and resizing of events. You can do that through the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/scheduler#configuration-snap\">snap client-side bool property</a> of the scheduler as shown in this example.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Change Working Days",
        "url": "scheduler/change-working-days",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to set specific days of the week as working days in $FRAMEWORK Scheduler."
        },
        "description": {
          "aspnet-mvc": "<p>You can change the working days of the week by using the <strong>WorkDays</strong> method.</p><p>The days to set are index based and the <strong>WorkDays</strong> method accepts an <code>int[]</code> as argument.</p><p>In this example <code>new int[] { 1,3,4 }</code> sets Monday, Wednesday and Thursday as working days of the week.</p><p>You can set the <strong>WorkDays</strong> method to the <strong>Scheduler</strong> to set the working days for all Views. Or you can set it through the configuration of an individual View.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Binding to SignalR",
        "url": "scheduler/signalr",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how the Telerik $FRAMEWORK Scheduler can be bound to SignalR Hub for real-time push notifications."
        },
        "group": "Data Binding",
        "description": {
          "aspnet-mvc": "<p>This demo shows how the Telerik $FRAMEWORK Scheduler can be bound to a <a href=\"https://www.asp.net/signalr\">SignalR</a> Hub for real-time push notifications. This is useful for web applications (chat, calendar and scheduling, gaming and other apps) which require high-frequency updates where you usually want to perform data updates in real-time on all connected clients.</p> <p>To configure the SignalR binding, set the <strong>SignalR</strong> and <strong>Transport</strong> settings in the Scheduler&rsquo;s DataSource configuration. In this way you instruct the data source to use SignalR protocol for transmitting and operating with data in real time. You can find more information in the following help article: <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/scheduler/how-to/signalr-local-hub-locking-events\">Scheduler SignalR Binding</a></p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Binding to Kinvey Backend Services",
        "url": "scheduler/kinvey",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this sample you will see in action how Telerik $FRAMEWORK Scheduler is bound to Kinvey cloud-based services."
        },
        "description": {
          "aspnet-mvc": "<h4>What are the Kinvey Backend Services?</h4><p>Kinvey Backend Services are a set of cloud-based services that enable developers to build and manage mobile apps significantly faster, easier and more scalable way. Kinvey Backend Services can significantly speed-up development by providing your app with data storage, user management and server-code execution.</p><p style=\"padding-top: 1em;\">&raquo; <a class=\"hyperlink\" href=\"https://www.kinvey.com/\" title=\"Getting started with Kinvey Backend Services\">What are Kinvey Backend Services</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://devcenter.kinvey.com/html5/guides/getting-started\">Kinvey Backend Services HTML5 SDK</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://github.com/Kinvey/kinvey-kendo-data-source\" title=\"Introduction to Kendo UI and Kinvey Backend Services JavaScript integration\">Integration with Kendo UI</a></p><p class=\"demo-hint\" style=\"padding-top: 1em;\">Note: The Kinvey Backend Services data source is not supported on IE11 and below yet, because it relies on <a class=\"hyperlink\" href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">cross-origin resource sharing</a>.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Web API binding",
        "deferred": true,
        "url": "scheduler/webapi",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Custom data source",
        "deferred": true,
        "url": "scheduler/custom-datasource",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "scheduler/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how events are handled and triggered in $FRAMEWORK Scheduler."
        },
        "group": "API",
        "description": {
          "aspnet-mvc": "<p>Telerik MVC Scheduler exposes rich API and events which provide easy configuration or extension points for customization on top of its built-in features.</p> <p>This example demonstrates how you can intercept the scheduler's events to output messages in the console when these events are raised. You can use these events for customizations or to execute custom logic, if necessary.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "scheduler/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the API of Telerik $FRAMEWORK Scheduler control."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik Scheduler for $FRAMEWORK exposes rich client-side API and events, which provide easy configuration or extension points for custom functionality on top of the built-in features.</p> <p>In this demo, you can see how to get a reference to the scheduler's client-side object and using its date() and view() methods to update its current date and current view.</p> <p>You can find more information about its client-side API <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/scheduler\">here</a>.</p>"
        },
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          },
          {
            "text": "Scheduler Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/scheduler"
          },
          {
            "text": "Scheduler Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/scheduler"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "scheduler/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the Right-to-left (RTL) support for $FRAMEWORK Scheduler."
        },
        "group": "Accessibility and Internationalization",
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Scheduler supports right-to-left languages and rendering. All you need to do is to register the <strong>kendo.rtl.min.css</strong> file (located at Kendo.Mvc.Examples\\Content\\web\\ installation folder) and wrap the scheduler in a container element with <strong>k-rtl</strong> class set for it, as demonstrated in this particular example.</p> <p>You can learn more for the right-to-left support of the components in <a href=\"https://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this article</a>.</p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "scheduler/selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the selection and the different keyboard combinations that could be used to navigate in $FRAMEWORK Scheduler."
        }
      },
      {
        "text": "Localization and Globalization",
        "url": "scheduler/globalization",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Scheduler Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/scheduling/scheduler/overview"
          }
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Rating",
    "name": "rating",
    "component": "rating",
    "api": "web/rating",
    "documentation": {
      "aspnet-mvc": "helpers/rating/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1224"
    },
    "category": "Editors",
    "spriteCssClass": "ratingIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "rating/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Rating component"
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Rating</strong> allows users to intuitively rate items in their applications by selecting number of items [stars] from a predefined maximum number of items. </p><p><strong>Key Features</strong></p><ul style=\"list-style-type: disc;\"><li>Selection</li><li>Precision</li><li>Label</li><li>Tooltip</li><li>Templates</li><li>Accessibility, keyboard navigation and RTL Support</li></ul><p>Additional information about how to use the Telerik $FRAMEWORK Rating component can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/rating/overview\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        },
        "links": [
          {
            "text": "Rating Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/overview"
          }
        ]
      },
      {
        "text": "Selection",
        "url": "rating/selection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Rating selection modes"
        },
        "links": [
          {
            "text": "Rating Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/selection"
          }
        ]
      },
      {
        "text": "Precision",
        "url": "rating/precision",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Rating precision modes"
        },
        "links": [
          {
            "text": "Rating Precision Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/precision"
          }
        ]
      },
      {
        "text": "Label",
        "url": "rating/label",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Rating label functionality"
        },
        "links": [
          {
            "text": "Rating Label Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/label"
          }
        ]
      },
      {
        "text": "Tooltip",
        "url": "rating/tooltip",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Rating tooltip functionality"
        },
        "links": [
          {
            "text": "Rating Tooltip Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/tooltip"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "rating/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Rating templates functionality"
        },
        "links": [
          {
            "text": "Rating Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/templates"
          }
        ]
      },
      {
        "text": "Events",
        "url": "rating/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Rating events"
        },
        "links": [
          {
            "text": "Rating Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "rating/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the API functions of the Rating component"
        },
        "links": [
          {
            "text": "Rating Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/overview"
          },
          {
            "text": "Rating Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/rating"
          },
          {
            "text": "Rating Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/rating"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "rating/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Right-to-left-support of the Rating component"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Rating Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/rating/overview"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "rating/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Keyboard navigation of the Rating component"
        }
      }
    ]
  },
  {
    "text": "RadioButton",
    "name": "radioButton",
    "updated": true,
    "spriteCssClass": "radiobuttonIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "radiobutton/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage of the $FRAMEWORK RadioButton."
        }
      },
      {
        "text": "Appearance",
        "url": "radiobutton/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the modern rendering and styling capabilities of Telerik RadioButton for $FRAMEWORK."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "RadioButton HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/radiobutton/appearance"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "RadioGroup",
    "name": "radioGroup",
    "spriteCssClass": "radiogroupIcon",
    "documentation": {
      "aspnet-mvc": "html-helpers/editors/radiogroup/overview"
    },
    "items": [
      {
        "text": "Overview",
        "url": "radiogroup/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage of the $FRAMEWORK RadioGroup."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK RadioGroup</strong> enables you to style and provide radio button functionality to list elements. You could add custom css classes to the radio group items, set label position or configure the layout of the RadioGroup. Learn more about the selection functionality by playing with this demo.</p><p>If the RadioGroup component is bound using the BindTo() method, a collection of objects implementing IInputGroupItem should be used</p>"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "InputGroupItemModel.cs",
              "url": "~/Models/InputGroupItemModel.cs"
            },
            {
              "name": "RadioGroupViewModel.cs",
              "url": "~/Models/RadioGroupViewModel.cs"
            }
          ]
        },
        "links": [
          {
            "text": "RadioGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/radiogroup/overview"
          }
        ]
      },
      {
        "text": "Layout",
        "url": "radiogroup/layout",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the $FRAMEWORK RadioGroup component layout."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "RadioGroup LAyout Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/radiogroup/layout"
          }
        ]
      },
      {
        "text": "Events",
        "url": "radiogroup/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how events are handled and triggered in $FRAMEWORK RadioGroup."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "RadioGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/radiogroup/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "radiogroup/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the API functions of $FRAMEWORK RadioGroup control operate and how you can configure them for your web project."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "RadioGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/radiogroup/overview"
          },
          {
            "text": "RadioGroup Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/radiogroup"
          },
          {
            "text": "RadioGroup Client-side",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/radiogroup"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "radiogroup/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the right-to-left feature is enabled in $FRAMEWORK RadioGroup control."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "RadioGroup Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/radiogroup/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "radiogroup/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the keyboard navigation feature of Telerik $FRAMEWORK RadioGroup control."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Slider",
    "name": "slider",
    "api": "web/slider",
    "documentation": {
      "aspnet-mvc": "helpers/slider/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1358"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/slider"
    },
    "spriteCssClass": "sliderIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "slider/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how Telerik $FRAMEWORK Slider extension for ASP.NET MVC Slider component allows end users to interact with slider's main feature."
        },
        "links": [
          {
            "text": "Slider Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/slider/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "slider/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how events are handled and triggered in $FRAMEWORK Slider."
        },
        "links": [
          {
            "text": "Slider Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/slider/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "slider/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how to use $FRAMEWORK Slider API functions. Play with range slider API functions and examine the demo for your specific scenario."
        },
        "links": [
          {
            "text": "Slider Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/slider/overview"
          },
          {
            "text": "Slider Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/slider"
          },
          {
            "text": "Slider Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/slider"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "slider/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the right-to-left feature is enabled in $FRAMEWORK Slider control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Slider Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/slider/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "slider/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the keyboard navigation feature of Telerik $FRAMEWORK Slider control."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Switch",
    "name": "switch",
    "updated": true,
    "component": "switch",
    "api": "web/switch",
    "documentation": {
      "aspnet-mvc": "helpers/switch/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1459"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/switch"
    },
    "spriteCssClass": "mobileSwitchIcon",
    "category": "Editors",
    "items": [
      {
        "text": "Basic Usage",
        "url": "switch/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Switch component"
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK Switch</strong> is a component that displays two exclusive choices.</p><p><strong>Key Features</strong></p><ul style=\"list-style-type: disc;\"><li>Label Messages</li><li>Enabled state</li><li>Readonly state</li><li>Accessibility, keyboard navigation and RTL Support</li></ul>"
        },
        "links": [
          {
            "text": "Switch Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/switch/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "switch/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the modern rendering and styling capabilities of Telerik Switch for $FRAMEWORK."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Switch HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/switch/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "switch/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Switch events"
        },
        "links": [
          {
            "text": "Switch Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/switch/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "switch/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the API functions of the Switch component"
        },
        "links": [
          {
            "text": "Switch Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/switch/overview"
          },
          {
            "text": "Switch Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/switch"
          },
          {
            "text": "Switch Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/switch"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "switch/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Right-to-left-support of the Switch component"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Switch Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/switch/overview"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "switch/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the Keyboard navigation of the Switch component"
        }
      }
    ]
  },
  {
    "text": "Sortable",
    "name": "sortable",
    "api": "web/sortable",
    "documentation": {
      "aspnet-mvc": "helpers/sortable/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1376"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/sortable"
    },
    "spriteCssClass": "sortableIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "sortable/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See the basic functionality of $FRAMEWORK Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Filter / Disable items",
        "url": "sortable/filter-disable",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how you can filter and disable items in $FRAMEWORK Sortable which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Handlers",
        "url": "sortable/handlers",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See the handler feature of $FRAMEWORK Sortable control which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Axis / Container constraints",
        "url": "sortable/constraints",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See the axis/container restriction feature of $FRAMEWORK Sortable, which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Linked Lists",
        "url": "sortable/linkedlists",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out the linked lists feature of $FRAMEWORK Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Events",
        "url": "sortable/events",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows events of $FRAMEWORK Sortable control."
        }
      },
      {
        "text": "Sortable panels",
        "url": "sortable/sortable-panels",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how to sort panels with simple drag and drop in $FRAMEWORK Sortable."
        }
      },
      {
        "text": "Integration - Grid",
        "url": "sortable/integration-grid",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates $FRAMEWORK Grid integration with Sortable Component."
        }
      },
      {
        "text": "Integration - ListView",
        "url": "sortable/integration-listview",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates $FRAMEWORK ListView integration with Sortable Component."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Integration - TabStrip",
        "url": "sortable/integration-tabstrip",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates $FRAMEWORK TabStrip integration with Sortable Component."
        },
        "packages": [
          "!aspnet-core"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Splitter",
    "name": "splitter",
    "api": "web/splitter",
    "documentation": {
      "aspnet-mvc": "helpers/splitter/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1401"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/splitter"
    },
    "spriteCssClass": "splitterIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "splitter/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this Splitter demo you will learn how to configure ASP.NET MVC jQuery-powered Splitter in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Splitter Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/splitter/overview"
          }
        ]
      },
      {
        "text": "Loading content with AJAX",
        "url": "splitter/ajax",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how Telerik $FRAMEWORK Splitter control enables you to load content with AJAX."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Splitter Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/splitter/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "splitter/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See the events that change the behavior of $FRAMEWORK Splitter. Learn about resize events and Javascript function names to be called before the panel is collapsed."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Splitter Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/splitter/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "splitter/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how API of $FRAMEWORK Splitter control works. Find all API functions to expand/collapse content and resize the pane."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Splitter Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/splitter/overview"
          },
          {
            "text": "Splitter Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/splitter"
          },
          {
            "text": "Splitter Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/splitter"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "splitter/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo we will play with the right-to-left text input and visualization which is enabled in $FRAMEWORK Splitter control."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Splitter Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/splitter/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "splitter/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Users can easily manipulate the behaviour of $FRAMEWORK Slider by using different keyboard keys and combinations."
        },
        "links": [
          {
            "text": "Splitter Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/splitter/overview"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "SpreadProcessing",
    "name": "spreadprocessing",
    "packages": [
      "aspnet-mvc"
    ],
    "api": "https://docs.telerik.com/devtools/document-processing/libraries/radspreadprocessing/overview",
    "category": "Document Processing",
    "spriteCssClass": "spreadprocessingIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "spreadprocessing/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadSpreadProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "With <strong>RadSpreadProcessing</strong> you can effortlessly convert documents from one to another file format among XLSX, CSV, TXT and XLSM. Further, you can export any of these to PDF."
        }
      },
      {
        "text": "Generate documents",
        "url": "spreadprocessing/generate-documents",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the you can generate documetns with Telerik RadSpreadProcessing in MVC applications."
        },
        "description": {
          "aspnet-mvc": "<strong>RadSpreadProcessing</strong> allows you to create a document from scratch using only code. This is particulary convenient when you need to export large amount of data to one of the supported formats - XSLX, CSV, TXT and XLSM."
        }
      },
      {
        "text": "Export Chart to PDF",
        "url": "spreadprocessing/export-chart-pdf",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the you can export Excel charts to a PDF with Telerik RadSpreadProcessing in MVC applications."
        }
      },
      {
        "text": "Grid integration",
        "url": "spreadprocessing/grid-integration",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadSpreadProcessing and Kendo MVC Grid wrapper can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "This example illustrates integration between Telerik SpreadProcessing and the Kendo MVC Grid component. You can visualize data in Grid and easily export it to XSLX, CSV, TXT or XLSM format."
        }
      }
    ],
    "documentation": {
      "aspnet-mvc": "https://docs.telerik.com/devtools/document-processing/libraries/radspreadprocessing/overview"
    }
  },
  {
    "text": "SpreadStreamProcessing",
    "name": "spreadstreamprocessing",
    "packages": [
      "aspnet-mvc",
      "aspnet-core"
    ],
    "api": "https://docs.telerik.com/devtools/document-processing/libraries/radspreadstreamprocessing/overview",
    "category": "Document Processing",
    "spriteCssClass": "spreadstreamprocessingIcon",
    "items": [
      {
        "text": "Large Document Export",
        "url": "spreadstreamprocessing/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadSpreadStreamProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "With <strong>SpreadStreamProcessing</strong> you can effortlessly generate large XLSX and CSV files."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "DocumentExportHelper.cs",
              "deferred": true,
              "url": "~/Models/SpreadStreamProcessing/DocumentExportHelper.cs"
            },
            {
              "name": "DocumentHelper.cs",
              "deferred": true,
              "url": "~/Models/SpreadStreamProcessing/DocumentHelper.cs"
            },
            {
              "name": "DocumentRow.cs",
              "deferred": true,
              "url": "~/Models/SpreadStreamProcessing/DocumentRow.cs"
            },
            {
              "name": "DocumentSettings.cs",
              "deferred": true,
              "url": "~/Models/SpreadStreamProcessing/DocumentSettings.cs"
            },
            {
              "name": "Shipping.cs",
              "deferred": true,
              "url": "~/Models/SpreadStreamProcessing/Shipping.cs"
            },
            {
              "name": "Client.cs",
              "deferred": true,
              "url": "~/Models/SpreadStreamProcessing/Client.cs"
            }
          ]
        }
      }
    ],
    "documentation": {
      "aspnet-mvc": "https://docs.telerik.com/devtools/document-processing/libraries/radspreadstreamprocessing/overview"
    }
  },
  {
    "text": "SkeletonContainer",
    "name": "skeletoncontainer",
    "api": "web/skeletoncontainer",
    "documentation": {
      "aspnet-mvc": "html-helpers/interactivity/skeletoncontainer/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1752"
    },
    "spriteCssClass": "skeletoncontainerIcon",
    "items": [
      {
        "text": "Overview",
        "url": "skeletoncontainer/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How Telerik UI SkeletonContainer for $FRAMEWORK works, view demo source code of Telerik UI SkeletonContainer for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI SkeletonContainer for $FRAMEWORK is a widget that is mainly used for indicating the user that the content of the page and/or element is currently loading. What separates it from the conventional loaders is that it can follow the exact structure of the page or element that is loading. This prepares the user of what the actual structure will be along with the indication that an action is in process and the content is being loaded.</p>"
        },
        "links": [
          {
            "text": "SkeletonContainer Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/interactivity/skeletoncontainer/overview"
          }
        ]
      },
      {
        "text": "Grid Integration",
        "url": "skeletoncontainer/grid-integration",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How Telerik UI SkeletonContainer for $FRAMEWORK can be integrated inside a Telerik UI Grid."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI SkeletonContainer for $FRAMEWORK is versatile widget that can be seamlessly integrated with virtually everything, including the Telerik UI Grid. In the current demo, it is depicted the integration of the SkeletonContainer inside the grid via a single property - <strong>LoaderType</strong>.</p><p>The SkeletonContainer is shown automatically every time the grid requests new data. In the given example, the Grid uses virtualization and requests new items whenever the user scrolls through the main content.</p>"
        },
        "links": [
          {
            "text": "Skeleton Loading Type in the Telerik UI Grid",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/grid/binding/overview#loading-overlay-types"
          }
        ],
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Stepper",
    "name": "stepper",
    "api": "web/stepper",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/stepper/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1429"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/stepper"
    },
    "spriteCssClass": "stepperIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "stepper/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this demo to learn how to use the $FRAMEWORK Stepper HtmlHelper extension for the ASP.NET MVC Stepper component."
        },
        "links": [
          {
            "text": "Stepper Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/overview"
          }
        ]
      },
      {
        "text": "Layout",
        "url": "stepper/layout",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the ASP.NET MVC Stepper component layout."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Stepper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/appearance"
          }
        ]
      },
      {
        "text": "Icons",
        "url": "stepper/icons",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to set the icons for the ASP.NET MVC Stepper component."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Stepper Icons Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/icons"
          }
        ]
      },
      {
        "text": "Orientation",
        "url": "stepper/orientation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the different orientation modes of the ASP.NET MVC Stepper component."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Stepper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/appearance"
          }
        ]
      },
      {
        "text": "Operation Modes",
        "url": "stepper/operation-modes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows modes of operation of the $FRAMEWORK Stepper HtmlHelper extension for the ASP.NET MVC Stepper component."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Stepper Operation Modes Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/operation-modes"
          }
        ]
      },
      {
        "text": "Events",
        "url": "stepper/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can trigger the events of the ASP.NET MVC Stepper component."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Stepper Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "stepper/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how the API functions of the ASP.NET MVC Stepper component work."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Stepper Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/overview"
          },
          {
            "text": "Stepper Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/stepper"
          },
          {
            "text": "Stepper Client-side",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/stepper"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "stepper/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the ASP.NET MVC Stepper component in right-to-left mode."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Stepper Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/stepper/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "stepper/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This Kendo UI demo shows how users can use keyboard navigation in ASP.NET MVC Stepper component."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "TabStrip",
    "name": "tabstrip",
    "api": "web/tabstrip",
    "documentation": {
      "aspnet-mvc": "helpers/tabstrip/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1478"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/tabstrip"
    },
    "spriteCssClass": "tabStripIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "tabstrip/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this demo to learn how to use the $FRAMEWORK TabStrip HtmlHelper extension for the ASP.NET MVC TabStrip component."
        },
        "links": [
          {
            "text": "TabStrip Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/overview"
          }
        ]
      },
      {
        "text": "Images",
        "url": "tabstrip/images",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how images are displayed in Telerik $FRAMEWORK TabStrip component."
        },
        "links": [
          {
            "text": "TabStrip Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/overview"
          }
        ]
      },
      {
        "text": "Loading content with AJAX",
        "url": "tabstrip/ajax",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to load content with AJAX in Telerik TabStrip for $FRAMEWORK."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "TabStrip Tab Content Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/content"
          }
        ]
      },
      {
        "text": "Animation effects",
        "url": "tabstrip/animation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the supported animation effects in $FRAMEWORK TabStrip. You can play with the sample by changing the settings of the animation."
        },
        "links": [
          {
            "text": "TabStrip Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/overview"
          }
        ]
      },
      {
        "text": "Tab position",
        "url": "tabstrip/tab-position",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows different tab position options for the $FRAMEWORK TabStrip."
        },
        "links": [
          {
            "text": "TabStrip Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/overview"
          }
        ]
      },
      {
        "text": "Scrollable tabs",
        "url": "tabstrip/scrollable-tabs",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows auto scrollable tabs in the $FRAMEWORK TabStrip."
        },
        "links": [
          {
            "text": "TabStrip Tabs Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/tabs"
          }
        ]
      },
      {
        "text": "Events",
        "url": "tabstrip/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use events feature of Telerik $FRAMEWORK Tabstrip extension for ASP.NET MVC Tabstrip component."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "TabStrip Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "tabstrip/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how API functions in $FRAMEWORK TabStrip control work. Find the demo source code to play with $FRAMEWORK TabStrip API."
        },
        "links": [
          {
            "text": "TabStrip Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/overview"
          },
          {
            "text": "TabStrip Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/tabstrip"
          },
          {
            "text": "TabStrip Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/tabstrip"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "tabstrip/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the right-to-left feature, enabled in $FRAMEWORK TabStrip. Now users can easily reorder the tabs from right to left."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "TabStrip Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/tabstrip/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "tabstrip/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK demo shows how end users of your app can intuitively use keyboard navigation in $FRAMEWORK TabStrip."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "TaskBoard",
    "name": "taskboard",
    "api": "web/taskboard",
    "documentation": {
      "aspnet-mvc": "html-helpers/data-management/taskboard/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1736"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/taskboard"
    },
    "spriteCssClass": "fileManagerIcon",
    "items": [
      {
        "text": "Overview",
        "url": "taskboard/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik $FRAMEWORK TaskBoard component works and view the demo source code."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK TaskBoard</strong> component allows you to easily organize items and keep track of their state and status. The TaskBoard provides a clean and user-friendly interface for managing tasks, notes, projects, people, or other kinds of items.</p><p><strong>Key Features</strong></p><ul style=\"list-style-type: disc;\"><li>Columns</li><li>Cards</li><li>Data Binding</li><li>Editing</li><li>Resources</li><li>Templates</li><li>Search</li><li>Validation</li><li>Accessibility</li></ul><p>Additional information about how to use the Telerik $FRAMEWORK TaskBoard component can be found in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/taskboard/overview\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        }
      },
      {
        "text": "Local binding",
        "url": "taskboard/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates local binding of the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TaskBoard supports data binding from a local or remote data storage.</p><p>In this example the TaskBoard fetches its data from a collection of objects saved in the ViewData.</p>"
        }
      },
      {
        "text": "Remote binding",
        "url": "taskboard/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates remote binding of the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TaskBoard supports data binding from a local or remote data storage.</p><p>In this example the TaskBoard fetches its cards data from a remote endpoint assigned via the DataSource -> Read configuration.</p>"
        }
      },
      {
        "text": "Editing",
        "url": "taskboard/editing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates editing in the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TaskBoard supports column and card editing.</p><p>This demo shows how to configure the TaskBoard for data editing operations (Create, Update, Destroy).</p>"
        }
      },
      {
        "text": "Templates",
        "url": "taskboard/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates templates in the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how you can customize the $FRAMEWORK TaskBoard by using different template options.</p>"
        }
      },
      {
        "text": "Validation",
        "url": "taskboard/validation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates validation in the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows some of the $FRAMEWORK TaskBoard events and API that allow you to accomplish various validation scenarios.</p>"
        }
      },
      {
        "text": "Events",
        "url": "taskboard/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the events of the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to handle the events exposed by the $FRAMEWORK TaskBoard. You can use these events to customize the behavior of the component, or to execute custom logic based on a specific use case.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "taskboard/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the API of the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TaskBoard exposes rich client-side API and events, which can be used to create custom functionality on top of the built-in features.</p><p>This example shows how you can get a reference to the client-side object of the TaskBoard, and use the available API methods. The methods are called to get information about the selected card, or perform various actions over the columns and the cards.</p>"
        }
      },
      {
        "text": "RTL support",
        "url": "taskboard/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the RTL support of the TaskBoard component."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TaskBoard supports right-to-left rendering.</p><p>This demo shows the TaskBoard nested in a container element with k-rtl class set.</p><p>For more information on the right-to-left support of the components, refer to this <a href=\"https://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">topic</a></p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "taskboard/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the keyboard support of the TaskBoard component."
        }
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "TextArea",
    "name": "textarea",
    "updated": true,
    "component": "textarea",
    "api": "web/textarea",
    "documentation": {
      "aspnet-mvc": "html-helpers/editors/textarea/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1506"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/textarea"
    },
    "spriteCssClass": "textAreaIcon",
    "items": [
      {
        "text": "Overview",
        "url": "textarea/index",
        "title": {
          "aspnet-mvc": "Overview demo of $FRAMEWORK TextArea HTMLHelper"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the core functionality of $FRAMEWORK TextArea component."
        },
        "description": {
          "aspnet-mvc": "$FRAMEWORK TextArea control enables you to style and provide a floating label functionality to textarea elements. Learn more about the selection functionality by playing with this demo."
        }
      },
      {
        "text": "Appearance",
        "url": "textarea/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the modern rendering and styling capabilities of Telerik TextArea for $FRAMEWORK."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "TextArea HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/textarea/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "textarea/events",
        "title": {
          "aspnet-mvc": "Events in $FRAMEWORK TextArea HTMLHelper"
        },
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This example shows events which are triggered in $FRAMEWORK TextArea component."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to access and use the events of the $FRAMEWORK TextArea component."
        }
      },
      {
        "text": "Floating Label",
        "url": "textarea/floating-label",
        "title": {
          "aspnet-mvc": "Floating Label in $FRAMEWORK TextArea component"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the $FRAMEWORK TextArea Floating Label."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to use the Floating Label of the $FRAMEWORK TextArea component. The Floating Label displays the type of input a field requires."
        }
      },
      {
        "text": "API",
        "url": "textarea/api",
        "title": {
          "aspnet-mvc": "API Functions Demo for $FRAMEWORK TextArea"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows specific API functions for $FRAMEWORK TextArea component."
        },
        "description": {
          "aspnet-mvc": "$FRAMEWORK TextArea API demo shows how the API functions can be used to apply different functionality to the component."
        }
      },
      {
        "text": "RTL support",
        "url": "textarea/right-to-left-support",
        "title": {
          "aspnet-mvc": "RTL support in $FRAMEWORK TextArea HTMLHelper"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how right-to-left input is implemented in $FRAMEWORK TextArea component to ensure the satisfaction of RTL language users."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TextArea supports right-to-left languages and rendering. All you have to do is wrap the editor in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the $FRAMEWORK can be found in <a href=\"https://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this topic</a>.</p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "TextBox",
    "name": "textbox",
    "updated": true,
    "component": "textbox",
    "api": "web/textbox",
    "documentation": {
      "aspnet-mvc": "html-helpers/editors/textbox/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1513"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/textbox"
    },
    "spriteCssClass": "textBoxIcon",
    "items": [
      {
        "text": "Overview",
        "url": "textbox/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Overview demo of $FRAMEWORK TextBox component."
        },
        "description": {
          "aspnet-mvc": "$FRAMEWORK TextBox control enables you to style and provide a floating label functionality to input elements. Learn more about the selection functionality by playing with this demo."
        },
        "links": [
          {
            "text": "TextBox HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/textbox/overview"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "textbox/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows the modern rendering and styling capabilities of Telerik TextBox for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik TextBox for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "TextBox HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/textbox/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "textbox/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows events which are triggered in $FRAMEWORK TextBox component."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to access and use the events of the $FRAMEWORK TextBox component."
        },
        "links": [
          {
            "text": "TextBox HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/textbox/overview"
          }
        ]
      },
      {
        "text": "Floating Label",
        "url": "textbox/floating-label",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the $FRAMEWORK TextBox Floating Label."
        },
        "description": {
          "aspnet-mvc": "This sample shows how to use the Floating Label of the $FRAMEWORK TextBox component. The Floating Label displays the type of input a field requires."
        },
        "links": [
          {
            "text": "TextBox Label Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/textbox/labels"
          }
        ]
      },
      {
        "text": "API",
        "url": "textbox/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows specific API functions for $FRAMEWORK TextBox component."
        },
        "description": {
          "aspnet-mvc": "$FRAMEWORK TextBox API demo shows how the API functions can be used to apply different functionality to the component."
        },
        "links": [
          {
            "text": "TextBox Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/textbox"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "textbox/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how right-to-left input is implemented in $FRAMEWORK TextBox component to ensure the satisfaction of RTL language users."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TextBox supports right-to-left languages and rendering. All you have to do is wrap the editor in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the $FRAMEWORK can be found in <a href=\"https://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this topic</a>.</p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "TextBox Right-to-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/textbox/rtl-support"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "TileLayout",
    "name": "tilelayout",
    "api": "web/tilelayout",
    "documentation": {
      "aspnet-mvc": "html-helpers/layout/tilelayout/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1528"
    },
    "spriteCssClass": "tilelayoutIcon",
    "items": [
      {
        "text": "Overview",
        "url": "tilelayout/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik $FRAMEWORK TileLayout control works and view the demo source code."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TileLayout is based on the two-dimensional CSS grid and is able to display content in tiles. They can be dragged around and rearranged as desired by the user. The tiles can be resized to change the way they span across the rows and columns.</p><p>The charts and grids do not auto resize so they need to be programmatically resized when the window is resized or when the tiles are resized. We do this by handling the resize event <code>.Events(e=>e.Resize(\"onTileResize\"))</code>.</p>\n"
        }
      },
      {
        "text": "Reordering",
        "url": "tilelayout/reordering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik $FRAMEWORK TileLayout control can be reordered."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TileLayout provides a reordering functionality of the tiles.They can be dragged around and rearranged as desired by the user.</p><p>To enable the reorderable functionality, use the <code>.Reorderable()</code> method and pass <code>true</code> as a parameter. \n"
        },
        "links": [
          {
            "text": "TileLayout Reordering Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tilelayout/reordering"
          }
        ]
      },
      {
        "text": "Resizing",
        "url": "tilelayout/resizing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The Telerik $FRAMEWORK TileLayout control provides a resizing functionality of the tiles.They can be dragged both horizontally and vertically to take up more or less space in the layout as determined by the user.</p><p>To enable the resizable functionality, use the <code>.Resizable()</code> method and pass <code> true</code> as a parameter.\n"
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TileLayout provides a resizing functionality of the tiles. They can be dragged both horizontally and vertically to take up more or less space in the layout as determined by the user.</p><p>To enable the resizable functionality, use the <code>.Resizable()</code> method and pass <code> true</code> as a parameter.\n"
        },
        "links": [
          {
            "text": "TileLayout Resizing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tilelayout/resizing"
          }
        ]
      },
      {
        "text": "Add/Remove",
        "url": "tilelayout/add-remove",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how to add or remove containers in the Kendo UI TileLayout control."
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TileLayout supports the option to dynamically add and remove items.</p><p>This demo demonstrates a dashboard with a sidebar where the sidebar items can be dragged and dropped to the left TileLayout. Items from the latter can be removed as well by clicking on the close button.</p>"
        },
        "links": [
          {
            "text": "TileLayout Add or Remove Tiles Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tilelayout/add-remove"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "tilelayout/keyboard-navigation",
        "meta": {
          "aspnet-mvc": "Look at the source code and play with the demo to find out more about the keyboard support feature in Telerik UI TileLayout."
        },
        "links": [
          {
            "text": "TileLayout Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tilelayout/keyboard-navigation"
          }
        ]
      },
      {
        "text": "Events",
        "url": "tilelayout/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The Telerik $FRAMEWORK TileLayout emits a <code>Resize()</code> event when a tile is resized and a <code>Reorder()</code> event when a tile is reordered.</p>\n"
        },
        "description": {
          "aspnet-mvc": "<p>The $FRAMEWORK TileLayout emits a <code>Resize()</code> event when a tile is resized and a <code>Reorder()</code> event when a tile is reordered.\n"
        },
        "links": [
          {
            "text": "Upload Mode of Operation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/upload/modes-of-operation"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "TimePicker",
    "name": "timepicker",
    "updated": true,
    "api": "web/timepicker",
    "documentation": {
      "aspnet-mvc": "helpers/timepicker/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=439"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/datetime"
    },
    "spriteCssClass": "timePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "timepicker/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to configure Telerik TimePicker $FRAMEWORK extension for ASP.NET MVC Timepicker component."
        }
      },
      {
        "text": "Component Type",
        "url": "timepicker/component-type",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to change the appearance of the $FRAMEWORK TimePicker."
        },
        "description": {
          "aspnet-mvc": "<p>As of R2 2020, the <strong>$FRAMEWORK TimePicker</strong> introduces updates to the rendering and a new appearance of the component. Switching to the new look and feel of the component is as simple as setting the <strong>ComponentType</strong> property to \"modern\".</p><p>The DropDownList below the picker provides the opportunity to switch between the component types on the fly and observe the differences of the modern and classic appearances.</p>"
        }
      },
      {
        "text": "Range selection",
        "url": "timepicker/rangeselection",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the flexible functionality of $FRAMEWORK TimePicker. Specify a range of visible hours and enable the user to select them from the dropdown list."
        }
      },
      {
        "text": "Appearance",
        "url": "timepicker/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the modern rendering and styling capabilities of Telerik TimePicker for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik TimePicker for ASP.NET MVC allows you to control its styling options.</p><p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "TimePicker HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/dateinput/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "timepicker/events",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how events are used in Telerik $FRAMEWORK TimePicker control. Play with the demo, select time and find how the functionality works."
        }
      },
      {
        "text": "API",
        "url": "timepicker/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the API functions of $FRAMEWORK TimePicker."
        }
      },
      {
        "text": "Globalization",
        "url": "timepicker/globalization",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "RTL support",
        "url": "timepicker/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample illustrates the right to left functionality which Telerik $FRAMEWORK TimePicker supports."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "timepicker/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Users can intuitively select time in $FRAMEWORK TimePicker by simply using the keyboard support of the control."
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ToolBar",
    "name": "toolbar",
    "api": "web/toolbar",
    "documentation": {
      "aspnet-mvc": "helpers/toolbar/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1576"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/toolbar"
    },
    "spriteCssClass": "toolbarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "toolbar/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this ASP.NET MVC ToolBar demo to get familiar with the supported commands and core functionality."
        },
        "links": [
          {
            "text": "ToolBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/toolbar/overview"
          }
        ]
      },
      {
        "text": "Resizing",
        "url": "toolbar/resizing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this ASP.NET MVC ToolBar demo to get familiar with the resizing functionality."
        },
        "description": {
          "aspnet-mvc": "<p>Resize the window and watch how ToolBar's items show or hide according to the available space.</p><p>More information regarding the resizable functionality can be found in the <a href='https://docs.telerik.com/kendo-ui/web/toolbar/overview'>Getting Started topic</a>.</p>"
        },
        "links": [
          {
            "text": "ToolBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/toolbar/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "toolbar/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this ASP.NET MVC ToolBar demo to get familiar with supported events."
        },
        "links": [
          {
            "text": "ToolBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/toolbar/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "toolbar/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this ASP.NET MVC ToolBar demo to get familiar with supported API methods."
        },
        "links": [
          {
            "text": "ToolBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/toolbar/overview"
          },
          {
            "text": "ToolBar Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/toolbar"
          },
          {
            "text": "ToolBar Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/toolbar"
          }
        ]
      },
      {
        "text": "Integration with Editors",
        "url": "toolbar/integration",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this ASP.NET MVC ToolBar demo to learn how to include ASP.NET MVC Editor component in the ToolBar."
        },
        "links": [
          {
            "text": "ToolBar Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/toolbar/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "toolbar/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at the source code and play with the demo to find out more about the keyboard support feature in $FRAMEWORK ToolBar."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "RTL Support",
        "disableInMobile": true,
        "url": "toolbar/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The sample illustrates the right to left functionality which Telerik $FRAMEWORK Toolbar supports."
        },
        "packages": [
          "!aspnet-core"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Drawer",
    "name": "drawer",
    "pro": true,
    "api": "web/drawer",
    "documentation": {
      "aspnet-mvc": "helpers/drawer/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=535"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/drawer"
    },
    "spriteCssClass": "drawerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "drawer/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Populate different content based on the selection made using the ASP.NET MVC Drawer."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Drawer</strong> is a dismissible or permanently visible panel that can be used as a sidebar component for navigation in responsive web applications or simply for changing a content of a section in the page.</p><p><strong>Key Features</strong></p> <ul style=\"list-style-type: disc;\"><li>Overlay and Push mode</li><li>Right and Left position</li><li>Gesture Support</li><li>Mini mode</li></ul><p>In this demo the <strong>Telerik $FRAMEWORK Drawer</strong> can be opened either by clicking on the hamburger icon or using swipe gesture on the associated content.</p>"
        },
        "links": [
          {
            "text": "Drawer HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/drawer/overview"
          }
        ]
      },
      {
        "text": "Mini Mode",
        "url": "drawer/mini",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Compact or Mini Mode of the ASP.NET MVC Drawer in action."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Drawer</strong> offers a mini mode. With the mini mode enabled the  <strong>Telerik $FRAMEWORK Drawer</strong> changes its width instead of closing. Most commonly used to maintain quick selection available on the side at all times, leaving just the icons.</p><p>In this demo the <strong>Telerik $FRAMEWORK Drawer</strong> can be opened either by clicking on the hamburger icon or using swipe gesture on the associated content.</p>"
        },
        "links": [
          {
            "text": "Drawer Display Modes Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/drawer/display-modes"
          }
        ]
      },
      {
        "text": "Functionality",
        "url": "drawer/functionality",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check the overlay, push modes and left and right position of the ASP.NET MVC Drawer."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik UI Drawer for $FRAMEWORK</strong> has two modes that are quite different in terms of behavior: <ul><li><strong>Overlay</strong> - takes the entire height of page and it provides overlay effect on the page when opened.</li><li><strong>Push</strong> - in push mode the drawer interacts with specific content/section of the page. In open state it pushes the content to the left or right (depending on the drawer's position) to take the remaining space.</li></p><p>The <strong>Telerik UI Drawer for $FRAMEWORK</strong> can be positioned either on left or right side using the position configuration option.</p>"
        },
        "links": [
          {
            "text": "Drawer Interaction Modes Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/drawer/interaction-modes"
          }
        ]
      },
      {
        "text": "Hierarchy",
        "url": "drawer/hierarchy",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Hierarchical structure of the $FRAMEWORK Drawer in action."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik UI Drawer for $FRAMEWORK</strong> provides an easy way to create a hierarchical structure by placing elements with identation inside the drawer items. They use built-in classes and applying them facilitates to easily create a hierarchical structure</p>"
        }
      },
      {
        "text": "API",
        "url": "drawer/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this ASP.NET MVC Drawer demo to get familiar with supported API methods."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik $FRAMEWORK Drawer</strong> provides API methods for show and hide.</p>"
        },
        "links": [
          {
            "text": "Drawer Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/drawer"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "drawer/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at the source code and play with the demo to find out more about the keyboard support feature in $FRAMEWORK Drawer."
        },
        "links": [
          {
            "text": "Drawer Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/drawer/accessibility/keyboard-navigation"
          }
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Timeline",
    "name": "timeline",
    "api": "web/timeline",
    "pro": true,
    "documentation": {
      "aspnet-mvc": "helpers/navigation/timeline/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1542"
    },
    "spriteCssClass": "timelineIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "timeline/index",
        "sources": {
          "aspnet-mvc": [
            {
              "name": "TimelineEventsController.cs",
              "url": "~/Controllers/Timeline/TimelineEventsController.cs"
            },
            {
              "name": "TimelineEventModel.cs",
              "url": "~/Models/TimelineEventModel.cs"
            }
          ]
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Interactive and pleasing way that visualizes specific events on yearly time basis using the ASP.NET Core Timeline."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK Timeline</strong> is a component that provides an interactive and pleasing way that visualizes specific events on yearly time basis.<p><strong>Key Features</strong></p> <ul style=\"list-style-type: disc;\"><li>Horizontal and Vertical layout</li><li>Customizeable in terms of how the event details will be displayed using the template option</li><li>On-demand rendering for the horizontal mode</li><li>Mobile and responsive behavior</li></ul></p><p>Main features for the <strong>Vertical</strong> mode: <ul><li> It takes the entire height of its container and positioned all events vertically.</li><li> Events might be collapsible controlled by the <strong>collapsibleEvents</strong> option </li><li> An <strong>alternatingMode</strong> option allows events to be positioned on both sides of the timeline axis</li></ul></p>"
        },
        "links": [
          {
            "text": "Timeline Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/timeline/overview"
          }
        ]
      },
      {
        "text": "Horizontal Mode",
        "url": "timeline/horizontal",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Horizontal Mode for $FRAMEWORK Timeline component"
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>Horizontal orientation</strong> of the <strong>$FRAMEWORK Timeline</strong> allows the component to use its horizontal layout to display events. The left/right arrows allow quick navigation to next/previous period of time. Main features for the <strong>Horizontal</strong> mode: <ul><li> On-demand rendering of the events details.</li><li>Navigation to next/previous time period in the timeline axis</li><li>Responsive behavior of the timeline axis</li></ul></p>"
        },
        "links": [
          {
            "text": "Timeline Orientation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/timeline/orientation"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "timeline/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Event template for $FRAMEWORK Timeline component"
        },
        "description": {
          "aspnet-mvc": "<p>A common scenario is to have the ability to custmize how the event details will be displayed in the <strong>$FRAMEWORK Timeline</strong> component.</p><p>This example demostrates how to render two images below the description text and take the advantage of using the built-in classes for the card elements.</p>"
        },
        "links": [
          {
            "text": "Timeline Templates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/timeline/templates"
          }
        ]
      },
      {
        "text": "API",
        "url": "timeline/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "API demo for $FRAMEWORK Timeline component"
        },
        "links": [
          {
            "text": "Timeline Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/timeline"
          }
        ]
      },
      {
        "text": "Events",
        "url": "timeline/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Events demo for $FRAMEWORK Timeline component"
        },
        "links": [
          {
            "text": "Timeline Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/timeline/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "timeline/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this $FRAMEWORK Timeline demo to learn the different keyboard combinations that could be used to navigate in the component."
        },
        "description": {
          "aspnet-mvc": "<p>In Horizontal mode the timeline wrap class should be focused instead of the header card. The following <a target=\"_blank\" href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/timeline/accessibility/keyboard-navigation\">chapter of the documentation</a> describes how to achieve this.</p>"
        },
        "links": [
          {
            "text": "Timeline Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/timeline/accessibility/keyboard-navigation"
          }
        ]
      },
      {
        "text": "Shared DataSource",
        "url": "timeline/shared-datasource",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Check out the binding of the $FRAMEWORK Timeline component to a Shared DataSource."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK Timeline</strong> could be bound to a shared data source. Whenever a change external to the <strong>$FRAMEWORK Timeline</strong> is present, the component's data source and UI will be automatically updated.</p>"
        },
        "packages": [
          "!php",
          "!jsp"
        ],
        "links": [
          {
            "text": "Timeline Binding to a Shared DataSource Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/timeline/shared-datasource"
          }
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Tooltip",
    "name": "tooltip",
    "api": "web/tooltip",
    "documentation": {
      "aspnet-mvc": "helpers/tooltip/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1590"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/tooltip"
    },
    "spriteCssClass": "tooltipIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "tooltip/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this example of Telerik jQuery-based toolip in $FRAMEWORK and explore all features of the extension. "
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "TooltipController.cs",
              "url": "~/Controllers/Tooltip/TooltipController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Tooltip Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tooltip/overview"
          }
        ]
      },
      {
        "text": "Loading content with AJAX",
        "url": "tooltip/ajax",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the content in $FRAMEWORK Tooltip control can be loaded, using AJAX."
        },
        "requiresServer": "true",
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ajax_details.cshtml",
              "url": "~/Views/tooltip/ajax_details.cshtml"
            }
          ]
        },
        "links": [
          {
            "text": "Tooltip Content Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tooltip/content"
          }
        ]
      },
      {
        "text": "Content template",
        "url": "tooltip/template",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how  you can use a content template with Telerik jQuery-based tooltip for $FRAMEWORK."
        },
        "links": [
          {
            "text": "Tooltip Content Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tooltip/content"
          }
        ]
      },
      {
        "text": "Events",
        "url": "tooltip/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo we will show how events are triggered in Telerik Tooltip extension in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Tooltip Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tooltip/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "tooltip/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how the API functions are enabled in $FRAMEWORK Tooltip control."
        },
        "links": [
          {
            "text": "Tooltip Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/tooltip/overview"
          }
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "TreeList",
    "name": "treelist",
    "api": "web/treelist",
    "documentation": {
      "aspnet-mvc": "helpers/treelist/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1611"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/treelist"
    },
    "spriteCssClass": "treeListIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "treelist/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the basic usage and functionality of ASP.NET MVC TreeList component which represents items in a hierarchical tree structure."
        },
        "links": [
          {
            "text": "TreeList HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/overview"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "treelist/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the treelist can be bound to remote data and each level is requested asynchronously."
        },
        "links": [
          {
            "text": "TreeList Ajax Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/ajax-binding"
          }
        ]
      },
      {
        "text": "Checkbox Selection",
        "url": "treelist/checkbox-selection",
        "deferred": true,
        "title": {
          "aspnet-mvc": "Telerik UI TreeList for ASP.NET MVC - Checkbox Selection Demo"
        },
        "meta": {
          "aspnet-mvc": "Get started with the Telerik UI TreeList for ASP.NET MVC and learn how to enable the built-in checkbox column and selection persistence of the TreeList."
        },
        "description": {
          "aspnet-mvc": "<p>As of R3 2020, а checkbox based selection is provided by the TreeList. To enable this functionality you should define selectable column as shown below:</p><p>&nbsp;columns.Add().Selectable(true)</p><p>This column allows you to select TreeList rows automatically after changing the status of the checkbox to checked. A checkbox is also displayed in the column header to toggle the checked/selected state of all rows in the current page.</p>"
        },
        "links": [
          {
            "text": "TreeList Selection Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/selection"
          }
        ]
      },
      {
        "text": "Binding to OData-v4 service",
        "url": "treelist/odata",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the treelist can be bound to an OData-v4 service."
        },
        "description": {
          "kendo-ui": "<p>ASP.NET MVC TreeList component supports binding to various endpoints. This example illustrates how you can use an OData-v4 service to populate the tree. The main points in the implementation are: <br/><br/> 1. Initially requesting only the top level items(root items). In the particular case a bound function is used. <br/> 2. Requesting only the child nodes for a given node, on expand, using the <b>id</b> field value defined in the model.</p>"
        },
        "links": [
          {
            "text": "TreeList HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/overview"
          }
        ]
      },
      {
        "text": "Drag & drop",
        "url": "treelist/dragdrop",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to use drag & drop to allow users to rearrange treelist items"
        },
        "links": [
          {
            "text": "TreeList Editing by Dragging and Dropping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/editing/drag-drop-editing"
          }
        ]
      },
      {
        "text": "Editing",
        "url": "treelist/editing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how editing works within the ASP.NET MVC TreeList component which represents items in a hierarchical tree structure."
        },
        "links": [
          {
            "text": "TreeList Editing Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/editing/overview"
          }
        ]
      },
      {
        "text": "Filter row",
        "url": "treelist/filter-row",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to use row filters in treelist."
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how to enable filter row. In the header set the treelist's <strong>Filterable</strong>-&gt;<strong>Mode</strong> property to <strong>Row</strong>: <pre>.Filterable(ftb =&gt; ftb.Mode('row'))</pre>Therefore, based on the data type of the underlying columns data, the Kendo UI TreeList will render Kendo UI TextBox/es for string values, Kendo UI NumericTextBox/es or Kendo UI DatePicker/s for filtering in the column headers.</p> <p>Additionally, a default filter operator could be specified and applied when the user enters a value in the filter textbox and presses <span class=\"key-button\">Tab</span> or <span class=\"key-button\">Enter</span>. This can be done using the <code>.Filterable(ftb => ftb.Cell(cell => cell.Operator(\"contains\")</code> method of the corresponding column. An example could be found in the LastName column.</p><br><p>More about <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/overview\">Telerik TreeList for MVC</a></p>"
        }
      },
      {
        "text": "InCell editing",
        "url": "treelist/editing-incell",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the records in KendoTreeList can be easily modified with batch editing."
        },
        "description": {
          "aspnet-mvc": "<p>A common scenario is to switch TreeList cells in edit mode by simply clicking them, update the data on the client and then process all changes on the server in a single batch update.<br /> <br /> This demo shows how this can be accomplished using the built-in batch create, update and destroy commands of the Telerik TreeList component.<br /> <br /> All you have to do to enable the batch data editing functionality is to:</p> <ul style=\"list-style-type: disc;\"> <li>Turn on the incell editing by setting: .Editable(editable =&gt; editable.Mode(\"incell\")</li> <li>Enable the Add New Record, Save Changes and Discard Changes buttons on the toolbar by setting: .ToolBar(toolbar =&gt; { toolbar.<strong>Create</strong>(); toolbar.<strong>Save</strong>(); }</li> <li>Invoke the CRUD action methods in the DataSource</li> </ul> <p>Once the cells are edited you have the option to process the changes or discard them. Click on a cell/row to place it in edit mode. Use the Save changes or Cancel changes buttons to process/discard all changes at once.</p> <p>For more details about the batch editing capabilities of the MVC TreeList see the help article <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/treelist/editing\" target=\"_blank\">here</a>.</p>"
        },
        "links": [
          {
            "text": "TreeList Incell Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/editing/batch"
          }
        ]
      },
      {
        "text": "Popup editing",
        "url": "treelist/editing-popup",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how the records in KendoTreeList can be easily modified in a pop-up dialog."
        },
        "links": [
          {
            "text": "TreeList Popup Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/editing/popup"
          }
        ]
      },
      {
        "text": "Search Panel",
        "url": "treelist/search-panel",
        "deferred": true,
        "meta": {
          "kendo-ui": "Get started with the ASP.NET MVC TreeList supporting searching inside the treelist data."
        },
        "description": {
          "kendo-ui": "<p>There are situations when you would like to enable the end user to search inside the treelist cells for a given value. The ASP.NET MVC TreeList supports such searching by adding a <strong>search</strong> command inside the treelist toolbar. Additionally one can configure the fields included in the search using the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/treelist#configuration-search\" target=\"_blank\">search</a> option."
        },
        "links": [
          {
            "text": "TreeList Search Panel Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/search-panel"
          }
        ]
      },
      {
        "text": "Row template",
        "url": "treelist/rowtemplate",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Get started with the jQuery TreeList by Kendo MVC allowing flexible customization of its rows in terms of layout and appearance by exposing row template feature."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI TreeList for ASP.NET MVC allows flexible customization of its rows in terms of layout and appearance by exposing the row template feature for this purpose.</p> <p>In this example we present how you can specify your own custom layout for the rows in the treeList using images and binding the values of the properties in the model from its underlying data source. The templates are defined via script tags with ids associated with rendered HTML table row elements in the TreeList. Note that the row and altrow templates are evaluated   by calling the <strong>kendo.template </strong>method and assigning the returned value to the <strong>row template </strong>and <strong>alternating row template </strong>attributes of the treeList instance. </p>"
        }
      },
      {
        "text": "Column resizing",
        "url": "treelist/column-resizing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you can see how simple it is to resize columns in the Telerik $FRAMEWORK TreeList."
        },
        "links": [
          {
            "text": "TreeList Resizing of Columns Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/columns/resizing"
          }
        ]
      },
      {
        "text": "Column reordering",
        "url": "treelist/column-reordering",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you can see how simple it is to reorder columns in Telerik $FRAMEWORK TreeList."
        },
        "links": [
          {
            "text": "TreeList Reordering of Columns Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/columns/reordering"
          }
        ]
      },
      {
        "text": "Column menu",
        "url": "treelist/column-menu",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This Telerik example shows column menu functionality in the TreeList extension for $FRAMEWORK."
        },
        "links": [
          {
            "text": "TreeList Column Menu Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/columns/column-menu"
          }
        ]
      },
      {
        "text": "Multi-column headers",
        "url": "treelist/multicolumnheaders",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This Telerik example shows Multi-column headers functionality in the TreeList extension for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK TreeList extension supports multi-column headers by specifying column groups which incorporate inner-column structures. In this demo, you can see the Personal Info and Location columns have nested columns, defined trough the Columns -&gt; Group -&gt; Columns scheme. In addition, operations like sorting and filtering are supported on each column level, regardless of the chosen multi-header pattern.</p>"
        },
        "links": [
          {
            "text": "TreeList Multi-Column Headers Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/columns/multicolumn-headers"
          }
        ]
      },
      {
        "text": "Frozen columns",
        "url": "treelist/frozen-columns",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with the demo for frozen columns functionality of Telerik $FRAMEWORK TreeList."
        },
        "links": [
          {
            "text": "TreeList Locked Columns Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/columns/locked-columns"
          }
        ]
      },
      {
        "text": "Aggregates",
        "url": "treelist/aggregates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the aggregate option for KendoTreeList. Use demo source code to enable the TreeList to calculate aggregated values."
        },
        "links": [
          {
            "text": "TreeList Aggregates Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/aggregates"
          }
        ]
      },
      {
        "text": "Persist state",
        "url": "treelist/persist-state",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how setOptions and getOptions methods can manipulate the state of $FRAMEWORK TreeList component."
        },
        "description": {
          "aspnet-mvc": "<p>A common scenario is to save the user's preferences and settings when interacting with your application. These preferences should be restored once the user logs back in at any point in the future.</p><p>The Telerik for $FRAMEWORK TreeList enables you to save the applied user preferences by using the <strong>getOptions</strong> method and then restore them using the <strong>setOptions</strong> method. These methods allow you to serialize TreeList's current state when needed and recover it later on.</p><p>In this particular example, we use the localStorage of the browser to save and load the TreeList widget's settings.</p><p>Further information on the <strong>setOptions</strong> and <strong>getOptions</strong> methods is available <a target=\"_blank\" href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/treelist/methods/setoptions\">in the TreeList Client-side API section</a>.</p>"
        },
        "links": [
          {
            "text": "TreeList State Persistence Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/persist-state"
          }
        ]
      },
      {
        "text": "Export to Excel",
        "url": "treelist/excel-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export ASP.NET MVC TreeList as Microsoft Excel file"
        },
        "links": [
          {
            "text": "TreeList Excel Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/export/excel-export"
          }
        ]
      },
      {
        "text": "Export to PDF",
        "url": "treelist/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Export ASP.NET MVC TreeList as PDF file"
        },
        "links": [
          {
            "text": "TreeList PDF Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/export/pdf-export"
          }
        ]
      },
      {
        "text": "Events",
        "url": "treelist/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates different events which are available in KendoTreeList widget and the code explains how you can use them for  your project."
        },
        "links": [
          {
            "text": "TreeList Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/overview#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "treelist/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how API Functions can manipulate the contents and behavior of ASP.NET MVC TreeList component."
        },
        "links": [
          {
            "text": "TreeList Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/treelist"
          }
        ]
      },
      {
        "text": "Localization",
        "url": "treelist/localization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how localization works with the ASP.NET MVC TreeList component which represents items in a hierarchical tree structure."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK TreeList supports localization for the texts in its UI elements. The localization messages can be retrieved from resource files available on the server.</p>Furter information on using resource files is available in this article: <br><br><a href='https://docs.telerik.com/aspnet-mvc/getting-started/localization'>Localization</a>"
        },
        "packages": [
          "!php",
          "!jsp",
          "!aspnet-core"
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "treelist/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this Telerik $FRAMEWORK TreeList demo to learn how different keyboard combinations could be used to navigate in the component."
        },
        "links": [
          {
            "text": "TreeList Keyboard Navigation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/accessibility/keyboard-navigation"
          }
        ]
      },
      {
        "text": "Client-side Paging",
        "url": "treelist/client-side-paging",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how Kendo UI TreeList supports client-side paging."
        },
        "description": {
          "aspnet-mvc": "<p>The Kendo UI treelist supports client-side paging for large sets of data. To enable the client-side paging functionality configure the <b>Pageable property</b>.</p>"
        },
        "links": [
          {
            "text": "TreeList Paging Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/treelist/client-side-paging"
          }
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "TreeView",
    "name": "treeview",
    "updated": true,
    "api": "web/treeview",
    "documentation": {
      "aspnet-mvc": "helpers/treeview/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1633"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/treeview"
    },
    "spriteCssClass": "treeViewIcon",
    "items": [
      {
        "text": "Overview",
        "url": "treeview/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the main features of $FRAMEWORK Tree component which represents items in a hierarchical tree structure."
        },
        "description": {
          "aspnet-mvc": "The Telerik UI for $FRAMEWORK TreeView component represents hierarchical data in a tree structure. It allows users to perform single or multiple selection of items, drag and drop of elements within the TreeView and across $FRAMEWORK TreeView components. It comes with built-in checkbox support, keyboard navigation, RTL support, accessibility and provides templates for complete customization of each node. You can bind the TreeView to various data sources and take advantage of its load on demand feature, and request data only when a node is expanded."
        },
        "links": [
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          }
        ]
      },
      {
        "text": "Basic usage",
        "url": "treeview/basic-usage",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the basic usage and functionality of $FRAMEWORK Tree component which represents items in a hierarchical tree structure."
        },
        "packages": [
          "!php",
          "!jsp"
        ],
        "links": [
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          }
        ]
      },
      {
        "text": "Drag & drop",
        "url": "treeview/dragdrop",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to drag and drop items in $FRAMEWORK TreeView. Use the demo source code and play with the demo."
        },
        "group": "Functionality",
        "links": [
          {
            "text": "TreeView Dragging and Dropping Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/drag-drop"
          }
        ]
      },
      {
        "text": "Animation effects",
        "url": "treeview/animation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how you can add animation effects and expand animation by setting the specific options for $FRAMEWORK TreeView component."
        },
        "links": [
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          }
        ]
      },
      {
        "text": "Images",
        "url": "treeview/images",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can add images to your $FRAMEWORK TreeView control, as well as implement TreeView with sprites in your website or project."
        },
        "links": [
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          }
        ]
      },
      {
        "text": "Checkboxes",
        "url": "treeview/checkboxes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample illustrates how you can easily create tree nodes with checkboxes in $FRAMEWORK Treeview by simply setting the child item of the checkboxes to true."
        },
        "links": [
          {
            "text": "TreeView Checkboxes Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/checkboxes"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "treeview/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how tree nodes in $FRAMEWORK TreeView component can be further customized by using templates."
        },
        "links": [
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "treeview/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how items in the tree are displayed with the default settings of $FRAMEWORK TreeView and how the component can be easily bound to local data."
        },
        "group": "Data Binding",
        "links": [
          {
            "text": "TreeView Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "treeview/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the $FRAMEWORK hierarchical tree can be bound to remote data and the items in the tree populated from an external source."
        },
        "links": [
          {
            "text": "TreeView Binding Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/binding"
          }
        ]
      },
      {
        "text": "Appearance",
        "url": "treeview/appearance",
        "new": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the modern rendering and styling capabilities of Telerik TreeView for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p><b>Note:</b> The styling options showcased in this demo support only the default values when using the LESS themes. You can find more information about this topic in the <a href='https://docs.telerik.com/aspnet-mvc/styles-and-layout/less-themes-migration'>LESS Themes Migration</a> article. As the introduction of the styling options is an ongoing effort, there could be minor changes and touch-ups added to the options in the future.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "TreeView HtmlHelper Appearance Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/appearance"
          }
        ]
      },
      {
        "text": "Events",
        "url": "treeview/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This sample shows built-in events in $FRAMEWORK tree control. Events are triggered when the user selects, collapses, expands, adds or removes an item on the list."
        },
        "group": "API",
        "links": [
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "treeview/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the specific API functions, as well as DataSource interaction options, which control the behaviour of $FRAMEWORK TreeView."
        },
        "links": [
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          },
          {
            "text": "TreeView Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/treeview"
          },
          {
            "text": "TreeView Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/treeview"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "treeview/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Get familiar with the RTL support in $FRAMEWORK TreeView component. Look at the example and use the source code to play with the demo."
        },
        "group": "Accessibility and Internationalization",
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "TreeView Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/treeview/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "treeview/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at the source code and play with the demo to find out more about the keyboard support feature in $FRAMEWORK TreeView."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Wizard",
    "name": "wizard",
    "api": "web/wizard",
    "documentation": {
      "aspnet-mvc": "html-helpers/navigation/wizard/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1716"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/wizard"
    },
    "spriteCssClass": "wizardIcon",
    "items": [
      {
        "text": "Overview",
        "url": "wizard/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Look at this demo to learn how to use the $FRAMEWORK Wizard HtmlHelper extension for the ASP.NET MVC Wizard component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI for $FRAMEWORK Wizard lets you easily create multi-step processes and guide step-by-step users in applications.</p><p>In this demo, you can see the implementation of a simple registration process using the Wizard component, that requests user input in detail in three steps: Registration Info, Personal, and Payment Details. Breaking up a process into stages will simplify user input tasks so that they will need to manage just one form at a time. At each step, you have a pre-configured built-in validation of the input data and a progress indicator showing the number of steps left towards achieving their final goal for the process.</p><p><h3>Key Features of Wizard component:</h3></p><ul><li>Built-in Validation (If configured)</li><li>Integration with the Form component</li><li>Loading content using AJAX</li><li>Configuring the position of the component's stepper</li></ul><p>The Wizard component can be initialized both from a <strong>form</strong> and <strong>div</strong> DOM elements. By default, the Wizard is initialized from a <strong>div</strong> element.</p><p>To initialize the Wizard from a form element, the .Tag(“form”) configuration has to be used. If the Wizard is initialized with a Tag(“form”) configuration if the Wizard contains form definitions, the forms inside the component will be initialized from a div element. In this scenario, the ‘novalidate’ attribute should be added to the form element from which the Wizard is initialized. This can be implemented as follows:<br/><br/>    @(Html.Kendo().Wizard()<br/>         .Name(\"wizard\")<br/>        .Events(ev => ev.Done(\"onDone\"))<br/>        .Tag(\"form\")<br/>        .HtmlAttributes(new { @novalidate =\"\" })<br/>        .Steps(s =><br/>{<br/>……………………<br/>})</p><p>The ‘novalidate’ attribute is needed to prevent the duplication of the built-in form validation and the default browser validation. If a form inside the Wizard is not validated using the component’s configuration, there is no need to add the ‘novalidate’ attribute.</p> <p>You can find additional information on how to use the UI for ASP.NET MVC Wizard component in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/overview\">this section</a> of the product documentation. <a href=\"https://docs.telerik.com/aspnet-mvc/api/wizard\">Here</a> you can see the API provided by the component.</p>"
        },
        "links": [
          {
            "text": "Wizard Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/overview"
          }
        ]
      },
      {
        "text": "Form integration",
        "url": "wizard/form",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how we can integrate the Kendo UI Form widget inside the Wizard component."
        },
        "description": {
          "aspnet-mvc": "<p>This ‘Form integration’ example demonstrates how the Form component can be used inside the Wizard.  The example also shows how we can bind the Form inside the Wizard to arbitrary data.</p><p>If your scenario requires the usage of a model, you can check the Overview demo.</p> <p>You can find additional information on how to integrate the Form component in the UI for ASP.NET MVC Wizard component in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/form-integration\">this section</a> of the product documentation. <a href=\"https://docs.telerik.com/aspnet-mvc/api/wizard\">Here</a> you can see the API provided by the component.</p>"
        },
        "links": [
          {
            "text": "Wizard Form Integration Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/form-integration"
          }
        ]
      },
      {
        "text": "Loading content with AJAX",
        "url": "wizard/ajax",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to load content with AJAX in Telerik Wizard for $FRAMEWORK"
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how the Wizard's content can be loaded using AJAX.</p><p>You can find additional information on how to load content with AJAX in the UI for ASP.NET MVC Wizard component in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/content\">this section</a> of the product documentation. <a href=\"https://docs.telerik.com/aspnet-mvc/api/wizard\">Here</a> you can see the API provided by the component.</p>"
        },
        "links": [
          {
            "text": "Wizard Content Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/content"
          }
        ]
      },
      {
        "text": "Content position",
        "url": "wizard/content-position",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the Wizard steps can be positioned relative to its content."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how the Wizard's steps content can be positioned around the component’s navigation (Stepper). </p><p>You can find additional information on how to use the ContentPosition configuration in <a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/layout\">this section</a> of the product documentation. <a href=\"https://docs.telerik.com/aspnet-mvc/api/wizard\">Here</a> you can see the API provided by the component.</p>"
        },
        "links": [
          {
            "text": "Wizard Layout Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/layout"
          }
        ]
      },
      {
        "text": "Events",
        "url": "wizard/events",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This sample shows how to access and use the events of the $FRAMEWORK Wizard component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik UI for $FRAMEWORK Wizard component exposes rich API and events which provide easy configuration or extension points for custom functionality on top of the built-in features.</p><p>The Telerik UI for $FRAMEWORK Wizard triggers events for different user interactions like – Select, Reset, Activate, Done, etc. </p>"
        },
        "links": [
          {
            "text": "Wizard Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/navigation/wizard/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "wizard/keyboard-navigation",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK demo shows how end users of your app can intuitively use keyboard navigation in $FRAMEWORK Wizard."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Upload",
    "name": "upload",
    "api": "web/upload",
    "documentation": {
      "aspnet-mvc": "helpers/upload/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1656"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/upload"
    },
    "spriteCssClass": "uploadIcon",
    "items": [
      {
        "text": "Overview",
        "url": "upload/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Upload extension demo shows the async upload functionality of $FRAMEWORK Upload control along with chunk upload, file validation and custom dropzone functionalities enabled."
        }
      },
      {
        "text": "Basic Usage",
        "url": "upload/basicusage",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Upload extension demo illustrates the multi-file selection capability of the control."
        }
      },
      {
        "text": "Asynchronous Upload",
        "url": "upload/async",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the async upload functionality of $FRAMEWORK Upload control."
        },
        "links": [
          {
            "text": "Upload Mode of Operation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/upload/modes-of-operation"
          }
        ]
      },
      {
        "text": "Chunk Upload",
        "url": "upload/chunkupload",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the chunk upload functionality of $FRAMEWORK Upload control."
        },
        "links": [
          {
            "text": "Upload Chunk Upload Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/upload/chunk-upload"
          }
        ]
      },
      {
        "text": "Custom Drop Zone",
        "url": "upload/customdropzone",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the custom drop zone functionality of $FRAMEWORK Upload control."
        },
        "links": [
          {
            "text": "Upload Dragging and Dropping of Files Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/upload/drag-and-drop"
          }
        ]
      },
      {
        "text": "Directory Upload",
        "url": "upload/directoryupload",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the directory upload functionality of $FRAMEWORK Upload control."
        },
        "description": {
          "aspnet-mvc": "The example shows how directories can be selected and dropped over the control. This feature is only supported by browsers that support HTML5 directory and DataTransferItem features."
        }
      },
      {
        "text": "Validation",
        "url": "upload/validation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the validation functionality of $FRAMEWORK Upload control."
        },
        "links": [
          {
            "text": "Upload Validation Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/upload/validation"
          }
        ]
      },
      {
        "text": "Events",
        "url": "upload/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this sample you will see how to handle events, triggered by Kendo UI jQuery-based Upload widget, used in $FRAMEWORK."
        },
        "links": [
          {
            "text": "Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "upload/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows API Functions of $FRAMEWORK Upload component. Try the sample to see how to enable, disable the upload option and toggle the enabled state."
        },
        "links": [
          {
            "text": "Upload Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/editors/upload/overview"
          },
          {
            "text": "Upload Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/upload"
          },
          {
            "text": "Upload Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/upload"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "upload/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example you will see templates options for Telerik $FRAMEWORK Upload extension."
        }
      },
      {
        "text": "Initial Files",
        "url": "upload/initialfiles",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to render initial files with the $FRAMEWORK Upload."
        },
        "description": {
          "aspnet-mvc": "This example show how to persist the successfully uploaded files in the list and display them again when the page is reloaded. Please upload some files and refresh the page."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "RTL support",
        "url": "upload/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the right to left support in Telerik $FRAMEWORK Upload HtmlHelper extension."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "upload/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the keyboard navigation support of the Telerik $FRAMEWORK Upload HtmlHelper extension."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Window",
    "name": "window",
    "api": "web/window",
    "documentation": {
      "aspnet-mvc": "helpers/window/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1700"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/window"
    },
    "spriteCssClass": "windowIcon",
    "items": [
      {
        "text": "Overview",
        "url": "window/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates an overview of $FRAMEWORK Window contorl one of the components which you can use to enhance the interaction in your web app."
        },
        "links": [
          {
            "text": "Window Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/overview"
          }
        ]
      },
      {
        "text": "Basic usage",
        "url": "window/basicusage",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage of $FRAMEWORK Window contorl one of the components which you can use to enhance the interaction in your web app."
        },
        "links": [
          {
            "text": "Window Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/overview"
          }
        ]
      },
      {
        "text": "Constrain movement",
        "url": "window/constrain-movement",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to constrain the movement of $FRAMEWORK Window."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik Window for $FRAMEWORK allows you to constrain its movement inside a specific container element. This functionality is enabled through the <a class=\"hyperlink\" href=\"https://docs.telerik.com/aspnet-mvc/api/Kendo.Mvc.UI.Fluent/WindowDraggableSettingsBuilder#methods-Containment(System.String)\">.Draggable(settings => settings.Containment()</a> configuration option.</p><p style=\"padding-bottom: 0;\">The contaiment options has the following specifics:</p><ul><li>Overrides the <a class=\"hyperlink\" href=\"https://docs.telerik.com/aspnet-mvc/api/Kendo.Mvc.UI.Fluent/WindowBuilder#methods-AppendTo(System.String)\">AppendTo</a> setting.</li><li>The contaiment elemen should have CSS position set(relative, absolute or fixed).</li></ul>"
        },
        "links": [
          {
            "text": "Window Constrain movement Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/constrain"
          }
        ]
      },
      {
        "text": "Customizing actions",
        "url": "window/actions",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Window sample illustrates how client-side actions can be further customized in order to bring interactivity in your web app to a higher level."
        },
        "links": [
          {
            "text": "Window Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/overview"
          }
        ]
      },
      {
        "text": "Loading content with AJAX",
        "url": "window/ajax",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how content in $FRAMEWORK window control can be loaded, using AJAX."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Window Loading content Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/loading-content"
          }
        ]
      },
      {
        "text": "Animation effects",
        "url": "window/animation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample illustrates the animation effects in $FRAMEWORK window control. Just play with animation settings to change the interactivity of the control."
        },
        "links": [
          {
            "text": "Window Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "window/events",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to fire events in $FRAMEWORK window control. Refresh, activate, open, dragend, dragstart are some of the events which you can trigger."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Window Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/overview#events"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "window/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how you can use the API of $FRAMEWORK Window control to refresh the content of the window, open and close it."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Window Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/overview"
          },
          {
            "text": "Window Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/window"
          },
          {
            "text": "Window Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/window"
          }
        ]
      },
      {
        "text": "RTL support",
        "url": "window/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Window control supports right-to-left direction of the window to provide best end-user experience."
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          },
          {
            "text": "Window Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/layout/window/overview"
          }
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "window/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The sample demonstrates how the keyboard navigation feature is integrated in the powerful $FRAMEWORK Window control."
        }
      }
    ],
    "category": "Layout"
  },
  {
    "text": "WordsProcessing",
    "name": "wordsprocessing",
    "api": "https://docs.telerik.com/devtools/document-processing/libraries/radwordsprocessing/overview",
    "category": "Document Processing",
    "spriteCssClass": "wordprocessingIcon",
    "packages": [
      "aspnet-mvc",
      "aspnet-core"
    ],
    "items": [
      {
        "text": "Basic usage",
        "url": "wordsprocessing/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadWordsProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "With <strong>WordsProcessing</strong> you can virtually effortlessly convert documents from one to another file format among the supported DOCX, RTF, HTML and TXT."
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Generate Documents",
        "url": "wordsprocessing/generate-documents",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how to generate documents using the Telerik WordsProcessing in MVC applications."
        },
        "description": {
          "aspnet-mvc": "Telerik WordsProcessing provides easy to use API which allows code-only generation of documents. The current example demonstrates how you can generate a document from scratch and export it to one of the supported formats - DOCX, RTF, HTML and TXT."
        },
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Mail Merge",
        "url": "wordsprocessing/mail-merge",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how to generate documents using the Telerik RadWordsProcessing in MVC applications."
        },
        "description": {
          "aspnet-mvc": "This example illustrates Mail Merge functionality for WordsProcessing. You can export the document to any of the formats listed in the dropdown menu. The document will contain a separate email for every selected recepient."
        },
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "PDF Export",
        "url": "wordsprocessing/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadWordsProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "This example demonstrates export of documents to PDF using WordsProcessing. You can upload Word(docx), RTF, HTML or plain text document and convert it to PDF."
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Replace",
        "url": "wordsprocessing/replace",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadWordsProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "This example illustrates the Replace functionality in WordsProcessing. You can import a document of your choice, replace or highlight text in it, using regular expressions or strings and then export the document to view the result. To see the full list of supported elements check the <a hred='https://docs.telerik.com/devtools/document-processing/libraries/radwordsprocessing/model/model#document-elements'>Elements article</a>"
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Grid Integration",
        "url": "wordsprocessing/grid-integration",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadWordsProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "This example illustrates how a RadFlowDocument could be created based on the state of a ASP.NET MVC MVC Grid. You can visualize, filter, sort or group data in the Grid and generate an HTML, DOCX, RTF or TXT document, based on the Grid configuration."
        },
        "packages": [
          "aspnet-mvc"
        ]
      }
    ],
    "documentation": {
      "aspnet-mvc": "https://docs.telerik.com/devtools/document-processing/libraries/radwordsprocessing/overview"
    }
  },
  {
    "text": "Zip Library",
    "name": "ziplibrary",
    "packages": [
      "aspnet-mvc",
      "aspnet-core"
    ],
    "api": "https://docs.telerik.com/devtools/document-processing/libraries/radziplibrary/overview",
    "category": "Document Processing",
    "spriteCssClass": "ziplibraryIcon",
    "documentation": {
      "aspnet-mvc": "https://docs.telerik.com/devtools/document-processing/libraries/radziplibrary/overview"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "ziplibrary/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik ZipLibrary can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "The example demonstrates how to read all the data from a ZIP file simultaneously and display the information about the compressed files in UI for ASP.NET MVC Grid - name, original and compressed size."
        }
      },
      {
        "text": "Compress Stream",
        "url": "ziplibrary/compress-stream",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how to generate documents using the Telerik ZipLibrary in MVC applications."
        },
        "description": {
          "aspnet-mvc": "The example demonstrates how to easily compress streams with the preferred compression level."
        }
      }
    ]
  },
  {
    "text": "DataSource",
    "name": "datasource",
    "api": "framework/datasource",
    "spriteCssClass": "dataSourceIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "datasource/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the core functionality of ASP.NET MVC DataSource component in ASP.NET MVC Web framework."
        },
        "description": {
          "aspnet-mvc": "This demo illustrates the core functionality of ASP.NET MVC DataSource component in ASP.NET MVC Web framework."
        }
      },
      {
        "text": "Shared DataSource",
        "url": "datasource/shared-datasource",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates a shared DataSource which can be created to enable multiple UI components to bind to the same data collection."
        },
        "requiresServer": "true"
      }
    ],
    "category": "Framework"
  },
  {
    "category": "PDF",
    "text": "PDF Export",
    "name": "export",
    "spriteCssClass": "drawingIcon",
    "items": [
      {
        "text": "Document Export",
        "url": "pdf-export/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to export HTML elements and Drawing surfaces to PDF, PNG Images or SVG and save them directly in the browser."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Drawing DOM Elements Documentation",
            "url": "https://docs.telerik.com/kendo-ui/framework/drawing/dom-elements/overview"
          }
        ]
      }
    ]
  },
  {
    "category": "PDF",
    "text": "PDFViewer",
    "name": "pdfviewer",
    "api": "web/pdfviewer",
    "pro": true,
    "documentation": {
      "aspnet-mvc": "html-helpers/pdf/pdfviewer/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1125"
    },
    "spriteCssClass": "pdfviewerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "pdfviewer/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use the PDFViewer."
        },
        "links": [
          {
            "text": "PDFViewer Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/pdf/pdfviewer/overview"
          }
        ]
      },
      {
        "text": "DPL Processing",
        "url": "pdfviewer/dpl-processing",
        "packages": [
          "!online",
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use DPL Processing in the PDFViewer."
        },
        "description": {
          "aspnet-mvc": "<p>DPL Processing is BETA version and has the following limitations: </p> <ul> <li>Clipping elements and Gradients are currently not supported.</li> <li>SVG or encoded images in other formats might not render correctly.</li> </ul>"
        },
        "links": [
          {
            "text": "PDFViewer DPL Processing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/pdf/pdfviewer/dpl-processing"
          }
        ]
      },
      {
        "text": "Events",
        "url": "pdfviewer/events",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to handle the PDFViewer events."
        },
        "links": [
          {
            "text": "PDFViewer Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/pdf/pdfviewer/overview"
          },
          {
            "text": "Handling Telerik UI for ASP.NET Core Widget Events",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/fundamentals#event-handling"
          }
        ]
      },
      {
        "text": "API",
        "url": "pdfviewer/api",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use the PDFViewer API."
        },
        "links": [
          {
            "text": "PDFViewer Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/pdf/pdfviewer/overview"
          },
          {
            "text": "PDFViewer Server-side API",
            "url": "https://docs.telerik.com/aspnet-mvc/api/pdfviewer"
          },
          {
            "text": "PDFViewer Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/ui/pdfviewer"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "pdfviewer/keyboard-navigation",
        "packages": [
          "!jsp",
          "!php"
        ],
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to navigate the PDFViewer with the keyboard."
        }
      }
    ]
  },
  {
    "text": "PdfProcessing",
    "name": "pdfprocessing",
    "api": "https://docs.telerik.com/devtools/document-processing/libraries/radpdfprocessing/overview",
    "category": "Document Processing",
    "spriteCssClass": "pdfIcon",
    "packages": [
      "aspnet-mvc",
      "aspnet-core"
    ],
    "items": [
      {
        "text": "Basic usage",
        "url": "pdfprocessing/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadPdfProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "Telerik <strong>RadPdfProcessing</strong> provides easy to use API which allows code-only generation of PDF documents. This example demonstrates how to create a document containing images, text and shapes and export it to PDF."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "CreatePdfDocument.cs",
              "url": "~/Helpers/CreatePdfDocument.cs"
            }
          ]
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Bar Chart Export",
        "url": "pdfprocessing/bar-chart-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadPdfProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "Telerik <strong>RadPdfProcessing</strong> provides easy to use API which allows code-only generation of PDF documents. This example demonstrates how to create a document containing Bar Chart, Data Table and export it to PDF."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "CreatePdfWithBarChart.cs",
              "url": "~/Helpers/CreatePdfWithBarChart.cs"
            }
          ]
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Read And Write Form Fields",
        "url": "pdfprocessing/read-write-form-fields",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadPdfProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "Telerik <strong>RadPdfProcessing</strong> provides easy to use API which allows code-only generation of PDF documents. This example demonstrates how to use a PDF from the server, modify its fields based on user input and export it to PDF on the client."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "ReadWriteFormFields.cs",
              "url": "~/Controllers/PdfProcessing/ReadWriteFormFields.cs"
            }
          ]
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Sign Pdf Document",
        "url": "pdfprocessing/sign-pdf-document",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadPdfProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "Telerik <strong>RadPdfProcessing</strong> provides easy to use API which allows code-only generation of PDF documents. This example demonstrates how to sign a PDF document."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "SignDocument.cs",
              "url": "~/Controllers/PdfProcessing/SignDocument.cs"
            }
          ]
        },
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Check PDF Signature",
        "url": "pdfprocessing/check-pdf-signature",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadPdfProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "Telerik <strong>RadPdfProcessing</strong> provides easy to use API which allows code-only generation of PDF documents. This example demonstrates how to check a signature of a PDF document. We set the certificate validation check for demonstration purposes only. This flag ignores a warning regarding certificate authority which is missing in the Windows trusted root certificates. The result of this setting is a valid or unknown validation status. In real scenario this flag should most probably not be used. The validation process should be based only on Windows trusted root certificates."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "CheckSignature.cs",
              "url": "~/Controllers/PdfProcessing/CheckSignature.cs"
            }
          ]
        },
        "packages": [
          "aspnet-mvc"
        ]
      },
      {
        "text": "Merge, Split or Add Content",
        "url": "pdfprocessing/merge-split-add-content",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the Telerik RadPdfProcessing can be integrated in MVC applications."
        },
        "description": {
          "aspnet-mvc": "Telerik <strong>RadPdfProcessing</strong> provides easy to use API which allows code-only generation of PDF documents. This example demonstrates how to merge, split or add content to PDF document."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "MergeSplitAddContent.cs",
              "url": "~/Controllers/PdfProcessing/MergeSplitAddContent.cs"
            }
          ]
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      }
    ],
    "documentation": {
      "aspnet-mvc": "https://docs.telerik.com/devtools/document-processing/libraries/radpdfprocessing/overview"
    }
  },
  {
    "text": "Globalization",
    "name": "globalization",
    "documentation": {
      "aspnet-mvc": "getting-started/globalization"
    },
    "packages": [
      "!aspnet-core"
    ],
    "spriteCssClass": "globalizationIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "globalization/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This is an example of globalization which is supported in ASP.NET MVC Web framework."
        }
      }
    ],
    "category": "Framework"
  },
  {
    "text": "Validator",
    "name": "validator",
    "api": "web/validator",
    "documentation": {
      "aspnet-mvc": "getting-started/validation"
    },
    "spriteCssClass": "validatorIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "validator/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the core functionality of ASP.NET MVC Validator component in ASP.NET MVC Web framework."
        },
        "packages": [
          "!jsp",
          "!php"
        ],
        "links": [
          {
            "text": "Validator Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/getting-started/helper-basics/validation"
          }
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "packages": [
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "text": "Styling",
    "name": "styling",
    "spriteCssClass": "stylingIcon",
    "items": [
      {
        "text": "Forms",
        "url": "styling/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how jQuery and HTML5-based forms can be styled with ASP.NET MVC Web."
        },
        "packages": [
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Interactivity & UX",
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1440"
    }
  },
  {
    "text": "Chat",
    "name": "chat",
    "component": "chat",
    "api": "web/chat",
    "pro": "true",
    "documentation": {
      "aspnet-mvc": "helpers/chat/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=267"
    },
    "spriteCssClass": "chatIcon",
    "items": [
      {
        "text": "Travel",
        "url": "chat/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How Telerik $FRAMEWORK Chat component works, view demo source code of Telerik $FRAMEWORK Chat."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Chat component allows for integration with any bot framework, due to its simplicity, flexible API and customizable templates.</p><p>This demo demonstrates how the component can be connected to a chat bot created in Microsoft's <a href=\"https://dev.botframework.com\">Bot Framework</a>, using the <a href=\"https://github.com/Microsoft/BotFramework-DirectLineJS\">DirectLineJS</a> client library. The sample shows off out of the box features of the Chat component, such as the hero cards and suggested actions, as well as the ability to define custom components, which let you use javascript to render any content. In this particular case we use the <a href=\"https://github.com/Microsoft/AdaptiveCards\">AdaptiveCards</a> client API to render the adaptive cards returned by the service.</p>"
        },
        "links": [
          {
            "text": "Chat Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/conversational-ui/chat/overview"
          }
        ]
      },
      {
        "text": "Healthcare",
        "url": "chat/healthcare",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How Telerik $FRAMEWORK Chat component works, view demo source code of Telerik $FRAMEWORK Chat."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Chat component allows for integration with any bot framework, due to its simplicity, flexible API and customizable templates.</p><p>This demo demonstrates how the component can be connected to a chat bot created in Microsoft's <a href=\"https://dev.botframework.com\">Bot Framework</a>, using the <a href=\"https://github.com/Microsoft/BotFramework-DirectLineJS\">DirectLineJS</a> client library. The sample shows off out of the box features of the Chat component, such as the hero cards and suggested actions, as well as the ability to define custom components, which let you use javascript to render any content. In this particular case we use the <a href=\"https://github.com/Microsoft/AdaptiveCards\">AdaptiveCards</a> client API to render the adaptive cards returned by the service.</p>"
        },
        "links": [
          {
            "text": "Chat Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/conversational-ui/chat/overview"
          }
        ]
      },
      {
        "text": "Toolbar",
        "url": "chat/toolbar",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "How Telerik $FRAMEWORK Chat component works, view demo source code of Telerik $FRAMEWORK Chat."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how you can define tools in the Chat's toolbar and incorporate other widgets/components and JavaScript logic to create various commands.</p>"
        },
        "links": [
          {
            "text": "Chat Documentation Overview",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/conversational-ui/chat/overview"
          }
        ]
      }
    ],
    "category": "Conversational UI"
  },
  {
    "text": "Chart",
    "name": "charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartIcon",
    "items": [
      {
        "text": "Overview",
        "url": "charts/index",
        "description": {
          "aspnet-mvc": "<p>The <strong>Telerik Chart for $FRAMEWORK</strong> is a powerful data visualization component, that allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The Chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC). The Chart can be bound to various data sources.</p><p>In this demo, you can see a company sales dashboard representation, built with different sets of series types: Column, Line, Funnel, Donut, Bar and Stock. </p><strong>Telerik Chart Key Features</strong><ul style=\"list-style-type: disc;\"> <li>Responsive and Adaptive HTML 5 Rendering</li><li>Control the appearance of the Chart elements by using various style options</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> <li>Integrated selection and benchmark functionalities</li><li>Multi-axis feature</li> <li>Export to PDF, export as an Image or SVG</li> <li>Accessibility and RTL Support</li> <li>Scaffolding in Visual Studio</li> </ul> <p>You can find additional information on how to use the $FRAMEWORK Chart in <a href=\"https://www.telerik.com/aspnet-mvc/charts\">this section</a> of the product documentation.</p>"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo for ASP.NET MVC jQuery-powered Chart in $FRAMEWORK you will see all basic functionalities of the extension."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "IndexController.cs",
              "url": "~/Controllers/ChartsOverview/IndexController.cs"
            },
            {
              "name": "ChartOverviewDataRepository.cs",
              "url": "~/Models/Chart/ChartOverviewDataRepository.cs"
            }
          ]
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Area Charts",
    "name": "area-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartAreaIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "area-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to use Telerik $FRAMEWORK Area Charts extension to visualize filled areas on a diagram. "
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this example, you can see how to register and configure an Aria chart, which represents the gross domestic growth of India, Haiti and of the whole World. This chart type is suitable for displaying quantitative data as continuous lines that pass through points defined by their items' values. The portion of the graph beneath the lines is filled with a particular color for each series. The different colors in an Area chart are useful for emphasizing changes in values from several sets of similar data. <br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Stacked area",
        "url": "area-charts/stacked-area",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Learn how to visualize series that should be stacked in an $FRAMEWORK chart."
        },
        "description": {
          "aspnet-mvc": "<p>By default, the MVC Area Chart renders its series on top of one another. You have the ability to stack them atop one another instead, so that the data values at each x-value are summed. In an area chart, the value for each series will always be stacked relative to the preceding one.</p> <p>You can enable the stack feature through the SeriesDefaults -&gt; Area -&gt; Stack(true) setting.</p> <p>For more information inspect the <a href=\"https://docs.telerik.com/aspnet-mvc/api/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        },
        "group": "Area Chart Types",
        "links": [
          {
            "text": "Configuring Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/area-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "100% Stacked area",
        "url": "area-charts/stacked100-area",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Learn how to visualize series that should be stacked to 100% in an $FRAMEWORK chart."
        },
        "description": {
          "aspnet-mvc": "<p>The Area chart type supports 100% stacking, where the stacked series value are rescaled such that they add up to 100%.</p> <p>You can enable the 100% stack feature through the SeriesDefaults -&gt; Area -&gt; Stack(ChartStackType.Stack100) setting.</p> <p>For more information inspect the <a href=\"https://docs.telerik.com/aspnet-mvc/api/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        },
        "links": [
          {
            "text": "Configuring Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/area-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "Stepped Area",
        "url": "area-charts/step-area",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we illustrate how stepped area can be configured for Telerik Area charts for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Stepped Area chart is a form of area chart where each data point from the series is connected with vertical and horizontal lines to form a step-like progression. This type of area visualization is useful when you want to highlight the increase or decrease in values over time.</p> <p>You can configure a stepped area chart through the Series -&gt; Area -&gt; Line -&gt; Style(ChartLineStyle.<strong>Step</strong>) settings of the MVC Chart.</p>"
        },
        "links": [
          {
            "text": "Configuring Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/area-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "Smooth Area",
        "url": "area-charts/smooth-area",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure smooth line (spline) style for the $FRAMEWORK Area Chart."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to configure smooth line (spline) style for the Telerik MVC Area Chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth line area chart through the Series -&gt; Area -&gt; Line -&gt; Style(ChartAreaStyle.<strong>Smooth</strong>) settings of the $FRAMEWORK Chart.</p>"
        },
        "links": [
          {
            "text": "Configuring Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/area-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "Date axis",
        "url": "area-charts/date-axis",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can set specific base date units in your $FRAMEWORK Area Chart to help you visualize a seasonal trend in your app."
        },
        "description": {
          "aspnet-mvc": "<p>You can scale the date axis of your $FRAMEWORK Area Chart to get a better visualization of the seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the CategoryAxis.BaseUnit property, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the Series.Aggregate property, which takes max, min, sum, avg and count.</li> </ul>"
        },
        "group": "Functionality",
        "links": [
          {
            "text": "Configuring Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/area-charts#configuring-the-axes"
          }
        ]
      },
      {
        "text": "Logarithmic axis",
        "url": "area-charts/logarithmic-axis",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can use a logarithmic axis for the $FRAMEWORK Area Chart."
        },
        "description": {
          "aspnet-mvc": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the $FRAMEWORK Area Chart by setting the ValueAxis -&gt; Logarithmic() method. Тhe base of the logarithmic axis is defined by the interval between the major divisions, controlled by the МajorUnit property.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Configuring Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/area-charts#configuring-the-axes"
          }
        ]
      },
      {
        "text": "Multi-axis",
        "url": "area-charts/multiple-axes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Leverage the best charting performance and visualize data on multiple axis with $FRAMEWORK Area Charts to provide solid business reports for end users."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Area chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>miles</em>, <em>km</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has unique name which is set through the <strong>ValueAxis.Title </strong>method. You can also set the <strong>CategoryAxis.AxisCrossingValue</strong> method to specify the alignment of the value axes.</p>"
        },
        "links": [
          {
            "text": "Configuring Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/area-charts#configuring-the-axes"
          }
        ]
      },
      {
        "text": "Error Bars",
        "url": "area-charts/error-bars",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use ErrorBars for $FRAMEWORK Area Chart"
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how you can use Error Bars for $FRAMEWORK Area Chart to show variability of data. The Error bars are specified as part of the Series chart setting and are offered by the following Series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p> <p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"https://en.wikipedia.org/wiki/Standard_error\">standard error</a>, <a href=\"https://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a> and other. To specify that standard deviation, you should set \"stddev\" as in this demo, i.e. Series -&gt; Area -&gt; ErrorBars(errorBars =&gt; errorBars.Value(\"stddev\"))</p> <p>You can find more information in the following help article: <a href=\"https://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
        },
        "links": [
          {
            "text": "Error Bars",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/elements/error-bars"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "area-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how the $FRAMEWORK Area Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>You can see in this demo how the $FRAMEWORK Area chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "area-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how $FRAMEWORK Area Chart can use existing objects as data points."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Area chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the InternetUsers list located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound fields for the Series (series =>{series.Area(model => model.Value)}) and Category Axis (axis => axis.Categories(model => model.Year)) Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p> "
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to grouped data",
        "url": "area-charts/grouped-data",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With this example you will learn how to bind grouping data to $FRAMEWORK Area Charts."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource\"> ASP.NET MVC DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/overview\"> ASP.NET MVC DataSource control</a>.</li> <li>Set the <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;Symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the &ldquo;Close&rdquo; field): series.Area(model =&gt; model.Close)</li> <li>Bind the Category Axis to the corresponding field (e.g., the &ldquo;Date&rdquo; field): .Categories(model =&gt; model.Date)</li> </ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g., &ldquo;Symbol&rdquo;). &nbsp;Since the &ldquo;Symbol&rdquo; field in this example contains three distinct values (&ldquo;1. GOOG (close)&rdquo;, &ldquo;2. AAPL (close)&rdquo; and &ldquo;3. AMZN (close)&rdquo;) the chart will create three series as well.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Bar Charts",
    "name": "bar-charts",
    "updated": true,
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bar-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will see in action the $FRAMEWORK Bar Chart HTMLHelper extension for ASP.NET MVC Bar Charts component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>A Bar chart displays data as horizontal bars whose lengths vary according to their value. You can use a Bar chart to show a comparison between several sets of data (for example, summaries of the unique and total site visitors for certain period).<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Column chart",
        "url": "bar-charts/column",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how some settings of $FRAMEWORK chart can be changed in order to display the bar Chart as a Column chart."
        },
        "description": {
          "aspnet-mvc": "<p>The Column chart shows data as vertical bars whose heights vary according to their value. It can be useful for showing a comparison between several sets of data (e.g., snapshots of data across different points in time like the GDP growth shown in this example).</p> <p>Column charts are very similar to Bar charts, with the only difference that bars&rsquo; orientation is vertical instead of horizontal.</p> <p>You can define the chart series as horizontal via the Series -&gt; series.<strong>Column</strong> method:<br /> <br /> .Series(series =&gt; series.Column(new double[] { 3.907, 7.943, 7.848, 9.284, 9.263, 9.801, 3.890, 8.238, 9.552, 6.855 }))</p>"
        },
        "group": "Bar Chart Types",
        "links": [
          {
            "text": "Bar Charts",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/bar-charts"
          }
        ]
      },
      {
        "text": "Stacked bars",
        "url": "bar-charts/stacked-bar",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how $FRAMEWORK Bar Chart supports a stacked bar. The feature of the control is enabled by setting the stacked property to true."
        },
        "description": {
          "aspnet-mvc": "<p>A Stacked bar is a bar divided into subparts to show cumulative effect, to display money distribution or production against time. You can easily enable the stack feature through the SeriesDefaults -&gt; Bar -&gt; Stack(true) setting:</p> <p>.SeriesDefaults(series =&gt; series.Bar().Stack(true))</p> <p>For more information inspect the <a href=\"https://docs.telerik.com/aspnet-mvc/api/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "Stacked and grouped bars",
        "url": "bar-charts/grouped-stacked-bar",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the implementation of $FRAMEWORK stacked and grouped bars in various data visualization-driven web apps."
        },
        "description": {
          "aspnet-mvc": "<p>Usually, the data series in a stacked column or bar chart have one stack per category. There are scenarios in which you might want to arrange your data so that the chart appears to have more than one stack per category.</p> <p>In this demo, you can see how to group stacked columns to display the World population compared by age and sex in a specific period of time by setting the Stack() method, which sets the name of the stack that the series belong to:</p> <p>series.Column(new int[] { 1100941, 1139797, 1172929, 1184435, 1184654 }).Name(\"0-19\").Stack(\"Female\");</p>"
        }
      },
      {
        "text": "100% Stacked bars",
        "url": "bar-charts/stacked100-bar",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates 100% stacked bars capability in Telerik $FRAMEWORK Bar Charts for ASP.NET MVC jQuery-powered Bar Chart control."
        },
        "description": {
          "aspnet-mvc": "<p>The Bar chart type supports 100% stacking, where the stacked series value are rescaled such that they add up to 100%.</p> <p>You can enable the 100% stack feature through the SeriesDefaults -&gt; Bar -&gt; Stack(ChartStackType.Stack100) method.</p> <p>For more information inspect the <a href=\"https://docs.telerik.com/aspnet-mvc/api/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "100% Stacked and grouped bars",
        "url": "bar-charts/grouped-stacked100-bar",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the implementation of $FRAMEWORK 100% stacked and grouped bars in various data visualization-driven web apps."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates the implementation of $FRAMEWORK 100% stacked and grouped bars.</p> <p>You can enable the 100% stack feature by setting the first ChartStackType.Stack100 argument of the Series -&gt; Column -&gt; Stack() method, i.e.</p> <p>series.Column(new int[] { 1100941, 1139797, 1172929, 1184435, 1184654 }).Name(\"0-19\").Stack(ChartStackType.Stack100, \"Female\");</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "bar-charts/date-axis",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample shows how you can configure the base date unit for your date axis in $FRAMEWORK business bar chart."
        },
        "description": {
          "aspnet-mvc": "<p>You can scale the date axis of your $FRAMEWORK Bar Chart to get a better visualization of the seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the CategoryAxis.BaseUnit method, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the Series.Aggregate property, which takes max, min, sum, avg and count.</li> </ul>"
        }
      },
      {
        "text": "Logarithmic axis",
        "url": "bar-charts/logarithmic-axis",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can use a logarithmic axis for the $FRAMEWORK Bar Chart."
        },
        "description": {
          "aspnet-mvc": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the $FRAMEWORK Column Chart by setting the ValueAxis -&gt; Logarithmic() method.</p>"
        }
      },
      {
        "text": "Multi-axis",
        "url": "bar-charts/multiple-axes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will see how multiple axis of Telerik jQuery-powered Bar Charts can be configured in $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Bar chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>km</em>, <em>miles</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has unique name which is set through the <strong>ValueAxis.Title </strong>method. You can also set the <strong>CategoryAxis.AxisCrossingValue</strong> method to specify the alignment of the value axes.</p>"
        }
      },
      {
        "text": "Plot bands",
        "url": "bar-charts/plotbands",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how to add plot bands to your $FRAMEWORK charts in order to plot data within some borders."
        },
        "description": {
          "aspnet-mvc": "<p>Plot Bands are colored ranges, which are used to highlight certain areas in the $FRAMEWORK Chart. You can create them by setting:</p> <p>ValueAxis -&gt; PlotBands -&gt; bands.Add().From(10000).To(30000).Color(\"#c00\").Opacity(0.3);</p> <p>Each Plot Band could be configured independently by specifying the following properties:</p> <ul> <li>From &mdash; the start position of the plot band.</li> <li>To &mdash; the end position of the plot band.</li> <li>Opacity &mdash; the opacity of the plot band.</li> <li>Color &mdash; the color of the plot band.</li> </ul>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Gap and spacing",
        "url": "bar-charts/gap-spacing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With this example, you will be able to take a closer look at gap and spacing in $FRAMEWORK Bar Charts. Set gap and spacing values to play with the demo."
        },
        "description": {
          "aspnet-mvc": "<p>The Bar chart component allows you to control the distance between its categories as well as between series points within a category. This can be done through the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.gap\">series.gap</a> and <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.spacing\">series.spacing</a> client-side settings of the chart.</p> <p>In this demo, you can play with the provided GAP and SPACING dropdowns to change the values of the above properties.</p>"
        }
      },
      {
        "text": "Error Bars",
        "url": "bar-charts/error-bars",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Example of using ErrorBars for $FRAMEWORK Bar Chart"
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how to show variability of data using the Error Bars feature of the Telerik MVC Bar Chart. The Error bars are specified as part of the Series setting and are offered by the following Series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p><p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"https://en.wikipedia.org/wiki/Standard_error\">standard error</a> and <a href=\"https://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a>. To specify that standard error should be used, you need to set \"stderr\" as a value, i.e.</p><p>Series -&gt; Column-&gt; .ErrorBars(errorBars =&gt; errorBars.Value(\"<strong>stderr</strong>\"))</p><p>You can find more information in the following help article: <a href=\"https://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
        },
        "links": [
          {
            "text": "Error Bars",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/elements/error-bars"
          }
        ]
      },
      {
        "text": "Custom Visuals",
        "url": "bar-charts/visuals",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use ustom visuals for the $FRAMEWORK Bar Chart"
        },
        "description": {
          "aspnet-mvc": "<p>You can implement custom visualizations for the Bar/Column chart legend items, axis titles, labels, markers and series by utilizing the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo Drawing API</a>. You can do that by setting a JavaScript function name as a string parameter of the Series <strong>Visual</strong> method:<br /> <br /> SeriesDefaults -&gt; .Column().Visual(\"columnVisual\") or <br /> Series -&gt; series.Column(&hellip;).Visual(\"columnVisual\")</p> <p>Various context information is available through the function argument fields. Such are <strong>rect</strong> (the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/geometry/rect\">kendo.geometry.Rect</a> that defines where the visual should be rendered), createVisual (a function that can be used to get the default visual) and options (different options depending on the item type).</p> <p>You can read more about it in the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/drawing\">ASP.NET MVC JavaScript API reference</a>.</p>"
        }
      },
      {
        "text": "Pan and zoom",
        "url": "bar-charts/pan-and-zoom",
        "deferred": true,
        "updated": true,
        "meta": {
          "aspnet-mvc": "Enable pan and zoom effect in ASP.NET MVC Bar charts. This example demonstrates how to enable pan and zoom for your bar charts."
        },
        "description": {
          "aspnet-mvc": "<p>The Pan and Zoom features allow you to navigate through and zoom in/out the Telerik MVC Bar Chart. </p> <p>You can enable the pan feature through the Pannable setting as well as to lock the either the X or Y axis using the Lock method.</p> <p>To enable the Zoom set the Zoomable configuration option. You can also fine tune the mouse wheel and selection zooming through the available Mousewheel and Selection methods.</p><p>Use SHIFT + Mouse Drag Region Selection combination on mouse-enabled devices to zoom in data for a specific period of time</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "bar-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Bar Charts can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>You can see in this demo how the $FRAMEWORK Bar chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "bar-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the local data-binding is supported in $FRAMEWORK Bar Charts. Use the demo source code to try the feature of the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>You can see in this demo how the $FRAMEWORK Bar chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to grouped data",
        "url": "bar-charts/grouped-data",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the feature of binding to grouped data in $FRAMEWORK Bar Charts. See the source code to find how to use name templates for the data group."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">ASP.NET MVC DataSource</a>. To do so you can follow the following steps:</p> <ol> <li>Bind the chart to a <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">ASP.NET MVC DataSource control</a>.</li> <li>Set the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column in the underlying data which will be the criteria for grouping the chart series items into series: Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the &ldquo;Close&rdquo; field: series.Area(model =&gt; model.Close)</li> <li>Bind the Category Axis to the Date field: .Categories(model =&gt; model.Date)</li> </ol> <p> This will result in as many series as the number of distinct values in the column (i.e., DataSource.group.field). For each value there will be a chart series in the chart. </p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Barcode",
    "name": "barcode",
    "spriteCssClass": "barcodeIcon",
    "api": "dataviz/barcode",
    "documentation": {
      "aspnet-mvc": "helpers/barcode/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=111"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/barcode"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "barcode/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the core functionality of $FRAMEWORK Barcode which helps you easily encode data in machine readable format."
        },
        "links": [
          {
            "text": "Barcode HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/barcodes/barcode/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "barcode/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the different symbologies the $FRAMEWORK Barcode supports and the different options that could be set."
        },
        "links": [
          {
            "text": "Barcode Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/barcode"
          }
        ]
      }
    ],
    "category": "Barcodes"
  },
  {
    "text": "Box Plot Charts",
    "name": "box-plot-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartBoxPlotIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "box-plot-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will see in action the $FRAMEWORK Box Plot Chart HTMLHelper extension for ASP.NET MVC Box Plot Charts component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Box Plot chart is useful for comparing distributions between different sets of numerical data. It depicts graphically numerical data by displaying a data distribution summary with six indicators (lower value, first quartile, median, mean, third quartile, upper value) and outliers for each set of data.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Vertical Box Plot",
        "url": "box-plot-charts/vertical",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will see in action the $FRAMEWORK Box Plot Chart HTMLHelper extension for ASP.NET MVC Box Plot Charts component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Box Plot chart is useful for comparing distributions between different sets of numerical data. It depicts graphically numerical data by displaying a data distribution summary with six indicators (lower value, first quartile, median, mean, third quartile, upper value) and outliers for each set of data.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        },
        "links": [
          {
            "text": "Setting the Orientation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/boxplot-charts#setting-the-orientation"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "box-plot-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Box Plot Charts can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "box-plot-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the local data-binding is supported in $FRAMEWORK Box Plot Charts. Use the demo source code to try the feature of the control."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Box Plot chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Bubble Charts",
    "name": "bubble-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartBubbleIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bubble-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the basic usage and core features of the $FRAMEWORK Bubble Chart control."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, bubble, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>A Bubble chart shows the data as points with coordinates and size defined by their items' values. It is similar to the Scatter chart, in which the data points are replaced with bubbles. This allows a Bubble chart to display three dimensional data &mdash; two values for the items' coordinates and one for their size. A Bubble chart is useful for visualizing different scientific relationships (economic, social, etc.). This chart type's x-axis is also numerical and does not require items.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "bubble-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the  binding to remote data feature of $FRAMEWORK Bubble Chart."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "bubble-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the powerful Binding to local data feature, supported in $FRAMEWORK Bubble Chart component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Bubble chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to grouped data",
        "url": "bubble-charts/grouped-data",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to bind the $FRAMEWORK Bubble Chart component to grouped data. See how you can implement the feature in your rich web app."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">ASP.NET MVC DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">ASP.NET MVC DataSource control</a>.</li> <li>Set the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column (e.g., the &ldquo;Country&rdquo; field) in the underlying data which will be the criteria for grouping the chart series items into series: Group(group =&gt; group.Add(model =&gt; model.Country)</li> <li>Bind the X, Y and Size values of the series to the &ldquo;Year, Standing and Number&rdquo; fields: </li> </ol> <p>series.Bubble(model =&gt; model.Year, model =&gt; model.Standing, model =&gt; model.Number)</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Bullet Charts",
    "name": "bullet-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartBulletIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bullet-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how to use the $FRAMEWORK helper for ASP.NET MVC bullet graph, powered by HTML5 and jQuery."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this demo, you can see how to configure a Bullet chart, which is a variation of a <a href=\"https://demos.telerik.com/aspnet-mvc/bar-charts/index\">bar chart</a>. You can use it as a replacement for dashboard gauges and meters. The bullet graph compares a given quantitative measure (such as temperature) against qualitative ranges (e.g. warm, hot, mild, cool, chilly, cold, freezing, icy, frosty) and a symbol marker that encodes the comparative measure (for example the max temperature a year ago).<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong>Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "bullet-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we will bind local data to the $FRAMEWORK Bullet Chart in order to show the behavior of the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Bullet chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways for databinding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "bullet-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This online demo will show you how to bind $FRAMEWORK Bullet Chart to remote data."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Chart API",
    "name": "chart-api",
    "api": "dataviz/chart",
    "spriteCssClass": "chartIcon",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "items": [
      {
        "text": "Methods",
        "url": "chart-api/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Play with this demo and explore all API functions of Telerik Charting control for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to get reference to the Kendo Chart and its series client-side objects, which allows you to customize series options like type, appearance, stacking and many more:</p> <ul> <li>Get reference to the ASP.NET MVC Chart client-side object: var chart = $(\"#chart\").data(\"kendoChart\");</li> <li>Get reference to the series client object: series = chart.options.series,</li> <li>Set the series type: series[i].type = type;</li> <li>Stack the series: series[i].stack = stack;</li> </ul> <p>You can find a complete list of the series attributes in <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the control&rsquo;s API documentation</a>.</p>"
        }
      },
      {
        "text": "Events",
        "url": "chart-api/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the use of Telerik $FRAMEWORK API events."
        },
        "description": {
          "aspnet-mvc": "<p>The Chart exposes through its Events attribute many client-side events that allow easy and flexible use in a wide range of application scenarios:</p> <ul> <li>.SeriesClick()</li> <li>.SeriesHover()</li> <li>.DataBound()</li> <li>.AxisLabelClick()</li> <li>.PlotAreaClick()</li> <li>.Render()</li> <li>.LegendItemClick()</li> <li>.LegendItemHover()</li> <li>.DragStart()</li> <li>.Drag()</li> <li>.DragEnd()</li> <li>.ZoomStart()</li> <li>.Zoom()</li> <li>.ZoomEnd()</li> </ul>"
        },
        "requiresServer": "true"
      },
      {
        "text": "PDF Export",
        "url": "chart-api/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how to save the chart contents to PDF directly in your browser"
        },
        "description": {
          "aspnet-mvc": "<p>This example shows how to configure the PDF export settings of the Telerik MVC Charting helper. </p> <p>You can specify the Author, Creator, Date, FileName, AllPages, PaperSize, ProxyURL and other options, through the <strong>PDF</strong> property of the Chart helper.</p> <p>The <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-saveAsPDF\">saveAsPDF</a> or <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a> methods can be used to trigger export operation.</p>"
        }
      },
      {
        "text": "Advanced Export",
        "url": "chart-api/export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to export charts to PDF, PNG Images or SVG and save them directly in the browser."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how to export charts to PDF, PNG Images or SVG and save the produced files directly in the browser. You can do that by getting a reference to the chart&rsquo;s client-side object<br /> <br /> var chart = $(\"#chart\").getKendoChart();<br /> <br /> and firing the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a>, <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportImage\">exportImage</a> and <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportSVG\">exportSVG</a> methods. Use the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/kendo#methods-saveAs\">kendo.saveAs</a> method to save the result and specify the file name.</p>"
        }
      },
      {
        "text": "Selection",
        "url": "chart-api/selection",
        "hasConsole": true,
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will see how the API is used for a selection in Telerik $FRAMEWORK Chart."
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how to configure on the client the axis selection in the Telerik MVC Chart through the exposed Events -&gt; SelectStart, Select and SelectEnd chart events as well as the zoom and reverse attributes of the categoryAxis -&gt; select -&gt; mousewheel settings.</p>"
        }
      },
      {
        "text": "RTL support",
        "url": "chart-api/rtl",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the Telerik $FRAMEWORK Chart component supports right-to-left direction."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Chart supports right-to-left languages and rendering. All you have to do is wrap the editor in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the components can be found in <a href=\"https://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this topic</a>.</p>"
        },
        "links": [
          {
            "text": "Right-To-Left Support Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/globalization/right-to-left-support"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Donut Charts",
    "name": "donut-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartDonutIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "donut-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo we show how Telerik jQuery-powered Donut charts can be implemented in $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this demo, you can learn how to register and configure a Donut chart, which displays data as sectors from a circle. The Donut chart is a Pie chart variation with ability to display single series of data in a two-dimensional circle. It is useful for displaying data as parts of a whole.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong>Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Donut labels",
        "url": "donut-charts/donut-labels",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to configure the values of $FRAMEWORK Donut Charts, enable/disable donut labels and specify how they are aligned to the chart."
        },
        "description": {
          "aspnet-mvc": "<p>This example shows how to show/hide the labels of the $FRAMEWORK Donut Chart and specify how they are aligned.</p> <p>You can do that by getting a reference to the Chart client-object via:</p> <p>var chart = $(\"#chart\").data(\"kendoChart\")</p> <p>which will allow you to set and configure its series collection and attributes:<br /> <br /> var pieSeries = chart.options.series[0];<br /> pieSeries.labels.visible = true|false; // If set to true the chart will display the series labels.<br /> pieSeries.labels.align = \"circle\"; // \"circle\" - the labels are positioned in circle around the chart.\"column\" - the labels are positioned in columns to the left and right of the chart.</p> <p>You can find a complete list of the series attributes in <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the control&rsquo;s API documentation</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "donut-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example you will see the remote data binding functionality of Telerik Grid for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "donut-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the binding to local data feature in Telerik $FRAMEWORK Donut charts."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Donut chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the SpainElectricityBreakdown enumerator located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound Percentage, Source and Explode fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Funnel Charts",
    "name": "funnel-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartFunnelIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "funnel-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the core functionality of $FRAMEWORK Funnel Charts which visualize the breakdown of data into its elements."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This example illustrates how to register and configure a Funnel Chart. A Funnel chart displays a single series of data in progressively decreasing or increasing proportions, organized in segments, where each segment represents the value for the particular item from the series. The items' values can also influence the height and the shape of the corresponding segments.</p> <p>Funnel charts are usually used to represent stages in a sales process (e.g., show the amount of potential revenue for each stage); identify a potential problematic areas in any company's process; visualize website visitors trends and other.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Funnel labels",
        "url": "funnel-charts/funnel-labels",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to configure the values of $FRAMEWORK Funnel Charts, enable/disable funnel labels and specify how they are aligned to the chart."
        },
        "description": {
          "aspnet-mvc": "<p>You can see in this demo how to configure the labels of the MVC funnel chart. You can specify their properties for visibility, position and alignment, font color and size and so on through the SeriesDefaults -&gt; Funnel -&gt; Labels setting:</p> <ul> <li>Visibility: Labels -&gt; Visible</li> <li>Position and Alignment: Labels -&gt; Position and Labels -&gt; Alight </li> <li>Font color and size: Labels -&gt; Color and Labels -&gt; Font</li> </ul>"
        },
        "links": [
          {
            "text": "Getting Started with Funnel Charts",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/funnel-charts#getting-started"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "funnel-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to bind $FRAMEWORK Funnel Charts to remote data."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "funnel-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how $FRAMEWORK funnel Chart control can be bound to local data to deliver a high-performance business application."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Funnel chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways for databinding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "HeatMap",
    "name": "HeatMap",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "html-helpers/charts/heatmap/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1795"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "heatmapIcon",
    "items": [
      {
        "text": "Overview",
        "url": "heatmap/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows the core functionality of $FRAMEWORK HeatMap which visualizes the relative value of data points in two dimensions."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This example illustrates how to register and configure a Heatmap. The Telerik $FRAMEWORK Heatmap chart is a powerful data visualization component, which allows you to use colors to indicate the relative value of data points in two dimensions. It is a grid-structure with cells corresponding to an X-axis and a Y-axis. Every cell's value decides what color it should be filled in, with a gradation of hues ranging from white to totally filled-in color and everything in between. <p><strong><br /> Key Features of Telerik MVC Heatmap chart</strong></p> <ul> <li>Category Binding – configuration for the binding order of the X and Y categories</li> <li>Color Scales – various lightness and color options depending on the point value</li> <li>Marker Shapes – different shapes for the value points </li> <li>Panning and Zooming – display options</li> <li>Tooltips – custom text displayed on hover</li> <li>Crosshairs – perpendicular lines to the axes for better navigation</li> <li>Export content to PDF</li> <li>21+ Built-in Themes (Default, Material, Bootstrap, and more)</li> <li>API - configurations and extension points for custom functionalities</li> </ul>"
        }
      },
      {
        "text": "Remote Data Binding",
        "url": "heatmap/remote-data-binding",
        "description": {
          "aspnet-mvc": "This example shows how to configure the $FRAMEWORK HeatMap remote data binding."
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to configure the $FRAMEWORK HeatMap remote data binding."
        }
      },
      {
        "text": "Color Scheme",
        "url": "heatmap/color-scheme",
        "description": {
          "aspnet-mvc": "The built-in color scale of the $FRAMEWORK Heatmap changes the lightness of the series depending on the point value. The point with the greatest value is shown in the main series color while lighter shades indicate lower values. To define a custom color scheme, pass a callback function as the series color. "
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can configure the color scheme for $FRAMEWORK HeatMap chart type component."
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Pan and Zoom",
        "url": "heatmap/pan-and-zoom",
        "description": {
          "aspnet-mvc": "This example shows how to configure the $FRAMEWORK HeatMap for panning and zooming. It allows you to observe the data in different segments and portions according to your preferences."
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to configure the $FRAMEWORK HeatMap for panning and zooming."
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Crosshairs",
        "url": "heatmap/crosshairs",
        "description": {
          "aspnet-mvc": "This example shows how to configure the axis crosshairs for $FRAMEWORK HeatMap chart type."
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to configure the axis crosshairs for $FRAMEWORK HeatMap chart type."
        },
        "packages": [
          "aspnet-mvc",
          "aspnet-core"
        ]
      },
      {
        "text": "Markers",
        "url": "heatmap/markers",
        "description": {
          "aspnet-mvc": "This example shows how to configure the marker shapes for $FRAMEWORK HeatMap chart type. The supported values are rect, roundedRect, circle, and triangle"
        },
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how to configure the marker shapes for $FRAMEWORK HeatMap chart type."
        }
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Linear Gauge",
    "name": "linear-gauge",
    "spriteCssClass": "gaugeLinearIcon",
    "api": "dataviz/lineargauge",
    "documentation": {
      "aspnet-mvc": "helpers/lineargauge/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=667"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "linear-gauge/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can easily implement $FRAMEWORK Linear Gauge in your MVC web application. Draw end users attention to a certain range of values."
        }
      },
      {
        "text": "Scale options",
        "url": "linear-gauge/scale-options",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample illustrates how you can customize $FRAMEWORK Linear Gauge by changing the location of the gauge scale and its appearance."
        }
      },
      {
        "text": "Multiple pointers",
        "url": "linear-gauge/multiple-pointers",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how easily you can configure the $FRAMEWORK Linear gauge to use multiple pointers."
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "linear-gauge/export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how easily you can export the $FRAMEWORK linear gauge to PDF, Image and SVG."
        }
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Circular Gauge",
    "name": "circular-gauge",
    "spriteCssClass": "gaugeCircularIcon",
    "api": "dataviz/circulargauge",
    "documentation": {
      "aspnet-mvc": "html-helpers/gauges/circulargauge/overviewhelpers/circulargauge/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=667"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/gauge"
    },
    "items": [
      {
        "text": "Overview",
        "url": "circular-gauge/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the core functionality of $FRAMEWORK Circular Gauge which helps you easily visualize values in a complete oval measurement widget."
        },
        "description": {
          "aspnet-mvc": "<p>The <b>Circular Gauge</b> makes possible to visualize numeric values on a complete stylized scale. This enables the users to have a brighter picture on the presented values and easily distinguish the allocation of data.</p><p>The widget supports full customization of the Center Text, as well as, rich Scale and Color capabilities.</p><p>The Telerik Gauges set will allow your page to have a more professional and comprehensible look. </p>"
        }
      },
      {
        "text": "Color Ranges",
        "url": "circular-gauge/colors",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can configure the $FRAMEWORK circular gauge to use different colors for values in specific ranges."
        },
        "description": {
          "aspnet-mvc": "<p> The Circular Gauge enables you to set different fill color depending on the current value.</p><p>To configure the different colors of the pointer, you can define a collection with the desired ranges.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "circular-gauge/export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how easily you can export the $FRAMEWORK circular gauge to PDF, Image and SVG."
        },
        "description": {
          "aspnet-mvc": "<p> This example shows how to export the circular gauge to PDF, Image and SVG. To export the Circular Gauge use the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/circulargauge/methods/exportpdf\">exportPDF</a>, <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/circulargauge/methods/exportsvg\">exportSVG</a> and <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/circulargauge/methods/exportimage\">exportImage</a> methods.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Scale Options",
        "url": "circular-gauge/scale-options",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample illustrates how you can customize $FRAMEWORK Circular Gauge by changing the configuration of the gauge scale and its appearance."
        },
        "description": {
          "aspnet-mvc": "<p>The Gauge’s visual properties can be modified including the colors of the labels and ticks, whether labels and ticks are displayed at all or whether the Gauge’s value moves clockwise or counterclockwise.</p><p>The full collection of Scale Settings can be found in the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/circulargauge/configuration/scale\">scale section</a> of the API.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "API",
        "url": "circular-gauge/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The API Functions of $FRAMEWORK Circular Gauge widget give you the option to modify its settings on the go depending on conditional logic."
        },
        "description": {
          "aspnet-mvc": "<p><a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/circulargauge\">Circular Gauge API</a> provides methods to control the value and size of the displayed widget. It also supports dynamic modification of the Gauge's settings.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Radial Gauge",
    "name": "radial-gauge",
    "spriteCssClass": "gaugeRadialIcon",
    "api": "dataviz/radialgauge",
    "documentation": {
      "aspnet-mvc": "helpers/radialgauge/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=667"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "radial-gauge/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the core functionality of $FRAMEWORK Radial Gauge which helps you easily visualize an indicator within a range of values."
        }
      },
      {
        "text": "Scale options",
        "url": "radial-gauge/scale-options",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can easily use simple options to configure the $FRAMEWORK radial gauge, enable/disable scale ranges and gauge labels."
        }
      },
      {
        "text": "Multiple pointers",
        "url": "radial-gauge/multiple-pointers",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how easily you can configure the $FRAMEWORK radial gauge to use multiple pointers."
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "radial-gauge/export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how easily you can export the $FRAMEWORK radial gauge to PDF, Image and SVG."
        }
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Arc Gauge",
    "name": "arc-gauge",
    "spriteCssClass": "gaugeArcIcon",
    "api": "dataviz/arcgauge",
    "documentation": {
      "aspnet-mvc": "helpers/arcgauge/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=667"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "arc-gauge/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the core functionality of $FRAMEWORK Arc Gauge which helps you easily visualize an indicator within a range of values."
        },
        "description": {
          "aspnet-mvc": "<p> The Kendo UI Arc Gauge widget displays a value range which is represented by an arc. All graphics render on the client by using the <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">Scalable Vector Graphics (SVG)</a> format.</p>"
        }
      },
      {
        "text": "Colors",
        "url": "arc-gauge/colors",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can configure the $FRAMEWORK Arc Gauge to use different colors for values in specific ranges."
        },
        "description": {
          "aspnet-mvc": "<p> The Arc Gauge enables you to set different colors depending on the current value. To configure the range colors, set the `Colors` option.</p>"
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "arc-gauge/export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how easily you can export the $FRAMEWORK Arc Gauge to PDF, Image and SVG."
        },
        "description": {
          "aspnet-mvc": "<p> This example shows how to export the arc gauge to PDF, Image and SVG. To export the Arc Gauge use the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/arcgauge/methods/exportpdf\">exportPDF</a>, <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/arcgauge/methods/exportsvg\">exportSVG</a> and <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/arcgauge/methods/exportimage\">exportImage</a> methods.</p>"
        }
      },
      {
        "text": "Circular Gauge",
        "url": "arc-gauge/circular",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how you can configure the $FRAMEWORK Arc Gauge to visualize values on a circular scale."
        },
        "description": {
          "aspnet-mvc": "<p> The Arc Gauge enables you to visualize values on a circular scale. To configure the gauge, set the `Scale.StartAngle` and `Scale.EndAngle` options so their difference is equal to 360.</p>"
        }
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Line Charts",
    "name": "line-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartLineIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "line-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how you can use Telerik $FRAMEWORK Line Charts helper to show trends for several series on the same diagram & visualize them as lines."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this example, you can see how to register and configure a Line chart. A Line chart shows data as continuous lines that pass through points defined by their items' values. It can be useful for showing a trend over time and comparing several (four in this demo) sets of similar data.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul><li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Stacked line",
        "url": "line-charts/stacked-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can easily implement $FRAMEWORK Stacked Line Charts in your business webapp."
        },
        "group": "Line Chart Types",
        "description": {
          "aspnet-mvc": "<p>This demo shows how to configure a Stacked line chart. To enable the stack feature set true as an argument of the the SeriesDefaults -&gt; Bar -&gt; Stack(true) method:</p> <p>.SeriesDefaults(series =&gt; series.Line().Stack(true))</p> <p>You can also divide the line chart on two parts, by setting:</p> <p>.MissingValues(ChartLineMissingValues.Gap)</p> <p>And having <strong>null</strong> data value entries in the series data, which will be used as a divider.</p> <p>For more information inspect the <a href=\"https://docs.telerik.com/aspnet-mvc/api/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        },
        "links": [
          {
            "text": "Configuring the Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "100% Stacked line",
        "url": "line-charts/stacked100-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to implement 100% stacked line in Telerik line charts for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Line chart supports 100% stacking, where the last series is always rendered as a flat line on top of the value axis.</p> <p>You can enable the 100% stack feature through the SeriesDefaults -&gt; Line -&gt; Stack(ChartStackType.Stack100) method.</p> <p>For more information inspect the <a href=\"https://docs.telerik.com/aspnet-mvc/api/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        },
        "links": [
          {
            "text": "Configuring the Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "Stepped line",
        "url": "line-charts/step-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure step line style for Telerik jQuery-based Line Charts in $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Stepped Line chart is a form of Line chart where each data point from the series is connected with vertical and horizontal lines to form a step-like progression. This type of line visualization is useful when you want to highlight the increase or decrease in values over time.</p> <p>You can configure a stepped area chart through the Series -&gt; Line -&gt; Style(ChartAreaStyle.<strong>Step</strong>) settings of the MVC Chart.</p>"
        },
        "links": [
          {
            "text": "Configuring the Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "Smooth line",
        "url": "line-charts/smooth-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this demo you will figure out how to configure smooth line (spline) style chart in $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to configure smooth line (spline) style for the Telerik MVC Line chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth line area chart through the Series -&gt; Line -&gt; Style(ChartLineStyle.Smooth) settings of the $FRAMEWORK Chart.</p>"
        },
        "links": [
          {
            "text": "Configuring the Line Styles",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#configuring-the-line-styles"
          }
        ]
      },
      {
        "text": "Date axis",
        "url": "line-charts/date-axis",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows how date axis functionality works in Telerik Line Charts for $FRAMEWORK."
        },
        "group": "Functionality",
        "description": {
          "aspnet-mvc": "<p>You can scale the date axis of your $FRAMEWORK Line Chart to get a better visualization of the seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the CategoryAxis.BaseUnit property, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the Series.Aggregate property, which takes max, min, sum, avg and count.</li> </ul>"
        },
        "links": [
          {
            "text": "Configuring the Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#configuring-the-axes"
          }
        ]
      },
      {
        "text": "Logarithmic axis",
        "url": "line-charts/logarithmic-axis",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how you can use a logarithmic axis for the $FRAMEWORK Line Chart."
        },
        "description": {
          "aspnet-mvc": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the $FRAMEWORK Line Chart by setting the ValueAxis -&gt; Logarithmic() method. The base of the logarithmic axis is defined by the interval between the major divisions, controlled by the MajorUnit property.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Configuring the Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#configuring-the-axes"
          }
        ]
      },
      {
        "text": "Multi-axis",
        "url": "line-charts/multiple-axes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how easily $FRAMEWORK Line Charts can be customized to achieve what you want in your app. Apply multiple axes to your $FRAMEWORK Line Charts."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Line chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example shows a weather report and includes information for the: <em>max and min temperatures, wind speed and rainfall in mm</em>. Note that each of them has unique name which is set through the <strong>ValueAxis.Title </strong>method. You can also set the <strong>CategoryAxis.AxisCrossingValue</strong> method to specify the alignment of the value axes.</p>"
        },
        "links": [
          {
            "text": "Configuring the Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#configuring-the-axes"
          }
        ]
      },
      {
        "text": "Notes",
        "url": "line-charts/notes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how you can use Telerik $FRAMEWORK Line Charts helper to show trends for several series on the same diagram & visualize them as lines."
        },
        "description": {
          "aspnet-mvc": "<p>In this demo, you can see how to add notes for the Min and Max values of the Line chart.</p> <p>To do that you need to set the Series -&gt; Line -&gt; Notes and NoteTextField setting which will also allow you to specify the note and its label positions.</p>"
        },
        "links": [
          {
            "text": "Charts Notes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/elements/notes"
          }
        ]
      },
      {
        "text": "Error Bars",
        "url": "line-charts/error-bars",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use ErrorBars for $FRAMEWORK Line Chart"
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates how to show variability of data using the Error Bars feature of the Telerik MVC Line Chart. The Error bars are specified as part of the Series setting and are offered by the following Series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p> <p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"https://docs.telerik.com/kendo-ui/dataviz/chart/error-bars#setting-a-percentage-value\">percentage value</a>, <a href=\"https://en.wikipedia.org/wiki/Standard_error\">standard error</a> and <a href=\"https://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a> and other. To specify that percentage error should be used, you need to set \"percentage(Int)\" as a value, i.e.</p><p>.ErrorBars(errorBars =&gt; errorBars.Value(\"percentage(20\"))</p><p>You can find more information in the following help article: <a href=\"https://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
        },
        "links": [
          {
            "text": "Error Bars",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/elements/error-bars"
          }
        ]
      },
      {
        "text": "Custom Visuals",
        "url": "line-charts/visuals",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to use ustom visuals for the $FRAMEWORK Line Chart"
        },
        "description": {
          "aspnet-mvc": "<p>You can implement custom visualizations for the Line chart markers and highlights by utilizing the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo Drawing API</a>. You can do that by setting a JavaScript function name as a string parameter of the Series:</p> <ul> <li>Markers -&gt; Visual method: .Markers(markers =&gt; markers.Visual(\"markerVisual\"))</li> <li>Highlight -&gt; Toggle method -&gt; .Highlight(highlight =&gt; highlight.Toggle(\"toggleHandler\")); </li> </ul> <p>Various context information is available through the function argument fields. Such are <strong>rect</strong> (the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/geometry/rect\">kendo.geometry.Rect</a> that defines where the visual should be rendered), createVisual (a function that can be used to get the default visual) and options (different options depending on the item type).</p> <p>You can read more about it in the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/drawing\">ASP.NET MVC JavaScript API reference</a>.</p>"
        },
        "links": [
          {
            "text": "Customizing the Markers",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/line-charts#customizing-the-markers"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "line-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates how Telerik $FRAMEWORK Line charts can be bound to remote data source."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "line-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how $FRAMEWORK Line Charts use existing objects as data points."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Line chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the InternetUsers list located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound fields for the Series (series =>{series.Area(model => model.Value)}) and Category Axis (axis => axis.Categories(model => model.Year)) Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to grouped data",
        "url": "line-charts/grouped-data",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how binding to grouped data feature works in $FRAMEWORK Line Charts."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">ASP.NET MVC DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/overview\">ASP.NET MVC DataSource control</a>.</li> <li>Set the <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;Symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the \"Close\" field): series.Area(model =&gt; model.Close)</li> <li>Bind the Category Axis to the corresponding field (e.g., the \"Date\" field): .Categories(model =&gt; model.Date)</li> </ol> <p> This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g., \"Symbol\"). &nbsp;Since the &ldquo;Symbol&rdquo; field in this example contains three distinct values (\"1. GOOG (close)\", \"2. AAPL (close)\" and \"3. AMZN (close)\") the chart will create three series as well.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Diagram",
    "name": "diagram",
    "api": "dataviz/diagram",
    "documentation": {
      "aspnet-mvc": "helpers/diagram/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=496"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/diagram"
    },
    "spriteCssClass": "diagramIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "diagram/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With this demo built with $FRAMEWORK, you will be able to find out how $FRAMEWORK Diagram control can be implemented for hierarchical diagrams."
        },
        "links": [
          {
            "text": "Diagram HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/diagram/overview"
          }
        ]
      },
      {
        "text": "Built-in Layouts",
        "url": "diagram/layout",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the built-in layouts which are specific to $FRAMEWORK Diagram component."
        },
        "links": [
          {
            "text": "Diagram Layout Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/diagram/layout"
          }
        ]
      },
      {
        "text": "Editing",
        "url": "diagram/editing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example you will learn how you can easily use editing operations in $FRAMEWORK Diagram."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "DiagramDataController.cs",
              "url": "~/Controllers/Diagram/DiagramDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Diagram Editing Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/diagram/editing"
          }
        ]
      },
      {
        "text": "PDF Export",
        "url": "diagram/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to save the diagram as PDF directly in the browser."
        },
        "links": [
          {
            "text": "Diagram PDF Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/diagram/export/pdf-export"
          }
        ]
      },
      {
        "text": "Advanced Export",
        "url": "diagram/export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to export diagrams to PDF, PNG Images or SVG and save them directly in the browser."
        },
        "links": [
          {
            "text": "Diagram Advanced Export Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/diagram/export/advanced-export"
          }
        ]
      },
      {
        "text": "Events",
        "url": "diagram/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates all the different events available in Telerik $FRAMEWORK Diagram control."
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "DiagramDataController.cs",
              "url": "~/Controllers/Diagram/DiagramDataController.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Diagram HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/diagram/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "diagram/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The API Functions of $FRAMEWORK Diagram control give you the option to add/remove shapes and connections, set the current pan and zoom, select elements."
        },
        "links": [
          {
            "text": "Diagram Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/diagram"
          }
        ]
      }
    ],
    "category": "Diagrams & Maps"
  },
  {
    "text": "Map",
    "name": "map",
    "api": "dataviz/map",
    "documentation": {
      "aspnet-mvc": "helpers/map/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=941"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/map"
    },
    "spriteCssClass": "mapIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "map/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With this demo built with $FRAMEWORK, you will be able to find out how $FRAMEWORK Map control can be implemented for tile maps."
        },
        "links": [
          {
            "text": "Map Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/map/overview"
          }
        ]
      },
      {
        "text": "Bing tile layer",
        "url": "map/bing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo demostrates how you can use Bing tile layer in your $FRAMEWORK Map."
        },
        "links": [
          {
            "text": "Map Bing Layer Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/map/configuration/layerdefaults.bing"
          }
        ]
      },
      {
        "text": "Bubble layer",
        "url": "map/bubble-layer",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to bind a ASP.NET MVC bubble map layer to remote data."
        },
        "requiresServer": "true",
        "sources": {
          "aspnet-mvc": [
            {
              "name": "BubbleLayerController.cs",
              "url": "~/Controllers/Map/BubbleLayerController.cs"
            },
            {
              "name": "UrbanArea.cs",
              "url": "~/Models/Map/UrbanArea.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Map Bubble Layer Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/map/configuration/layerdefaults.bubble"
          }
        ]
      },
      {
        "text": "Binding to GeoJSON",
        "url": "map/geojson",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to bind an $FRAMEWORK map layer to GeoJSON shapes."
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding markers to remote data",
        "url": "map/remote-markers",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to bind a $FRAMEWORK marker layer."
        },
        "requiresServer": "true",
        "sources": {
          "aspnet-mvc": [
            {
              "name": "MapDataRepository.cs",
              "url": "~/Models/Map/MapDataRepository.cs"
            },
            {
              "name": "Marker.cs",
              "url": "~/Models/Map/Marker.cs"
            }
          ]
        }
      },
      {
        "text": "Export",
        "url": "map/export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to export maps to PDF, PNG Images or SVG and save them directly in the browser."
        }
      },
      {
        "text": "Events",
        "url": "map/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the events which are specific to $FRAMEWORK Map component."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Map Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/map/overview#events"
          },
          {
            "text": "Map Events Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/map#events"
          }
        ]
      },
      {
        "text": "API",
        "url": "map/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the public methods which are specific to $FRAMEWORK Map component."
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Map Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/map"
          }
        ]
      }
    ],
    "category": "Diagrams & Maps"
  },
  {
    "text": "OrgChart",
    "name": "orgchart",
    "api": "web/orgchart",
    "documentation": {
      "aspnet-mvc": "html-helpers/diagrams-and-maps/orgchart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1790"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/orgchart"
    },
    "spriteCssClass": "orgChartIcon",
    "items": [
      {
        "text": "Overview",
        "url": "orgchart/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The $FRAMEWORK OrgChart allows you to view and interact with organizational structures and hierarchies."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK OrgChart</strong> component allows you to view and interact with organizational structures. It provides the capability to easily visualize hierarchies and structural arrangement, which can be handled dynamically by the user by expanding and collapsing multiple nodes.</p><p><strong>Key Features</strong></p><ul style=\"list-style-type: disc;\"><li>Data Binding</li><li>Editing</li><li>Grouping</li><li>Templates</li><li>Accessibility</li></ul>\n"
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/diagrams-and-maps/orgchart/overview"
          }
        ]
      },
      {
        "text": "Binding to Remote Data",
        "url": "orgchart/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the OrgChart can be bound to remote data."
        },
        "description": {
          "aspnet-mvc": "<p>The <strong>$FRAMEWORK OrgChart</strong> provides full data-binding capabilites, both to the client-side JSON objects and server-side IEnumerable collections.</p>\n"
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "Load on Demand",
        "url": "orgchart/load-on-demand",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the OrgChart can be bound to remote data and each level is requested asynchronously."
        },
        "description": {
          "aspnet-mvc": "<p>This example illustrates how the <strong>Telerik OrgChart for $FRAMEWORK</strong> can be bound to remote data and each level is requested asynchronously.</p><p>The key part of this implementation is the <b>HasChanges</b> field which functions as the load-on-demand indicator.</p>"
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "Editing",
        "url": "orgchart/editing",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the OrgChart can have its data edited."
        },
        "description": {
          "aspnet-mvc": "This example illustrates how the <strong>Organizational Chart component for $FRAMEWORK</strong> can be integrated with CRUD operations, which can be invoked via a context menu available for each item."
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "Grouping",
        "url": "orgchart/grouping",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the grouping feature of the OrgChart works."
        },
        "description": {
          "aspnet-mvc": "This example illustrates how the grouping feature of the <strong>$FRAMEWORK OrgChart</strong> component works. It can be helpful in achieving more structural appearance of the displayed data.<br/><br/><p>To use the built-in grouping feature of the component, you will have a dedicated Field in your data source and pass it to <strong>.GroupField(\"Group\")</strong> property.</p>"
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "Grouping by Parent",
        "url": "orgchart/grouping-by-parent",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates an alternative approach different than the built-in grouping feature of the <strong>Telerik OrgChart for $FRAMEWORK</strong> works."
        },
        "description": {
          "aspnet-mvc": "This example illustrates an alternative approach different than the built-in grouping feature of the <strong>Telerik OrgChart for $FRAMEWORK</strong>. Instead of having a dedicated Group By field in the data source, you can also use an existing field.<br/><br/><p>In this case, the demo demonstrates how the data can be grouped by the <strong>ParentID</strong> field. And since numeric values like 1, 2, 3 won't be meaningful for the viewing user, the demo leverages the group header template capability of the component in order to get the actual names of the corresponding parent.</p>"
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "Templates",
        "url": "orgchart/templates",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to configure the templates of the OrgChart."
        },
        "description": {
          "aspnet-mvc": "This example illustrates how to configure the templates of the <strong>Organizational Chart component for $FRAMEWORK</strong>. It supports the following types of templates and provide access to the underlying data: <br/><br/><ul><li>Template or TemplateId</li><li>GroupHeaderTemplate or GroupHeaderTemplateId</li></ul>"
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "orgchart/events",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to attach the OrgChart events."
        },
        "description": {
          "aspnet-mvc": "This example illustrates how to attach the <strong>$FRAMEWORK OrgChart</strong> component events. They can be used to achieve plethora of custom scenarios."
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "orgchart/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to use the OrgChart API."
        },
        "description": {
          "aspnet-mvc": "This example illustrates how to use the <strong>$FRAMEWORK OrgChart</strong> component API - methods and properties."
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "RTL Support",
        "url": "orgchart/right-to-left-support",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to accomplish rtl apperance with the OrgChart."
        },
        "description": {
          "aspnet-mvc": "This example illustrates how to accomplish rtl apperance with the <strong>Telerik OrgChart for $FRAMEWORK</strong>. It is usually very convenient and even mandatory when working with Mid- and Far-Eastern cultures."
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      },
      {
        "text": "Keyboard Navigation",
        "url": "orgchart/keyboard-navigation",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how the keyboard navigation of the <strong>Organizational Chart component for $FRAMEWORK</strong> functions."
        },
        "links": [
          {
            "text": "OrgChart HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/data-management/orgchart/overview"
          }
        ]
      }
    ],
    "category": "Diagrams & Maps"
  },
  {
    "text": "Pie Charts",
    "name": "pie-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartPieIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "pie-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates core functionality of Telerik pie charts extension for $FRAMEWORK."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this example, you can see how to register and configure a Pie chart. This chart type displays the data as sectors from a circle and is useful for displaying data as parts of a whole. The Pie chart displays a single series of data in a two-dimensional circle. <br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br />Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Pie labels",
        "url": "pie-charts/pie-labels",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the animated pie labels work in $FRAMEWORK Pie Charts and lets you play with the configuration of the labels."
        },
        "description": {
          "aspnet-mvc": "<p>This example shows how to show/hide the labels of the $FRAMEWORK Pie Chart and specify how they are aligned.</p> <p>You can do that by getting a reference to the Chart client-object via:</p> <p>var chart = $(\"#chart\").data(\"kendoChart\")</p> <p>which will allow you to set and configure its series collection and attributes:<br /> <br /> var pieSeries = chart.options.series[0];<br /> pieSeries.labels.visible = true|false; // If set to true the chart will display the series labels.<br /> pieSeries.labels.align = \"circle\"; // \"circle\" - the labels are positioned in circle around the chart.\"column\" - the labels are positioned in columns to the left and right of the chart.</p> <p>You can find a complete list of the series attributes in <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the control&rsquo;s API documentation</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "pie-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how $FRAMEWORK Pie Charts can be bound to remote data by configuring ASP.NET MVC DataSource component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "pie-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Pie Charts use existing objects as data points. The example illustrates binding to local data feature of the control."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Pie chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the SpainElectricityBreakdown enumerator located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound Percentage, Source and Explode fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Polar Charts",
    "name": "polar-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartPolarIcon",
    "items": [
      {
        "text": "Polar line",
        "url": "polar-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how $FRAMEWORK Polar Charts control can be added to your web page in order to visualize quantitive data. Learn how to define your polar chart."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Polar chart, demonstrated in this demo, shows data in a circular plot area in polar coordinates where each data point is represented by a distance/radius and an angle, beginning of the coordinate system. Polar charts are useful for visualizing scientific data like precipitation/heat distribution in the Earth's poles and other multivariate data.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Smooth polar line",
        "url": "polar-charts/smooth-polar-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the $FRAMEWORK Polar Charts to use smooth line (spline) style"
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to configure <em>smooth (spline)</em> polar line style for the Telerik MVC Polar chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth polar area chart through the Series -&gt; PolarLine -&gt; Style(ChartPolarLineStyle.Smooth) setting.</p>"
        }
      },
      {
        "text": "Polar scatter",
        "url": "polar-charts/polar-scatter",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure $FRAMEWORK Polar Scatter Chart."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how to create a polar scatter chart, which series type is represented on the chart as non-connected data points.</p> <p>You can define the polar scatter series through the Series -&gt; PolarScatter setting.</p>"
        }
      },
      {
        "text": "Polar area",
        "url": "polar-charts/polar-area",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to configure $FRAMEWORK Polar Area Chart."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to create a polar area chart, which series type is represented by data points connected with straight line segments that enclose a filled area together with the chart pole.</p> <p>You can configure such chart from the Series -&gt; PolarArea configuration setting</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "polar-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how $FRAMEWORK Polar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "polar-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how $FRAMEWORK Polar Chart can use existing objects as data points."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Polar chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the SunPosition list located in the \\Models\\Chart\\ChartDataRepository.Polar.cs file as a model. After that you should configure the data bound Azimuth and Altitude fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "QR Code",
    "name": "qrcode",
    "spriteCssClass": "qrcodeIcon",
    "api": "dataviz/qrcode",
    "documentation": {
      "aspnet-mvc": "helpers/qrcode/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1184"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/qrcode"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "qrcode/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates the core functionality of $FRAMEWORK QRCode which helps you easily encode large amounts of data in a machine readable format."
        },
        "links": [
          {
            "text": "QRCode HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/barcodes/qrcode/overview"
          }
        ]
      },
      {
        "text": "API",
        "url": "qrcode/api",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK QRCode control API works and what kind of functions it supports."
        },
        "links": [
          {
            "text": "QRCode Client-side API",
            "url": "https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/qrcode"
          }
        ]
      },
      {
        "text": "Swiss QR",
        "url": "qrcode/swiss",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to set the swiss overlay of the Telerik QR Code for MVC"
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik QR Code for MVC supports different types of overlay. The swiss type of the overlay is adding a cross in the QR Code.</p>"
        }
      },
      {
        "text": "Custom Logo",
        "url": "qrcode/image",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to set the image overlay of the Telerik QR Code for MVC"
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik QR Code for MVC supports different types of overlay. The image type of the overlay is adding an image in the QR Code.</p>"
        }
      }
    ],
    "category": "Barcodes"
  },
  {
    "text": "Radar Charts",
    "name": "radar-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartRadarIcon",
    "items": [
      {
        "text": "Radar line",
        "url": "radar-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how $FRAMEWORK Radar Charts control can be added to your web page in order to visualize quantitive data. Learn how to define your radar chart."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This demo demonstrates the Radar Line type which series are represented on the chart as data points connected with straight line.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Smooth radar line",
        "url": "radar-charts/smooth-radar-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the $FRAMEWORK Radar Charts to use smooth line style (spline)."
        },
        "description": {
          "aspnet-mvc": "<p>This demo shows how to configure <em>smooth (spline)</em> radar line style for the Telerik MVC Radar Chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth polar area chart through the Series or SeriesDefaults -&gt; RadarLine -&gt; Style(ChartPolarLineStyle.Smooth) setting.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Radar area",
        "url": "radar-charts/radar-area",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure $FRAMEWORK Radar Area Chart"
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p><p>This demo shows how to create a radar area chart, which series type is represented by data points connected with straight line segments that enclose a filled area. You can configure this chart from the Series -&gt; RadarArea configuration setting.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul>"
        }
      },
      {
        "text": "Radar column",
        "url": "radar-charts/radar-column",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how to display a $FRAMEWORK Radar Column Chart"
        },
        "description": {
          "aspnet-mvc": "<p>This example displays how to create a radar column chart, which series type is represented as data columns whose height varies according to their value.</p> <p>You can configure this chart from the Series -&gt; RadarColumn configuration setting.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "radar-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how $FRAMEWORK Radar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "radar-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how $FRAMEWORK Radar chart can use existing objects as data points."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Radar chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the ProteinQualityData list located in the \\Models\\Chart\\ChartDataRepository.Radar.cs file as a model. After that you should configure the data bound Score and Abbr fields for the Series and Categories. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to grouped data",
        "url": "radar-charts/grouped-data",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "With this example you will learn how to bind grouping data to $FRAMEWORK Radar Charts."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">ASP.NET MVC DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/overview\">ASP.NET MVC DataSource control</a>.</li> <li>Set the <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the \"Category\" field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Category))</li> <li>Bind the RadarColumn values of the series to the corresponding data source field (e.g., the \"Frequency\" and \"DirText\" fields): series.RadarColumn(model =&gt; model.Frequency, categoryExpression: model =&gt; model.DirText)</li> <li>Hide the Value Axis: ValueAxis -&gt; Visible(false) </li> </ol> <p>This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g. \"Category\"). </p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Range Bar Charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "range-bar-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates the basic usage of ASP.NET MVC Range Bar Chart which enables the user to show customized range bar charts."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This demo shows how to create a Range Bar chart, which displays data as bars where each bar represents a value range that spans between its minimum (i.e., From property) and maximum (i.e., To property) levels. A Range Bar type has floating bars unlike the standard Ba chart that has anchored bars to its x-axis.</p> <p>This chart type is useful for comparing the low and high levels of value ranges (e.g., employees' working time, blood glucose levels per day, average minimum and maximum temperatures and rainfalls over time, etc.).</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "range-bar-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the local data-binding is supported in ASP.NET MVC Range Bar Charts. Use the demo source code to try the feature of the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Range Bar chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can learn from this demo how to bind the chart using the server approach. You need to create an action method and pass the RangeBarChartsLocalDataViewModel list model. After that you should configure the data bound FromA, ToA, FromB and ToB fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "range-bar-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how ASP.NET MVC Range Bar Chart component can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "spriteCssClass": "chartRangeBarIcon",
    "name": "range-bar-charts",
    "category": "Charts"
  },
  {
    "text": "Range Area Charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "range-area-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates the basic usage of ASP.NET MVC Range Area Chart which enables the user to show customized range area charts."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, area, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This demo shows how to create a Range Area chart, which displays data as area where the area is filled between its minimum (i.e., From property) and maximum (i.e., To property) levels.</p> <p>This chart type is useful for comparing the low and high levels of value ranges (e.g., employees' working time, blood glucose levels per day, average minimum and maximum temperatures and rainfalls over time, etc.).</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "range-area-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the local data-binding is supported in ASP.NET MVC Range Area Charts. Use the demo source code to try the feature of the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Range Area chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can learn from this demo how to bind the chart using the server approach. You need to create an action method and pass the data that should be populated in the cart. After that you should configure the data bound FromA, ToA, FromB and ToB fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "range-area-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how ASP.NET MVC Range Area Chart component can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "spriteCssClass": "chartRangeAreaIcon",
    "name": "range-area-charts",
    "category": "Charts"
  },
  {
    "text": "Scatter Charts",
    "name": "scatter-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartScatterIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "scatter-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example shows the most important features and functionality of $FRAMEWORK Scatter Charts."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>You can see in this sample demonstration of a Scatter chart, which shows data as points defined by their items' values. Scatter charts are useful for showing the relation between different sets of data, for example scientific (experimental) results.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Scatter line chart",
        "url": "scatter-charts/scatter-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This sample demonstrates how $FRAMEWORK Scatter Line Charts combines Line and Scatter chart types in your rich data visualizations."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how to create a scatter line chart, which is useful for displaying numerical data.</p> <p>You can define the scatter line series through the Series -&gt; ScatterLine setting.</p>"
        },
        "group": "Scatter Chart Types",
        "links": [
          {
            "text": "Scatter Charts Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/scatter-charts"
          }
        ]
      },
      {
        "text": "Smooth scatter line",
        "url": "scatter-charts/smooth-scatter-line",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to configure the $FRAMEWORK Scatter Line Chart to use smooth line (spline) style."
        },
        "description": {
          "aspnet-mvc": "<p>This example demonstrates how to create a smoother scatter line chart, in which the series items are connected with a fitted curve which represents a rough approximation of the missing data points.</p> <p>You can define the scatter line series through the Series -&gt; ScatterLine -&gt; Style(ChartScatterLineStyle.Smooth) setting.</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "scatter-charts/date-axis",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates all properties, specific to date value axis of $FRAMEWORK Scatter Charts."
        },
        "group": "Functionality",
        "description": {
          "aspnet-mvc": "<p>This example illustrates how to data bind date time spans with Scatter Charts using a <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">server binding</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Arranging the Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/scatter-charts#arranging-the-axes"
          }
        ]
      },
      {
        "text": "Multi-axis",
        "url": "scatter-charts/multiple-axes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates how array of values for multi-axis $FRAMEWORK Scatter Charts are displayed on the plot area."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK Scatter chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example shows a Dyno run report and includes information for the: <em>torgue and power</em>. Note that each of them has unique name which is set through the <strong>XAxis and YAxis Title </strong>method.</p>"
        },
        "links": [
          {
            "text": "Setting Multiple Axes",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/chart-types/scatter-charts#setting-multiple-axes"
          }
        ]
      },
      {
        "text": "Pan and zoom",
        "url": "scatter-charts/pan-and-zoom",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we demonstrate how to enable pan and zoom effects in ASP.NET MVC Scatter Charts."
        },
        "description": {
          "aspnet-mvc": "<p>The Pan and Zoom features allow you to navigate through and zoom in/out the Telerik MVC Scatter Chart.</p><p>You can enable the pan feature through the Pannable setting and the Zoom set the Zoomable configuration option.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "scatter-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how scatter series of $FRAMEWORK Scatter Charts can be bound to remote data source items."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "scatter-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how $FRAMEWORK Scatter Charts can use local objects as data points in the HTML5 visualization."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Area chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the PricePerformanceData list located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound fields for the Series: series.Scatter(model => model.Price, model => model.Performance). Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to grouped data",
        "url": "scatter-charts/grouped-data",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how define a group of values in $FRAMEWORK Scatter Charts by configuring the parameters in the DataSource component."
        },
        "description": {
          "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">ASP.NET MVC DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/overview\">ASP.NET MVC DataSource control</a>.</li> <li>Set the <a href=\"https://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the \"Symbol\" field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the \"Date\" and \"Close\" fields): series.ScatterLine(model =&gt; model.Date, model =&gt; model.Close)</li> </ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g., &ldquo;Symbol&rdquo;). &nbsp;Since the &ldquo;Symbol&rdquo; field in this example contains three distinct values (&ldquo;1. GOOG (close)&rdquo;, &ldquo;2. AAPL (close)&rdquo; and &ldquo;3. AMZN (close)&rdquo;) the chart will create three series as well.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Sparklines",
    "name": "sparklines",
    "api": "dataviz/sparkline",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/sparkline"
    },
    "spriteCssClass": "sparklineIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "sparklines/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example demonstrates the common usage of Telerik $FRAMEWORK Sparklines."
        },
        "description": {
          "aspnet-mvc": "<p>A Sparkline is a very small chart, drawn without axes, coordinates, legend, title and other chart-specific elements. It behaves like an inline element (rendered inside a span) as opposed to the standard charts, which behave like block elements (rendered inside divs) so that it can be easily embedded in text.</p> <p>You can specify the sparkline type through the Type() method: <pre>.Type(SparklineType.[Area|Bar|Bullet|Column|Line|Pie])</pre></p>"
        },
        "links": [
          {
            "text": "Sparkline Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/sparkline/overview"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "sparklines/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This $FRAMEWORK Demo shows how to bind to remote data in $FRAMEWORK Sparklines charting control."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Sparklines offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/charts/sparkline/data-binding#binding-to-local-data\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/charts/sparkline/data-binding#binding-to-remote-data\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "links": [
          {
            "text": "Sparkline Binding To Remote Data Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to local data",
        "url": "sparklines/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "Learn how to bind local data to $FRAMEWORK Sparkline charting component. Try it now!"
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Area chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/charts/sparkline/data-binding#binding-to-local-data\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/html-helpers/charts/sparkline/data-binding#binding-to-remote-data\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the CompensationData list located in the <code>\\Models\\Chart\\ChartDataRepository.cs</code> file as a model. After that you should configure the data bound fields for the Series, i.e. <pre> .ValueAxis(axis => axis.Numeric().Max(50))</pre>. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "sources": {
          "aspnet-mvc": [
            {
              "name": "CompensationStats.cs",
              "url": "~/Models/CompensationStats.cs"
            }
          ]
        },
        "links": [
          {
            "text": "Sparkline Binding To Local Data Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding#local-data"
          }
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Stock Charts",
    "name": "financial",
    "api": "dataviz/stockchart",
    "documentation": {
      "aspnet-mvc": "helpers/stockchart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "spriteCssClass": "chartStockIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "financial/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "See how you can implement $FRAMEWORK stock chart in your financial app."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Stock Chart type, demonstrated in this example, can visualize the price movements of any financial instrument over the time. The chart describes the high, low, opening and closing prices for a single day by combining the Bar and Line charts. The High price is represented by the top of the upper thin line, while the Low price by the bottom of the lower line. The Open and Close prices are represented by the wide part (the body) of the item. If the close price is higher than the open price, the body is hollowed (usually colored white or green), otherwise it is filled (usually colored black or red). <br /> <br /> The financial chart also offers zooming and scrolling functionality, which is exposed by the Navigator pane, located below the main chart.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Multiple panes",
        "url": "financial/panes",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo illustrates the use of multiple graph panes in $FRAMEWORK Stock chart."
        },
        "description": {
          "aspnet-mvc": "<p>This demo illustrates the use of multiple graph panes in $FRAMEWORK Stock chart. You can define a pane through the Panes collection and set it&rsquo;s a title and height:</p> <p>panes.Add(\"volumePane\").Title(\"Volume\").Height(150);</p> <p>If you want to render a specific axis inside the newly create pane with name volumePane use the ValueAxis -&gt; Pane setting: ValueAxis(axis =&gt; axis.Numeric(\"volumeAxis\").Pane(\"volumePane\").Visible(false))</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Virtualization",
        "url": "financial/virtualization",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "In this example we show you how the virtualization works in $FRAMEWORK  Stock Chart for rich data visualization."
        },
        "description": {
          "aspnet-mvc": "<p>In this example you can see how the virtualization works in $FRAMEWORK Stock Chart for rich data visualization. To enable it you have to set the true parameter of the DataSource -&gt; ServerOperation(true) method.</p>"
        },
        "links": [
          {
            "text": "Stock Chart Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/stockchart/data-binding"
          }
        ]
      },
      {
        "text": "PDF Export",
        "url": "financial/pdf-export",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how to save the Stock Chart as PDF directly in the browser."
        },
        "description": {
          "aspnet-mvc": "<p>This example shows how to configure the PDF export settings of the Telerik MVC Charting helper. </p> <p>You can specify the Author, Creator, Date, FileName, AllPages, PaperSize, ProxyURL and other options, through the <strong>PDF</strong> property of the Chart helper.</p> The <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-saveAsPDF\">saveAsPDF</a> or <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a> methods can be used to trigger export operation.</p>"
        }
      },
      {
        "text": "Stock History",
        "url": "financial/stock-history",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The Stock History Dashboard demonstrates how the charting components in ASP.NET MVC are used to build a complex finance application."
        },
        "description": {
          "aspnet-mvc": "<p>The Stock History Dashboard demonstrates how the charting components in ASP.NET MVC are used to build a complex finance application.</p>"
        }
      }
    ],
    "category": "Charts"
  },
  {
    "text": "TreeMap",
    "spriteCssClass": "treemapIcon",
    "api": "dataviz/treemap",
    "documentation": {
      "aspnet-mvc": "helpers/treemap/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=1622"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/treemap"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "treemap/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "The demo shows how you can use the ASP.NET MVC TreeMap control for visualization of hierarchical data in a traditional tree structure."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC TreeMap component suits perfectly for visualization of hierarchical data in a traditional tree structure. The extension provides three options (Squarified, Horizontal and Vertical) for displaying the data, which could be managed by the Type treemap setting.</p> <p>The main advantages of the control are that you could:</p> <ul> <li>Visualize huge data in a meaningful and colorized way (i.e. files system structure divided by size; the popularity of different tech devices on the market, and other)</li> <li>Optimize space on your web page by its compact structure</li> </ul> <p>You can learn more in the documentation: <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/treemap/overview\" target=\"_blank\">TreeMap</a>.</p>"
        },
        "links": [
          {
            "text": "TreeMap HtmlHelper Overview Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/treemap/overview"
          }
        ]
      },
      {
        "text": "Events",
        "url": "treemap/events",
        "deferred": true,
        "hasConsole": true,
        "meta": {
          "aspnet-mvc": ""
        },
        "description": {
          "aspnet-mvc": "<p>The sample demonstrates the usage of the ItemCreated and DataBound events of the MVC Treemap helper. The ItemCreated event is fired when a tile has been created, while the DataBound one is triggered when the component is bound to data from its DataSource.</p>"
        },
        "links": [
          {
            "text": "TreeMap Events Documentation",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/treemap/overview#events"
          }
        ]
      }
    ],
    "name": "treemap",
    "category": "Charts"
  },
  {
    "text": "Waterfall Charts",
    "name": "waterfall-charts",
    "api": "dataviz/chart",
    "documentation": {
      "aspnet-mvc": "helpers/chart/overview"
    },
    "forum": {
      "aspnet-mvc": "aspnet-mvc?tagId=232"
    },
    "codelibrary": {
      "aspnet-mvc": "aspnet-mvc/chart"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "waterfall-charts/index",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates the basic usage of ASP.NET MVC Waterfall Chart."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik $FRAMEWORK chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"https://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p>A Waterfall chart type shows the cumulative effect of positive or negative values on the starting point. Its purpose is to provide a better understanding of how an initial amount is influenced by subsequently added positive or negative values. A Waterfall chart is useful for different types of quantitative analysis related to inventory, cash flows, performance, etc.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"https://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Horizontal Waterfall",
        "url": "waterfall-charts/horizontal",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This example illustrates how to set the ASP.NET MVC Waterfall Chart orientation."
        },
        "description": {
          "aspnet-mvc": "<p>A Horizontal Waterfall chart type shows the cumulative effect of positive or negative values on the starting point. You can use it to provide a better understanding of how an initial amount is influenced by subsequently added positive or negative values. A Horizontal Waterfall chart is useful for different types of quantitative analysis related to inventory, cash flows, performance, etc. This chart type looks like a Range Bar chart where the low or high value of a subsequent item is connected to the preceding one with a thin line.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "waterfall-charts/local-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how the local data-binding is supported in ASP.NET MVC Waterfall Charts. Use the demo source code to try the feature of the component."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC waterfall chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the strongly typed server approach. You need to create an action method and supply the CashFlowData model array. After that you should configure the data bound fields for the Series: .Series(series => series.Waterfall(model => model.Amount, model => model.Period, model => model.Summary)) </p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">the Getting Started section</a> of the product documentation.</p>"
        },
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "waterfall-charts/remote-data-binding",
        "deferred": true,
        "meta": {
          "aspnet-mvc": "This demo shows how ASP.NET MVC Waterfall Chart component can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#server-binding\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding#ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"https://docs.telerik.com/aspnet-mvc/helpers/charts/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "links": [
          {
            "text": "Charts Data Binding",
            "url": "https://docs.telerik.com/aspnet-mvc/html-helpers/charts/data-binding"
          }
        ]
      }
    ],
    "spriteCssClass": "chartWaterfallIcon",
    "category": "Charts"
  }
]